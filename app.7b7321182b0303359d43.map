{"version":3,"file":"app.7b7321182b0303359d43.js","sources":["webpack:///./~/@angular/forms/src/directives/abstract_form_group_directive.js","webpack:///./~/rxjs/observable/PromiseObservable.js","webpack:///./~/rxjs/observable/fromPromise.js","webpack:///./~/rxjs/operator/toPromise.js","webpack:///./~/@angular/forms/src/directives/ng_form.js","webpack:///./demo/demo.scss?eff5","webpack:///./src/a2d3.scss?46cb","webpack:///./src/common/popover/popover.scss?3811","webpack:///./demo/bootstrap.ts","webpack:///./~/@angular/forms/src/directives/reactive_directives/form_group_directive.js","webpack:///./~/@angular/forms/src/directives/reactive_directives/form_group_name.js","webpack:///./~/@angular/forms/src/directives/checkbox_value_accessor.js","webpack:///./~/@angular/forms/src/directives/default_value_accessor.js","webpack:///./~/@angular/forms/src/directives/ng_model_group.js","webpack:///./~/@angular/forms/src/directives/radio_control_value_accessor.js","webpack:///./~/@angular/forms/src/directives/reactive_errors.js","webpack:///./~/@angular/forms/src/directives/select_control_value_accessor.js","webpack:///./~/@angular/forms/src/directives/select_multiple_control_value_accessor.js","webpack:///./~/@angular/forms/src/model.js","webpack:///./src/common/base-chart.component.ts","webpack:///./src/common/view-dimensions.helper.ts","webpack:///./src/utils/color-sets.ts","webpack:///./~/@angular/forms/src/directives/abstract_control_directive.js","webpack:///./~/@angular/forms/src/directives/ng_control_status.js","webpack:///./~/@angular/forms/src/directives/ng_model.js","webpack:///./~/@angular/forms/src/directives/number_value_accessor.js","webpack:///./~/@angular/forms/src/directives/reactive_directives/form_control_directive.js","webpack:///./~/@angular/forms/src/directives/reactive_directives/form_control_name.js","webpack:///./~/@angular/forms/src/directives/validators.js","webpack:///./~/css-loader/lib/css-base.js","webpack:///./~/@angular/forms/src/facade/lang.js","webpack:///./~/style-loader/addStyles.js","webpack:///./~/@angular/forms/src/directives/error_examples.js","webpack:///./~/@angular/forms/src/directives/template_driven_errors.js","webpack:///./~/@angular/forms/src/form_builder.js","webpack:///./src/common/grid-layout.helper.ts","webpack:///./~/@angular/forms/src/directives/control_value_accessor.js","webpack:///./src/common/tick-format.helper.ts","webpack:///./~/@angular/forms/src/facade/collection.js","webpack:///./~/@angular/forms/src/validators.js","webpack:///./src/utils/object-id.ts","webpack:///./~/@angular/forms/index.js","webpack:///./demo/app.ts","webpack:///./src/A2D3Module.ts","webpack:///./~/@angular/forms/src/directives/control_container.js","webpack:///./~/@angular/forms/src/directives.js","webpack:///./~/@angular/forms/src/directives/normalize_validator.js","webpack:///./~/@angular/forms/src/form_providers.js","webpack:///./~/@angular/forms/src/forms.js","webpack:///./demo/chartTypes.ts","webpack:///./demo/data.ts","webpack:///./src/area-chart/area-chart-normalized.component.ts","webpack:///./src/area-chart/area-chart-stacked.component.ts","webpack:///./src/area-chart/area-chart.component.ts","webpack:///./src/area-chart/area-chart.module.ts","webpack:///./src/area-chart/area-series.component.ts","webpack:///./src/bar-chart/bar-chart.module.ts","webpack:///./src/bar-chart/bar-horizontal-2d.component.ts","webpack:///./src/bar-chart/bar-horizontal-normalized.component.ts","webpack:///./src/bar-chart/bar-horizontal-stacked.component.ts","webpack:///./src/bar-chart/bar-horizontal.component.ts","webpack:///./src/bar-chart/bar-vertical-2d.component.ts","webpack:///./src/bar-chart/bar-vertical-normalized.component.ts","webpack:///./src/bar-chart/bar-vertical-stacked.component.ts","webpack:///./src/bar-chart/bar-vertical.component.ts","webpack:///./src/bar-chart/bar.component.ts","webpack:///./src/bar-chart/date-bar.component.ts","webpack:///./src/bar-chart/series-horizontal.component.ts","webpack:///./src/bar-chart/series-vertical.component.ts","webpack:///./src/common/area.component.ts","webpack:///./src/common/axes/axes-module.component.ts","webpack:///./src/common/axes/axis-label.component.ts","webpack:///./src/common/axes/x-axis-ticks.component.ts","webpack:///./src/common/axes/x-axis.component.ts","webpack:///./src/common/axes/y-axis-ticks.component.ts","webpack:///./src/common/axes/y-axis.component.ts","webpack:///./src/common/charts/chart.component.ts","webpack:///./src/common/circle-series.component.ts","webpack:///./src/common/circle.component.ts","webpack:///./src/common/grid-panel-series.component.ts","webpack:///./src/common/grid-panel.component.ts","webpack:///./src/common/legend.component.ts","webpack:///./src/common/popover/popover-registry.service.ts","webpack:///./src/common/popover/position.helper.ts","webpack:///./src/common/popover/sw-popover.component.ts","webpack:///./src/common/scale-legend.component.ts","webpack:///./src/common/svg-linear-gradient.component.ts","webpack:///./src/common/svg-radial-gradient.component.ts","webpack:///./src/common/timeline.component.ts","webpack:///./src/heat-map/heat-map-cell-series.component.ts","webpack:///./src/heat-map/heat-map-cell.component.ts","webpack:///./src/heat-map/heat-map.component.ts","webpack:///./src/heat-map/heat-map.module.ts","webpack:///./src/line-chart/line-chart-2d.component.ts","webpack:///./src/line-chart/line-chart.component.ts","webpack:///./src/line-chart/line-chart.module.ts","webpack:///./src/line-chart/line-series.component.ts","webpack:///./src/line-chart/line.component.ts","webpack:///./src/number-card/card-series.component.ts","webpack:///./src/number-card/card.component.ts","webpack:///./src/number-card/number-card.component.ts","webpack:///./src/number-card/number-card.module.ts","webpack:///./src/pie-chart/advanced-pie-chart.component.ts","webpack:///./~/@angular/forms/src/directives/shared.js","webpack:///./src/pie-chart/pie-arc.component.ts","webpack:///./src/pie-chart/pie-chart.component.ts","webpack:///./src/pie-chart/pie-chart.module.ts","webpack:///./src/pie-chart/pie-grid-series.component.ts","webpack:///./src/pie-chart/pie-grid.component.ts","webpack:///./src/pie-chart/pie-label.component.ts","webpack:///./src/pie-chart/pie-series.component.ts","webpack:///./src/tree-map/tree-map-cell-series.component.ts","webpack:///./src/tree-map/tree-map-cell.component.ts","webpack:///./src/tree-map/tree-map.component.ts","webpack:///./src/common/common.module.ts","webpack:///./src/tree-map/tree-map.module.ts","webpack:///./src/utils/throttle.ts","webpack:///./~/@angular/forms/src/directives/ng_control.js","webpack:///./src/common/trim-label.helper.ts","webpack:///./demo/demo.scss","webpack:///./src/a2d3.scss","webpack:///./src/common/popover/popover.scss","webpack:///./~/@angular/forms/src/facade/async.js"],"sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { ControlContainer } from './control_container';\nimport { composeAsyncValidators, composeValidators, controlPath } from './shared';\n/**\n * This is a base class for code shared between {@link NgModelGroup} and {@link FormGroupName}.\n *\n * @stable\n */\nexport var AbstractFormGroupDirective = (function (_super) {\n    __extends(AbstractFormGroupDirective, _super);\n    function AbstractFormGroupDirective() {\n        _super.apply(this, arguments);\n    }\n    AbstractFormGroupDirective.prototype.ngOnInit = function () {\n        this._checkParentType();\n        this.formDirective.addFormGroup(this);\n    };\n    AbstractFormGroupDirective.prototype.ngOnDestroy = function () {\n        if (this.formDirective) {\n            this.formDirective.removeFormGroup(this);\n        }\n    };\n    Object.defineProperty(AbstractFormGroupDirective.prototype, \"control\", {\n        /**\n         * Get the {@link FormGroup} backing this binding.\n         */\n        get: function () { return this.formDirective.getFormGroup(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractFormGroupDirective.prototype, \"path\", {\n        /**\n         * Get the path to this control group.\n         */\n        get: function () { return controlPath(this.name, this._parent); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractFormGroupDirective.prototype, \"formDirective\", {\n        /**\n         * Get the {@link Form} to which this group belongs.\n         */\n        get: function () { return this._parent ? this._parent.formDirective : null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractFormGroupDirective.prototype, \"validator\", {\n        get: function () { return composeValidators(this._validators); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractFormGroupDirective.prototype, \"asyncValidator\", {\n        get: function () { return composeAsyncValidators(this._asyncValidators); },\n        enumerable: true,\n        configurable: true\n    });\n    /** @internal */\n    AbstractFormGroupDirective.prototype._checkParentType = function () { };\n    return AbstractFormGroupDirective;\n}(ControlContainer));\n//# sourceMappingURL=abstract_form_group_directive.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@angular/forms/src/directives/abstract_form_group_directive.js\n// module id = 108\n// module chunks = 1","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar root_1 = require('../util/root');\nvar Observable_1 = require('../Observable');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar PromiseObservable = (function (_super) {\n    __extends(PromiseObservable, _super);\n    function PromiseObservable(promise, scheduler) {\n        _super.call(this);\n        this.promise = promise;\n        this.scheduler = scheduler;\n    }\n    /**\n     * Converts a Promise to an Observable.\n     *\n     * <span class=\"informal\">Returns an Observable that just emits the Promise's\n     * resolved value, then completes.</span>\n     *\n     * Converts an ES2015 Promise or a Promises/A+ spec compliant Promise to an\n     * Observable. If the Promise resolves with a value, the output Observable\n     * emits that resolved value as a `next`, and then completes. If the Promise\n     * is rejected, then the output Observable emits the corresponding Error.\n     *\n     * @example <caption>Convert the Promise returned by Fetch to an Observable</caption>\n     * var result = Rx.Observable.fromPromise(fetch('http://myserver.com/'));\n     * result.subscribe(x => console.log(x), e => console.error(e));\n     *\n     * @see {@link bindCallback}\n     * @see {@link from}\n     *\n     * @param {Promise<T>} promise The promise to be converted.\n     * @param {Scheduler} [scheduler] An optional Scheduler to use for scheduling\n     * the delivery of the resolved value (or the rejection).\n     * @return {Observable<T>} An Observable which wraps the Promise.\n     * @static true\n     * @name fromPromise\n     * @owner Observable\n     */\n    PromiseObservable.create = function (promise, scheduler) {\n        return new PromiseObservable(promise, scheduler);\n    };\n    PromiseObservable.prototype._subscribe = function (subscriber) {\n        var _this = this;\n        var promise = this.promise;\n        var scheduler = this.scheduler;\n        if (scheduler == null) {\n            if (this._isScalar) {\n                if (!subscriber.closed) {\n                    subscriber.next(this.value);\n                    subscriber.complete();\n                }\n            }\n            else {\n                promise.then(function (value) {\n                    _this.value = value;\n                    _this._isScalar = true;\n                    if (!subscriber.closed) {\n                        subscriber.next(value);\n                        subscriber.complete();\n                    }\n                }, function (err) {\n                    if (!subscriber.closed) {\n                        subscriber.error(err);\n                    }\n                })\n                    .then(null, function (err) {\n                    // escape the promise trap, throw unhandled errors\n                    root_1.root.setTimeout(function () { throw err; });\n                });\n            }\n        }\n        else {\n            if (this._isScalar) {\n                if (!subscriber.closed) {\n                    return scheduler.schedule(dispatchNext, 0, { value: this.value, subscriber: subscriber });\n                }\n            }\n            else {\n                promise.then(function (value) {\n                    _this.value = value;\n                    _this._isScalar = true;\n                    if (!subscriber.closed) {\n                        subscriber.add(scheduler.schedule(dispatchNext, 0, { value: value, subscriber: subscriber }));\n                    }\n                }, function (err) {\n                    if (!subscriber.closed) {\n                        subscriber.add(scheduler.schedule(dispatchError, 0, { err: err, subscriber: subscriber }));\n                    }\n                })\n                    .then(null, function (err) {\n                    // escape the promise trap, throw unhandled errors\n                    root_1.root.setTimeout(function () { throw err; });\n                });\n            }\n        }\n    };\n    return PromiseObservable;\n}(Observable_1.Observable));\nexports.PromiseObservable = PromiseObservable;\nfunction dispatchNext(arg) {\n    var value = arg.value, subscriber = arg.subscriber;\n    if (!subscriber.closed) {\n        subscriber.next(value);\n        subscriber.complete();\n    }\n}\nfunction dispatchError(arg) {\n    var err = arg.err, subscriber = arg.subscriber;\n    if (!subscriber.closed) {\n        subscriber.error(err);\n    }\n}\n//# sourceMappingURL=PromiseObservable.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/observable/PromiseObservable.js\n// module id = 1083\n// module chunks = 1","\"use strict\";\nvar PromiseObservable_1 = require('./PromiseObservable');\nexports.fromPromise = PromiseObservable_1.PromiseObservable.create;\n//# sourceMappingURL=fromPromise.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/observable/fromPromise.js\n// module id = 1084\n// module chunks = 1","\"use strict\";\nvar root_1 = require('../util/root');\n/**\n * @param PromiseCtor\n * @return {Promise<T>}\n * @method toPromise\n * @owner Observable\n */\nfunction toPromise(PromiseCtor) {\n    var _this = this;\n    if (!PromiseCtor) {\n        if (root_1.root.Rx && root_1.root.Rx.config && root_1.root.Rx.config.Promise) {\n            PromiseCtor = root_1.root.Rx.config.Promise;\n        }\n        else if (root_1.root.Promise) {\n            PromiseCtor = root_1.root.Promise;\n        }\n    }\n    if (!PromiseCtor) {\n        throw new Error('no Promise impl found');\n    }\n    return new PromiseCtor(function (resolve, reject) {\n        var value;\n        _this.subscribe(function (x) { return value = x; }, function (err) { return reject(err); }, function () { return resolve(value); });\n    });\n}\nexports.toPromise = toPromise;\n//# sourceMappingURL=toPromise.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/toPromise.js\n// module id = 1085\n// module chunks = 1","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { Directive, Inject, Optional, Self, forwardRef } from '@angular/core';\nimport { EventEmitter } from '../facade/async';\nimport { ListWrapper } from '../facade/collection';\nimport { isPresent } from '../facade/lang';\nimport { FormGroup } from '../model';\nimport { NG_ASYNC_VALIDATORS, NG_VALIDATORS } from '../validators';\nimport { ControlContainer } from './control_container';\nimport { composeAsyncValidators, composeValidators, setUpControl, setUpFormContainer } from './shared';\nexport var formDirectiveProvider = {\n    provide: ControlContainer,\n    useExisting: forwardRef(function () { return NgForm; })\n};\nvar resolvedPromise = Promise.resolve(null);\n/**\n * If `NgForm` is bound in a component, `<form>` elements in that component will be\n * upgraded to use the Angular form system.\n *\n * ### Typical Use\n *\n * Include `FORM_DIRECTIVES` in the `directives` section of a {@link Component} annotation\n * to use `NgForm` and its associated controls.\n *\n * ### Structure\n *\n * An Angular form is a collection of `FormControl`s in some hierarchy.\n * `FormControl`s can be at the top level or can be organized in `FormGroup`s\n * or `FormArray`s. This hierarchy is reflected in the form's `value`, a\n * JSON object that mirrors the form structure.\n *\n * ### Submission\n *\n * The `ngSubmit` event signals when the user triggers a form submission.\n *\n *  ```typescript\n * @Component({\n *   selector: 'my-app',\n *   template: `\n *     <div>\n *       <p>Submit the form to see the data object Angular builds</p>\n *       <h2>NgForm demo</h2>\n *       <form #f=\"ngForm\" (ngSubmit)=\"onSubmit(f.value)\">\n *         <h3>Control group: credentials</h3>\n *         <div ngModelGroup=\"credentials\">\n *           <p>Login: <input type=\"text\" name=\"login\" ngModel></p>\n *           <p>Password: <input type=\"password\" name=\"password\" ngModel></p>\n *         </div>\n *         <h3>Control group: person</h3>\n *         <div ngModelGroup=\"person\">\n *           <p>First name: <input type=\"text\" name=\"firstName\" ngModel></p>\n *           <p>Last name: <input type=\"text\" name=\"lastName\" ngModel></p>\n *         </div>\n *         <button type=\"submit\">Submit Form</button>\n *       <p>Form data submitted:</p>\n *       </form>\n *       <pre>{{data}}</pre>\n *     </div>\n * `,\n *   directives: []\n * })\n * export class App {\n *   constructor() {}\n *\n *   data: string;\n *\n *   onSubmit(data) {\n *     this.data = JSON.stringify(data, null, 2);\n *   }\n * }\n *  ```\n *\n *  @stable\n */\nexport var NgForm = (function (_super) {\n    __extends(NgForm, _super);\n    function NgForm(validators, asyncValidators) {\n        _super.call(this);\n        this._submitted = false;\n        this.ngSubmit = new EventEmitter();\n        this.form =\n            new FormGroup({}, composeValidators(validators), composeAsyncValidators(asyncValidators));\n    }\n    Object.defineProperty(NgForm.prototype, \"submitted\", {\n        get: function () { return this._submitted; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgForm.prototype, \"formDirective\", {\n        get: function () { return this; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgForm.prototype, \"control\", {\n        get: function () { return this.form; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgForm.prototype, \"path\", {\n        get: function () { return []; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgForm.prototype, \"controls\", {\n        get: function () { return this.form.controls; },\n        enumerable: true,\n        configurable: true\n    });\n    NgForm.prototype.addControl = function (dir) {\n        var _this = this;\n        resolvedPromise.then(function () {\n            var container = _this._findContainer(dir.path);\n            dir._control = container.registerControl(dir.name, dir.control);\n            setUpControl(dir.control, dir);\n            dir.control.updateValueAndValidity({ emitEvent: false });\n        });\n    };\n    NgForm.prototype.getControl = function (dir) { return this.form.get(dir.path); };\n    NgForm.prototype.removeControl = function (dir) {\n        var _this = this;\n        resolvedPromise.then(function () {\n            var container = _this._findContainer(dir.path);\n            if (isPresent(container)) {\n                container.removeControl(dir.name);\n            }\n        });\n    };\n    NgForm.prototype.addFormGroup = function (dir) {\n        var _this = this;\n        resolvedPromise.then(function () {\n            var container = _this._findContainer(dir.path);\n            var group = new FormGroup({});\n            setUpFormContainer(group, dir);\n            container.registerControl(dir.name, group);\n            group.updateValueAndValidity({ emitEvent: false });\n        });\n    };\n    NgForm.prototype.removeFormGroup = function (dir) {\n        var _this = this;\n        resolvedPromise.then(function () {\n            var container = _this._findContainer(dir.path);\n            if (isPresent(container)) {\n                container.removeControl(dir.name);\n            }\n        });\n    };\n    NgForm.prototype.getFormGroup = function (dir) { return this.form.get(dir.path); };\n    NgForm.prototype.updateModel = function (dir, value) {\n        var _this = this;\n        resolvedPromise.then(function () {\n            var ctrl = _this.form.get(dir.path);\n            ctrl.setValue(value);\n        });\n    };\n    NgForm.prototype.setValue = function (value) { this.control.setValue(value); };\n    NgForm.prototype.onSubmit = function () {\n        this._submitted = true;\n        this.ngSubmit.emit(null);\n        return false;\n    };\n    NgForm.prototype.onReset = function () { this.resetForm(); };\n    NgForm.prototype.resetForm = function (value) {\n        if (value === void 0) { value = undefined; }\n        this.form.reset(value);\n        this._submitted = false;\n    };\n    /** @internal */\n    NgForm.prototype._findContainer = function (path) {\n        path.pop();\n        return ListWrapper.isEmpty(path) ? this.form : this.form.get(path);\n    };\n    NgForm.decorators = [\n        { type: Directive, args: [{\n                    selector: 'form:not([ngNoForm]):not([formGroup]),ngForm,[ngForm]',\n                    providers: [formDirectiveProvider],\n                    host: { '(submit)': 'onSubmit()', '(reset)': 'onReset()' },\n                    outputs: ['ngSubmit'],\n                    exportAs: 'ngForm'\n                },] },\n    ];\n    /** @nocollapse */\n    NgForm.ctorParameters = [\n        { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALIDATORS,] },] },\n        { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_ASYNC_VALIDATORS,] },] },\n    ];\n    return NgForm;\n}(ControlContainer));\n//# sourceMappingURL=ng_form.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@angular/forms/src/directives/ng_form.js\n// module id = 109\n// module chunks = 1","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!./../node_modules/css-loader/index.js?sourceMap!./../node_modules/postcss-loader/index.js?sourceMap!./../node_modules/sass-loader/index.js?sourceMap!./demo.scss\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!./../node_modules/style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!./../node_modules/css-loader/index.js?sourceMap!./../node_modules/postcss-loader/index.js?sourceMap!./../node_modules/sass-loader/index.js?sourceMap!./demo.scss\", function() {\n\t\t\tvar newContent = require(\"!!./../node_modules/css-loader/index.js?sourceMap!./../node_modules/postcss-loader/index.js?sourceMap!./../node_modules/sass-loader/index.js?sourceMap!./demo.scss\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./demo/demo.scss\n// module id = 1093\n// module chunks = 1","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!./../node_modules/css-loader/index.js?sourceMap!./../node_modules/postcss-loader/index.js?sourceMap!./../node_modules/sass-loader/index.js?sourceMap!./a2d3.scss\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!./../node_modules/style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!./../node_modules/css-loader/index.js?sourceMap!./../node_modules/postcss-loader/index.js?sourceMap!./../node_modules/sass-loader/index.js?sourceMap!./a2d3.scss\", function() {\n\t\t\tvar newContent = require(\"!!./../node_modules/css-loader/index.js?sourceMap!./../node_modules/postcss-loader/index.js?sourceMap!./../node_modules/sass-loader/index.js?sourceMap!./a2d3.scss\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/a2d3.scss\n// module id = 1094\n// module chunks = 1","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!./../../../node_modules/css-loader/index.js?sourceMap!./../../../node_modules/postcss-loader/index.js?sourceMap!./../../../node_modules/sass-loader/index.js?sourceMap!./popover.scss\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!./../../../node_modules/style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!./../../../node_modules/css-loader/index.js?sourceMap!./../../../node_modules/postcss-loader/index.js?sourceMap!./../../../node_modules/sass-loader/index.js?sourceMap!./popover.scss\", function() {\n\t\t\tvar newContent = require(\"!!./../../../node_modules/css-loader/index.js?sourceMap!./../../../node_modules/postcss-loader/index.js?sourceMap!./../../../node_modules/sass-loader/index.js?sourceMap!./popover.scss\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/common/popover/popover.scss\n// module id = 1095\n// module chunks = 1","import { NgModule } from \"@angular/core\";\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { App } from './app';\nimport { A2D3Module } from \"../src/A2D3Module\";\n\n@NgModule({\n  imports: [A2D3Module, BrowserModule, FormsModule],\n  declarations: [App],\n  bootstrap: [App]\n})\nclass AppModule {}\n\n document.addEventListener('DOMContentLoaded', () => {\n   platformBrowserDynamic()\n    .bootstrapModule(AppModule)\n    .catch(err => console.error(err));\n });\n\n\n\n// WEBPACK FOOTER //\n// node_modules/tslint-loader!./demo/bootstrap.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { Directive, Inject, Input, Optional, Output, Self, forwardRef } from '@angular/core';\nimport { EventEmitter } from '../../facade/async';\nimport { ListWrapper, StringMapWrapper } from '../../facade/collection';\nimport { isBlank } from '../../facade/lang';\nimport { NG_ASYNC_VALIDATORS, NG_VALIDATORS, Validators } from '../../validators';\nimport { ControlContainer } from '../control_container';\nimport { ReactiveErrors } from '../reactive_errors';\nimport { cleanUpControl, composeAsyncValidators, composeValidators, setUpControl, setUpFormContainer } from '../shared';\nexport var formDirectiveProvider = {\n    provide: ControlContainer,\n    useExisting: forwardRef(function () { return FormGroupDirective; })\n};\n/**\n * Binds an existing form group to a DOM element.  It requires importing the {@link\n * ReactiveFormsModule}.\n *\n * In this example, we bind the form group to the form element, and we bind the login and\n * password controls to the login and password elements.\n *\n *  ```typescript\n * @Component({\n *   selector: 'my-app',\n *   template: `\n *     <div>\n *       <h2>Binding an existing form group</h2>\n *       <form [formGroup]=\"loginForm\">\n *         <p>Login: <input type=\"text\" formControlName=\"login\"></p>\n *         <p>Password: <input type=\"password\" formControlName=\"password\"></p>\n *       </form>\n *       <p>Value:</p>\n *       <pre>{{ loginForm.value | json}}</pre>\n *     </div>\n *   `\n * })\n * export class App {\n *   loginForm: FormGroup;\n *\n *   constructor() {\n *     this.loginForm = new FormGroup({\n *       login: new FormControl(\"\"),\n *       password: new FormControl(\"\")\n *     });\n *   }\n *\n * }\n *  ```\n *\n * We can also use setValue() to populate the form programmatically.\n *\n *  ```typescript\n * @Component({\n *      selector: \"login-comp\",\n *      template: `\n *        <form [formGroup]='loginForm'>\n *          Login <input type='text' formControlName='login'>\n *          Password <input type='password' formControlName='password'>\n *          <button (click)=\"onLogin()\">Login</button>\n *        </form>`\n *      })\n * class LoginComp {\n *  loginForm: FormGroup;\n *\n *  constructor() {\n *    this.loginForm = new FormGroup({\n *      login: new FormControl(''),\n *      password: new FormControl('')\n *    });\n *  }\n *\n *  populate() {\n *    this.loginForm.setValue({ login: 'some login', password: 'some password'});\n *  }\n *\n *  onLogin(): void {\n *    // this.credentials.login === 'some login'\n *    // this.credentials.password === 'some password'\n *  }\n * }\n *  ```\n *\n *  @stable\n */\nexport var FormGroupDirective = (function (_super) {\n    __extends(FormGroupDirective, _super);\n    function FormGroupDirective(_validators, _asyncValidators) {\n        _super.call(this);\n        this._validators = _validators;\n        this._asyncValidators = _asyncValidators;\n        this._submitted = false;\n        this.directives = [];\n        this.form = null;\n        this.ngSubmit = new EventEmitter();\n    }\n    FormGroupDirective.prototype.ngOnChanges = function (changes) {\n        this._checkFormPresent();\n        if (StringMapWrapper.contains(changes, 'form')) {\n            var sync = composeValidators(this._validators);\n            this.form.validator = Validators.compose([this.form.validator, sync]);\n            var async = composeAsyncValidators(this._asyncValidators);\n            this.form.asyncValidator = Validators.composeAsync([this.form.asyncValidator, async]);\n            this._updateDomValue(changes);\n        }\n    };\n    Object.defineProperty(FormGroupDirective.prototype, \"submitted\", {\n        get: function () { return this._submitted; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FormGroupDirective.prototype, \"formDirective\", {\n        get: function () { return this; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FormGroupDirective.prototype, \"control\", {\n        get: function () { return this.form; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FormGroupDirective.prototype, \"path\", {\n        get: function () { return []; },\n        enumerable: true,\n        configurable: true\n    });\n    FormGroupDirective.prototype.addControl = function (dir) {\n        var ctrl = this.form.get(dir.path);\n        setUpControl(ctrl, dir);\n        ctrl.updateValueAndValidity({ emitEvent: false });\n        this.directives.push(dir);\n    };\n    FormGroupDirective.prototype.getControl = function (dir) { return this.form.get(dir.path); };\n    FormGroupDirective.prototype.removeControl = function (dir) { ListWrapper.remove(this.directives, dir); };\n    FormGroupDirective.prototype.addFormGroup = function (dir) {\n        var ctrl = this.form.get(dir.path);\n        setUpFormContainer(ctrl, dir);\n        ctrl.updateValueAndValidity({ emitEvent: false });\n    };\n    FormGroupDirective.prototype.removeFormGroup = function (dir) { };\n    FormGroupDirective.prototype.getFormGroup = function (dir) { return this.form.get(dir.path); };\n    FormGroupDirective.prototype.addFormArray = function (dir) {\n        var ctrl = this.form.get(dir.path);\n        setUpFormContainer(ctrl, dir);\n        ctrl.updateValueAndValidity({ emitEvent: false });\n    };\n    FormGroupDirective.prototype.removeFormArray = function (dir) { };\n    FormGroupDirective.prototype.getFormArray = function (dir) { return this.form.get(dir.path); };\n    FormGroupDirective.prototype.updateModel = function (dir, value) {\n        var ctrl = this.form.get(dir.path);\n        ctrl.setValue(value);\n    };\n    FormGroupDirective.prototype.onSubmit = function () {\n        this._submitted = true;\n        this.ngSubmit.emit(null);\n        return false;\n    };\n    FormGroupDirective.prototype.onReset = function () { this.resetForm(); };\n    FormGroupDirective.prototype.resetForm = function (value) {\n        if (value === void 0) { value = undefined; }\n        this.form.reset(value);\n        this._submitted = false;\n    };\n    /** @internal */\n    FormGroupDirective.prototype._updateDomValue = function (changes) {\n        var _this = this;\n        var oldForm = changes['form'].previousValue;\n        this.directives.forEach(function (dir) {\n            var newCtrl = _this.form.get(dir.path);\n            var oldCtrl = oldForm.get(dir.path);\n            if (oldCtrl !== newCtrl) {\n                cleanUpControl(oldCtrl, dir);\n                if (newCtrl)\n                    setUpControl(newCtrl, dir);\n            }\n        });\n        this.form._updateTreeValidity({ emitEvent: false });\n    };\n    FormGroupDirective.prototype._checkFormPresent = function () {\n        if (isBlank(this.form)) {\n            ReactiveErrors.missingFormException();\n        }\n    };\n    FormGroupDirective.decorators = [\n        { type: Directive, args: [{\n                    selector: '[formGroup]',\n                    providers: [formDirectiveProvider],\n                    host: { '(submit)': 'onSubmit()', '(reset)': 'onReset()' },\n                    exportAs: 'ngForm'\n                },] },\n    ];\n    /** @nocollapse */\n    FormGroupDirective.ctorParameters = [\n        { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALIDATORS,] },] },\n        { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_ASYNC_VALIDATORS,] },] },\n    ];\n    FormGroupDirective.propDecorators = {\n        'form': [{ type: Input, args: ['formGroup',] },],\n        'ngSubmit': [{ type: Output },],\n    };\n    return FormGroupDirective;\n}(ControlContainer));\n//# sourceMappingURL=form_group_directive.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@angular/forms/src/directives/reactive_directives/form_group_directive.js\n// module id = 110\n// module chunks = 1","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { Directive, Host, Inject, Input, Optional, Self, SkipSelf, forwardRef } from '@angular/core';\nimport { NG_ASYNC_VALIDATORS, NG_VALIDATORS } from '../../validators';\nimport { AbstractFormGroupDirective } from '../abstract_form_group_directive';\nimport { ControlContainer } from '../control_container';\nimport { ReactiveErrors } from '../reactive_errors';\nimport { composeAsyncValidators, composeValidators, controlPath } from '../shared';\nimport { FormGroupDirective } from './form_group_directive';\nexport var formGroupNameProvider = {\n    provide: ControlContainer,\n    useExisting: forwardRef(function () { return FormGroupName; })\n};\n/**\n * Syncs an existing form group to a DOM element.\n *\n * This directive can only be used as a child of {@link FormGroupDirective}.  It also requires\n * importing the {@link ReactiveFormsModule}.\n *\n * ```typescript\n * @Component({\n *   selector: 'my-app',\n *   template: `\n *     <div>\n *       <h2>Angular FormGroup Example</h2>\n *       <form [formGroup]=\"myForm\">\n *         <div formGroupName=\"name\">\n *           <h3>Enter your name:</h3>\n *           <p>First: <input formControlName=\"first\"></p>\n *           <p>Middle: <input formControlName=\"middle\"></p>\n *           <p>Last: <input formControlName=\"last\"></p>\n *         </div>\n *         <h3>Name value:</h3>\n *         <pre>{{ myForm.get('name') | json }}</pre>\n *         <p>Name is {{myForm.get('name')?.valid ? \"valid\" : \"invalid\"}}</p>\n *         <h3>What's your favorite food?</h3>\n *         <p><input formControlName=\"food\"></p>\n *         <h3>Form value</h3>\n *         <pre> {{ myForm | json }} </pre>\n *       </form>\n *     </div>\n *   `\n * })\n * export class App {\n *   myForm = new FormGroup({\n *     name: new FormGroup({\n *       first: new FormControl('', Validators.required),\n *       middle: new FormControl(''),\n *       last: new FormControl('', Validators.required)\n *     }),\n *     food: new FormControl()\n *   });\n * }\n * ```\n *\n * This example syncs the form group for the user's name. The value and validation state of\n * this group can be accessed separately from the overall form.\n *\n * @stable\n */\nexport var FormGroupName = (function (_super) {\n    __extends(FormGroupName, _super);\n    function FormGroupName(parent, validators, asyncValidators) {\n        _super.call(this);\n        this._parent = parent;\n        this._validators = validators;\n        this._asyncValidators = asyncValidators;\n    }\n    /** @internal */\n    FormGroupName.prototype._checkParentType = function () {\n        if (_hasInvalidParent(this._parent)) {\n            ReactiveErrors.groupParentException();\n        }\n    };\n    FormGroupName.decorators = [\n        { type: Directive, args: [{ selector: '[formGroupName]', providers: [formGroupNameProvider] },] },\n    ];\n    /** @nocollapse */\n    FormGroupName.ctorParameters = [\n        { type: ControlContainer, decorators: [{ type: Optional }, { type: Host }, { type: SkipSelf },] },\n        { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALIDATORS,] },] },\n        { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_ASYNC_VALIDATORS,] },] },\n    ];\n    FormGroupName.propDecorators = {\n        'name': [{ type: Input, args: ['formGroupName',] },],\n    };\n    return FormGroupName;\n}(AbstractFormGroupDirective));\nexport var formArrayNameProvider = {\n    provide: ControlContainer,\n    useExisting: forwardRef(function () { return FormArrayName; })\n};\n/**\n * Syncs an existing form array to a DOM element.\n *\n * This directive can only be used as a child of {@link FormGroupDirective}.  It also requires\n * importing the {@link ReactiveFormsModule}.\n *\n * ```typescript\n * @Component({\n *   selector: 'my-app',\n *   template: `\n *     <div>\n *       <h2>Angular FormArray Example</h2>\n *       <form [formGroup]=\"myForm\">\n *         <div formArrayName=\"cities\">\n *           <div *ngFor=\"let city of cityArray.controls; let i=index\">\n *             <input [formControlName]=\"i\">\n *           </div>\n *         </div>\n *       </form>\n *       {{ myForm.value | json }}     // {cities: ['SF', 'NY']}\n *     </div>\n *   `\n * })\n * export class App {\n *   cityArray = new FormArray([\n *     new FormControl('SF'),\n *     new FormControl('NY')\n *   ]);\n *   myForm = new FormGroup({\n *     cities: this.cityArray\n *   });\n * }\n * ```\n *\n * @stable\n */\nexport var FormArrayName = (function (_super) {\n    __extends(FormArrayName, _super);\n    function FormArrayName(parent, validators, asyncValidators) {\n        _super.call(this);\n        this._parent = parent;\n        this._validators = validators;\n        this._asyncValidators = asyncValidators;\n    }\n    FormArrayName.prototype.ngOnInit = function () {\n        this._checkParentType();\n        this.formDirective.addFormArray(this);\n    };\n    FormArrayName.prototype.ngOnDestroy = function () {\n        if (this.formDirective) {\n            this.formDirective.removeFormArray(this);\n        }\n    };\n    Object.defineProperty(FormArrayName.prototype, \"control\", {\n        get: function () { return this.formDirective.getFormArray(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FormArrayName.prototype, \"formDirective\", {\n        get: function () {\n            return this._parent ? this._parent.formDirective : null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FormArrayName.prototype, \"path\", {\n        get: function () { return controlPath(this.name, this._parent); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FormArrayName.prototype, \"validator\", {\n        get: function () { return composeValidators(this._validators); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FormArrayName.prototype, \"asyncValidator\", {\n        get: function () { return composeAsyncValidators(this._asyncValidators); },\n        enumerable: true,\n        configurable: true\n    });\n    FormArrayName.prototype._checkParentType = function () {\n        if (_hasInvalidParent(this._parent)) {\n            ReactiveErrors.arrayParentException();\n        }\n    };\n    FormArrayName.decorators = [\n        { type: Directive, args: [{ selector: '[formArrayName]', providers: [formArrayNameProvider] },] },\n    ];\n    /** @nocollapse */\n    FormArrayName.ctorParameters = [\n        { type: ControlContainer, decorators: [{ type: Optional }, { type: Host }, { type: SkipSelf },] },\n        { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALIDATORS,] },] },\n        { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_ASYNC_VALIDATORS,] },] },\n    ];\n    FormArrayName.propDecorators = {\n        'name': [{ type: Input, args: ['formArrayName',] },],\n    };\n    return FormArrayName;\n}(ControlContainer));\nfunction _hasInvalidParent(parent) {\n    return !(parent instanceof FormGroupName) && !(parent instanceof FormGroupDirective) &&\n        !(parent instanceof FormArrayName);\n}\n//# sourceMappingURL=form_group_name.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@angular/forms/src/directives/reactive_directives/form_group_name.js\n// module id = 111\n// module chunks = 1","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Directive, ElementRef, Renderer, forwardRef } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from './control_value_accessor';\nexport var CHECKBOX_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(function () { return CheckboxControlValueAccessor; }),\n    multi: true\n};\n/**\n * The accessor for writing a value and listening to changes on a checkbox input element.\n *\n *  ### Example\n *  ```\n *  <input type=\"checkbox\" name=\"rememberLogin\" ngModel>\n *  ```\n *\n *  @stable\n */\nexport var CheckboxControlValueAccessor = (function () {\n    function CheckboxControlValueAccessor(_renderer, _elementRef) {\n        this._renderer = _renderer;\n        this._elementRef = _elementRef;\n        this.onChange = function (_) { };\n        this.onTouched = function () { };\n    }\n    CheckboxControlValueAccessor.prototype.writeValue = function (value) {\n        this._renderer.setElementProperty(this._elementRef.nativeElement, 'checked', value);\n    };\n    CheckboxControlValueAccessor.prototype.registerOnChange = function (fn) { this.onChange = fn; };\n    CheckboxControlValueAccessor.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n    CheckboxControlValueAccessor.prototype.setDisabledState = function (isDisabled) {\n        this._renderer.setElementProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n    };\n    CheckboxControlValueAccessor.decorators = [\n        { type: Directive, args: [{\n                    selector: 'input[type=checkbox][formControlName],input[type=checkbox][formControl],input[type=checkbox][ngModel]',\n                    host: { '(change)': 'onChange($event.target.checked)', '(blur)': 'onTouched()' },\n                    providers: [CHECKBOX_VALUE_ACCESSOR]\n                },] },\n    ];\n    /** @nocollapse */\n    CheckboxControlValueAccessor.ctorParameters = [\n        { type: Renderer, },\n        { type: ElementRef, },\n    ];\n    return CheckboxControlValueAccessor;\n}());\n//# sourceMappingURL=checkbox_value_accessor.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@angular/forms/src/directives/checkbox_value_accessor.js\n// module id = 143\n// module chunks = 1","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Directive, ElementRef, Renderer, forwardRef } from '@angular/core';\nimport { isBlank } from '../facade/lang';\nimport { NG_VALUE_ACCESSOR } from './control_value_accessor';\nexport var DEFAULT_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(function () { return DefaultValueAccessor; }),\n    multi: true\n};\n/**\n * The default accessor for writing a value and listening to changes that is used by the\n * {@link NgModel}, {@link FormControlDirective}, and {@link FormControlName} directives.\n *\n *  ### Example\n *  ```\n *  <input type=\"text\" name=\"searchQuery\" ngModel>\n *  ```\n *\n *  @stable\n */\nexport var DefaultValueAccessor = (function () {\n    function DefaultValueAccessor(_renderer, _elementRef) {\n        this._renderer = _renderer;\n        this._elementRef = _elementRef;\n        this.onChange = function (_) { };\n        this.onTouched = function () { };\n    }\n    DefaultValueAccessor.prototype.writeValue = function (value) {\n        var normalizedValue = isBlank(value) ? '' : value;\n        this._renderer.setElementProperty(this._elementRef.nativeElement, 'value', normalizedValue);\n    };\n    DefaultValueAccessor.prototype.registerOnChange = function (fn) { this.onChange = fn; };\n    DefaultValueAccessor.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n    DefaultValueAccessor.prototype.setDisabledState = function (isDisabled) {\n        this._renderer.setElementProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n    };\n    DefaultValueAccessor.decorators = [\n        { type: Directive, args: [{\n                    selector: 'input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]',\n                    // TODO: vsavkin replace the above selector with the one below it once\n                    // https://github.com/angular/angular/issues/3011 is implemented\n                    // selector: '[ngControl],[ngModel],[ngFormControl]',\n                    host: { '(input)': 'onChange($event.target.value)', '(blur)': 'onTouched()' },\n                    providers: [DEFAULT_VALUE_ACCESSOR]\n                },] },\n    ];\n    /** @nocollapse */\n    DefaultValueAccessor.ctorParameters = [\n        { type: Renderer, },\n        { type: ElementRef, },\n    ];\n    return DefaultValueAccessor;\n}());\n//# sourceMappingURL=default_value_accessor.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@angular/forms/src/directives/default_value_accessor.js\n// module id = 144\n// module chunks = 1","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { Directive, Host, Inject, Input, Optional, Self, SkipSelf, forwardRef } from '@angular/core';\nimport { NG_ASYNC_VALIDATORS, NG_VALIDATORS } from '../validators';\nimport { AbstractFormGroupDirective } from './abstract_form_group_directive';\nimport { ControlContainer } from './control_container';\nimport { NgForm } from './ng_form';\nimport { TemplateDrivenErrors } from './template_driven_errors';\nexport var modelGroupProvider = {\n    provide: ControlContainer,\n    useExisting: forwardRef(function () { return NgModelGroup; })\n};\n/**\n * Creates and binds a model group to a DOM element.\n *\n * This directive can only be used as a child of {@link NgForm}.\n *\n * ```typescript\n * @Component({\n *   selector: 'my-app',\n *   template: `\n *     <div>\n *       <h2>Angular forms Example</h2>\n *       <form #f=\"ngForm\">\n *         <div ngModelGroup=\"name\" #mgName=\"ngModelGroup\">\n *           <h3>Enter your name:</h3>\n *           <p>First: <input name=\"first\" ngModel required></p>\n *           <p>Middle: <input name=\"middle\" ngModel></p>\n *           <p>Last: <input name=\"last\" ngModel required></p>\n *         </div>\n *         <h3>Name value:</h3>\n *         <pre>{{ mgName.value | json }}</pre>\n *         <p>Name is {{mgName?.valid ? \"valid\" : \"invalid\"}}</p>\n *         <h3>What's your favorite food?</h3>\n *         <p><input name=\"food\" ngModel></p>\n *         <h3>Form value</h3>\n *         <pre>{{ f.value | json }}</pre>\n *       </form>\n *     </div>\n *   `\n * })\n * export class App {}\n * ```\n *\n * This example declares a model group for a user's name. The value and validation state of\n * this group can be accessed separately from the overall form.\n *\n * @stable\n */\nexport var NgModelGroup = (function (_super) {\n    __extends(NgModelGroup, _super);\n    function NgModelGroup(parent, validators, asyncValidators) {\n        _super.call(this);\n        this._parent = parent;\n        this._validators = validators;\n        this._asyncValidators = asyncValidators;\n    }\n    /** @internal */\n    NgModelGroup.prototype._checkParentType = function () {\n        if (!(this._parent instanceof NgModelGroup) && !(this._parent instanceof NgForm)) {\n            TemplateDrivenErrors.modelGroupParentException();\n        }\n    };\n    NgModelGroup.decorators = [\n        { type: Directive, args: [{ selector: '[ngModelGroup]', providers: [modelGroupProvider], exportAs: 'ngModelGroup' },] },\n    ];\n    /** @nocollapse */\n    NgModelGroup.ctorParameters = [\n        { type: ControlContainer, decorators: [{ type: Host }, { type: SkipSelf },] },\n        { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALIDATORS,] },] },\n        { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_ASYNC_VALIDATORS,] },] },\n    ];\n    NgModelGroup.propDecorators = {\n        'name': [{ type: Input, args: ['ngModelGroup',] },],\n    };\n    return NgModelGroup;\n}(AbstractFormGroupDirective));\n//# sourceMappingURL=ng_model_group.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@angular/forms/src/directives/ng_model_group.js\n// module id = 145\n// module chunks = 1","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Directive, ElementRef, Injectable, Injector, Input, Renderer, forwardRef } from '@angular/core';\nimport { ListWrapper } from '../facade/collection';\nimport { isPresent } from '../facade/lang';\nimport { NG_VALUE_ACCESSOR } from './control_value_accessor';\nimport { NgControl } from './ng_control';\nexport var RADIO_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(function () { return RadioControlValueAccessor; }),\n    multi: true\n};\n/**\n * Internal class used by Angular to uncheck radio buttons with the matching name.\n */\nexport var RadioControlRegistry = (function () {\n    function RadioControlRegistry() {\n        this._accessors = [];\n    }\n    RadioControlRegistry.prototype.add = function (control, accessor) {\n        this._accessors.push([control, accessor]);\n    };\n    RadioControlRegistry.prototype.remove = function (accessor) {\n        var indexToRemove = -1;\n        for (var i = 0; i < this._accessors.length; ++i) {\n            if (this._accessors[i][1] === accessor) {\n                indexToRemove = i;\n            }\n        }\n        ListWrapper.removeAt(this._accessors, indexToRemove);\n    };\n    RadioControlRegistry.prototype.select = function (accessor) {\n        var _this = this;\n        this._accessors.forEach(function (c) {\n            if (_this._isSameGroup(c, accessor) && c[1] !== accessor) {\n                c[1].fireUncheck(accessor.value);\n            }\n        });\n    };\n    RadioControlRegistry.prototype._isSameGroup = function (controlPair, accessor) {\n        if (!controlPair[0].control)\n            return false;\n        return controlPair[0]._parent === accessor._control._parent &&\n            controlPair[1].name === accessor.name;\n    };\n    RadioControlRegistry.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    RadioControlRegistry.ctorParameters = [];\n    return RadioControlRegistry;\n}());\n/**\n * The accessor for writing a radio control value and listening to changes that is used by the\n * {@link NgModel}, {@link FormControlDirective}, and {@link FormControlName} directives.\n *\n *  ### Example\n *  ```\n *  @Component({\n *    template: `\n *      <input type=\"radio\" name=\"food\" [(ngModel)]=\"food\" value=\"chicken\">\n *      <input type=\"radio\" name=\"food\" [(ngModel)]=\"food\" value=\"fish\">\n *    `\n *  })\n *  class FoodCmp {\n *    food = 'chicken';\n *  }\n *  ```\n */\nexport var RadioControlValueAccessor = (function () {\n    function RadioControlValueAccessor(_renderer, _elementRef, _registry, _injector) {\n        this._renderer = _renderer;\n        this._elementRef = _elementRef;\n        this._registry = _registry;\n        this._injector = _injector;\n        this.onChange = function () { };\n        this.onTouched = function () { };\n    }\n    RadioControlValueAccessor.prototype.ngOnInit = function () {\n        this._control = this._injector.get(NgControl);\n        this._checkName();\n        this._registry.add(this._control, this);\n    };\n    RadioControlValueAccessor.prototype.ngOnDestroy = function () { this._registry.remove(this); };\n    RadioControlValueAccessor.prototype.writeValue = function (value) {\n        this._state = value === this.value;\n        if (isPresent(value)) {\n            this._renderer.setElementProperty(this._elementRef.nativeElement, 'checked', this._state);\n        }\n    };\n    RadioControlValueAccessor.prototype.registerOnChange = function (fn) {\n        var _this = this;\n        this._fn = fn;\n        this.onChange = function () {\n            fn(_this.value);\n            _this._registry.select(_this);\n        };\n    };\n    RadioControlValueAccessor.prototype.fireUncheck = function (value) { this.writeValue(value); };\n    RadioControlValueAccessor.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n    RadioControlValueAccessor.prototype.setDisabledState = function (isDisabled) {\n        this._renderer.setElementProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n    };\n    RadioControlValueAccessor.prototype._checkName = function () {\n        if (this.name && this.formControlName && this.name !== this.formControlName) {\n            this._throwNameError();\n        }\n        if (!this.name && this.formControlName)\n            this.name = this.formControlName;\n    };\n    RadioControlValueAccessor.prototype._throwNameError = function () {\n        throw new Error(\"\\n      If you define both a name and a formControlName attribute on your radio button, their values\\n      must match. Ex: <input type=\\\"radio\\\" formControlName=\\\"food\\\" name=\\\"food\\\">\\n    \");\n    };\n    RadioControlValueAccessor.decorators = [\n        { type: Directive, args: [{\n                    selector: 'input[type=radio][formControlName],input[type=radio][formControl],input[type=radio][ngModel]',\n                    host: { '(change)': 'onChange()', '(blur)': 'onTouched()' },\n                    providers: [RADIO_VALUE_ACCESSOR]\n                },] },\n    ];\n    /** @nocollapse */\n    RadioControlValueAccessor.ctorParameters = [\n        { type: Renderer, },\n        { type: ElementRef, },\n        { type: RadioControlRegistry, },\n        { type: Injector, },\n    ];\n    RadioControlValueAccessor.propDecorators = {\n        'name': [{ type: Input },],\n        'formControlName': [{ type: Input },],\n        'value': [{ type: Input },],\n    };\n    return RadioControlValueAccessor;\n}());\n//# sourceMappingURL=radio_control_value_accessor.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@angular/forms/src/directives/radio_control_value_accessor.js\n// module id = 146\n// module chunks = 1","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { FormErrorExamples as Examples } from './error_examples';\nexport var ReactiveErrors = (function () {\n    function ReactiveErrors() {\n    }\n    ReactiveErrors.controlParentException = function () {\n        throw new Error(\"formControlName must be used with a parent formGroup directive.  You'll want to add a formGroup\\n       directive and pass it an existing FormGroup instance (you can create one in your class).\\n\\n      Example:\\n\\n      \" + Examples.formControlName);\n    };\n    ReactiveErrors.ngModelGroupException = function () {\n        throw new Error(\"formControlName cannot be used with an ngModelGroup parent. It is only compatible with parents\\n       that also have a \\\"form\\\" prefix: formGroupName, formArrayName, or formGroup.\\n\\n       Option 1:  Update the parent to be formGroupName (reactive form strategy)\\n\\n        \" + Examples.formGroupName + \"\\n\\n        Option 2: Use ngModel instead of formControlName (template-driven strategy)\\n\\n        \" + Examples.ngModelGroup);\n    };\n    ReactiveErrors.missingFormException = function () {\n        throw new Error(\"formGroup expects a FormGroup instance. Please pass one in.\\n\\n       Example:\\n\\n       \" + Examples.formControlName);\n    };\n    ReactiveErrors.groupParentException = function () {\n        throw new Error(\"formGroupName must be used with a parent formGroup directive.  You'll want to add a formGroup\\n      directive and pass it an existing FormGroup instance (you can create one in your class).\\n\\n      Example:\\n\\n      \" + Examples.formGroupName);\n    };\n    ReactiveErrors.arrayParentException = function () {\n        throw new Error(\"formArrayName must be used with a parent formGroup directive.  You'll want to add a formGroup\\n       directive and pass it an existing FormGroup instance (you can create one in your class).\\n\\n        Example:\\n\\n        \" + Examples.formArrayName);\n    };\n    ReactiveErrors.disabledAttrWarning = function () {\n        console.warn(\"\\n      It looks like you're using the disabled attribute with a reactive form directive. If you set disabled to true\\n      when you set up this control in your component class, the disabled attribute will actually be set in the DOM for\\n      you. We recommend using this approach to avoid 'changed after checked' errors.\\n       \\n      Example: \\n      form = new FormGroup({\\n        first: new FormControl({value: 'Nancy', disabled: true}, Validators.required),\\n        last: new FormControl('Drew', Validators.required)\\n      });\\n    \");\n    };\n    return ReactiveErrors;\n}());\n//# sourceMappingURL=reactive_errors.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@angular/forms/src/directives/reactive_errors.js\n// module id = 147\n// module chunks = 1","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Directive, ElementRef, Host, Input, Optional, Renderer, forwardRef } from '@angular/core';\nimport { MapWrapper } from '../facade/collection';\nimport { StringWrapper, isBlank, isPresent, isPrimitive, looseIdentical } from '../facade/lang';\nimport { NG_VALUE_ACCESSOR } from './control_value_accessor';\nexport var SELECT_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(function () { return SelectControlValueAccessor; }),\n    multi: true\n};\nfunction _buildValueString(id, value) {\n    if (isBlank(id))\n        return \"\" + value;\n    if (!isPrimitive(value))\n        value = 'Object';\n    return StringWrapper.slice(id + \": \" + value, 0, 50);\n}\nfunction _extractId(valueString) {\n    return valueString.split(':')[0];\n}\n/**\n * The accessor for writing a value and listening to changes on a select element.\n *\n * Note: We have to listen to the 'change' event because 'input' events aren't fired\n * for selects in Firefox and IE:\n * https://bugzilla.mozilla.org/show_bug.cgi?id=1024350\n * https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/4660045/\n *\n * @stable\n */\nexport var SelectControlValueAccessor = (function () {\n    function SelectControlValueAccessor(_renderer, _elementRef) {\n        this._renderer = _renderer;\n        this._elementRef = _elementRef;\n        /** @internal */\n        this._optionMap = new Map();\n        /** @internal */\n        this._idCounter = 0;\n        this.onChange = function (_) { };\n        this.onTouched = function () { };\n    }\n    SelectControlValueAccessor.prototype.writeValue = function (value) {\n        this.value = value;\n        var valueString = _buildValueString(this._getOptionId(value), value);\n        this._renderer.setElementProperty(this._elementRef.nativeElement, 'value', valueString);\n    };\n    SelectControlValueAccessor.prototype.registerOnChange = function (fn) {\n        var _this = this;\n        this.onChange = function (valueString) {\n            _this.value = valueString;\n            fn(_this._getOptionValue(valueString));\n        };\n    };\n    SelectControlValueAccessor.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n    SelectControlValueAccessor.prototype.setDisabledState = function (isDisabled) {\n        this._renderer.setElementProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n    };\n    /** @internal */\n    SelectControlValueAccessor.prototype._registerOption = function () { return (this._idCounter++).toString(); };\n    /** @internal */\n    SelectControlValueAccessor.prototype._getOptionId = function (value) {\n        for (var _i = 0, _a = MapWrapper.keys(this._optionMap); _i < _a.length; _i++) {\n            var id = _a[_i];\n            if (looseIdentical(this._optionMap.get(id), value))\n                return id;\n        }\n        return null;\n    };\n    /** @internal */\n    SelectControlValueAccessor.prototype._getOptionValue = function (valueString) {\n        var value = this._optionMap.get(_extractId(valueString));\n        return isPresent(value) ? value : valueString;\n    };\n    SelectControlValueAccessor.decorators = [\n        { type: Directive, args: [{\n                    selector: 'select:not([multiple])[formControlName],select:not([multiple])[formControl],select:not([multiple])[ngModel]',\n                    host: { '(change)': 'onChange($event.target.value)', '(blur)': 'onTouched()' },\n                    providers: [SELECT_VALUE_ACCESSOR]\n                },] },\n    ];\n    /** @nocollapse */\n    SelectControlValueAccessor.ctorParameters = [\n        { type: Renderer, },\n        { type: ElementRef, },\n    ];\n    return SelectControlValueAccessor;\n}());\n/**\n * Marks `<option>` as dynamic, so Angular can be notified when options change.\n *\n * ### Example\n *\n * ```\n * <select name=\"city\" ngModel>\n *   <option *ngFor=\"let c of cities\" [value]=\"c\"></option>\n * </select>\n * ```\n *\n * @stable\n */\nexport var NgSelectOption = (function () {\n    function NgSelectOption(_element, _renderer, _select) {\n        this._element = _element;\n        this._renderer = _renderer;\n        this._select = _select;\n        if (isPresent(this._select))\n            this.id = this._select._registerOption();\n    }\n    Object.defineProperty(NgSelectOption.prototype, \"ngValue\", {\n        set: function (value) {\n            if (this._select == null)\n                return;\n            this._select._optionMap.set(this.id, value);\n            this._setElementValue(_buildValueString(this.id, value));\n            this._select.writeValue(this._select.value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgSelectOption.prototype, \"value\", {\n        set: function (value) {\n            this._setElementValue(value);\n            if (isPresent(this._select))\n                this._select.writeValue(this._select.value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @internal */\n    NgSelectOption.prototype._setElementValue = function (value) {\n        this._renderer.setElementProperty(this._element.nativeElement, 'value', value);\n    };\n    NgSelectOption.prototype.ngOnDestroy = function () {\n        if (isPresent(this._select)) {\n            this._select._optionMap.delete(this.id);\n            this._select.writeValue(this._select.value);\n        }\n    };\n    NgSelectOption.decorators = [\n        { type: Directive, args: [{ selector: 'option' },] },\n    ];\n    /** @nocollapse */\n    NgSelectOption.ctorParameters = [\n        { type: ElementRef, },\n        { type: Renderer, },\n        { type: SelectControlValueAccessor, decorators: [{ type: Optional }, { type: Host },] },\n    ];\n    NgSelectOption.propDecorators = {\n        'ngValue': [{ type: Input, args: ['ngValue',] },],\n        'value': [{ type: Input, args: ['value',] },],\n    };\n    return NgSelectOption;\n}());\n//# sourceMappingURL=select_control_value_accessor.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@angular/forms/src/directives/select_control_value_accessor.js\n// module id = 148\n// module chunks = 1","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Directive, ElementRef, Host, Input, Optional, Renderer, forwardRef } from '@angular/core';\nimport { MapWrapper } from '../facade/collection';\nimport { StringWrapper, isBlank, isPresent, isPrimitive, isString, looseIdentical } from '../facade/lang';\nimport { NG_VALUE_ACCESSOR } from './control_value_accessor';\nexport var SELECT_MULTIPLE_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(function () { return SelectMultipleControlValueAccessor; }),\n    multi: true\n};\nfunction _buildValueString(id, value) {\n    if (isBlank(id))\n        return \"\" + value;\n    if (isString(value))\n        value = \"'\" + value + \"'\";\n    if (!isPrimitive(value))\n        value = 'Object';\n    return StringWrapper.slice(id + \": \" + value, 0, 50);\n}\nfunction _extractId(valueString) {\n    return valueString.split(':')[0];\n}\n/** Mock interface for HTMLCollection */\nvar HTMLCollection = (function () {\n    function HTMLCollection() {\n    }\n    return HTMLCollection;\n}());\n/**\n * The accessor for writing a value and listening to changes on a select element.\n *\n * @stable\n */\nexport var SelectMultipleControlValueAccessor = (function () {\n    function SelectMultipleControlValueAccessor(_renderer, _elementRef) {\n        this._renderer = _renderer;\n        this._elementRef = _elementRef;\n        /** @internal */\n        this._optionMap = new Map();\n        /** @internal */\n        this._idCounter = 0;\n        this.onChange = function (_) { };\n        this.onTouched = function () { };\n    }\n    SelectMultipleControlValueAccessor.prototype.writeValue = function (value) {\n        var _this = this;\n        this.value = value;\n        if (value == null)\n            return;\n        var values = value;\n        // convert values to ids\n        var ids = values.map(function (v) { return _this._getOptionId(v); });\n        this._optionMap.forEach(function (opt, o) { opt._setSelected(ids.indexOf(o.toString()) > -1); });\n    };\n    SelectMultipleControlValueAccessor.prototype.registerOnChange = function (fn) {\n        var _this = this;\n        this.onChange = function (_) {\n            var selected = [];\n            if (_.hasOwnProperty('selectedOptions')) {\n                var options = _.selectedOptions;\n                for (var i = 0; i < options.length; i++) {\n                    var opt = options.item(i);\n                    var val = _this._getOptionValue(opt.value);\n                    selected.push(val);\n                }\n            }\n            else {\n                var options = _.options;\n                for (var i = 0; i < options.length; i++) {\n                    var opt = options.item(i);\n                    if (opt.selected) {\n                        var val = _this._getOptionValue(opt.value);\n                        selected.push(val);\n                    }\n                }\n            }\n            fn(selected);\n        };\n    };\n    SelectMultipleControlValueAccessor.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n    SelectMultipleControlValueAccessor.prototype.setDisabledState = function (isDisabled) {\n        this._renderer.setElementProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n    };\n    /** @internal */\n    SelectMultipleControlValueAccessor.prototype._registerOption = function (value) {\n        var id = (this._idCounter++).toString();\n        this._optionMap.set(id, value);\n        return id;\n    };\n    /** @internal */\n    SelectMultipleControlValueAccessor.prototype._getOptionId = function (value) {\n        for (var _i = 0, _a = MapWrapper.keys(this._optionMap); _i < _a.length; _i++) {\n            var id = _a[_i];\n            if (looseIdentical(this._optionMap.get(id)._value, value))\n                return id;\n        }\n        return null;\n    };\n    /** @internal */\n    SelectMultipleControlValueAccessor.prototype._getOptionValue = function (valueString) {\n        var opt = this._optionMap.get(_extractId(valueString));\n        return isPresent(opt) ? opt._value : valueString;\n    };\n    SelectMultipleControlValueAccessor.decorators = [\n        { type: Directive, args: [{\n                    selector: 'select[multiple][formControlName],select[multiple][formControl],select[multiple][ngModel]',\n                    host: { '(change)': 'onChange($event.target)', '(blur)': 'onTouched()' },\n                    providers: [SELECT_MULTIPLE_VALUE_ACCESSOR]\n                },] },\n    ];\n    /** @nocollapse */\n    SelectMultipleControlValueAccessor.ctorParameters = [\n        { type: Renderer, },\n        { type: ElementRef, },\n    ];\n    return SelectMultipleControlValueAccessor;\n}());\n/**\n * Marks `<option>` as dynamic, so Angular can be notified when options change.\n *\n * ### Example\n *\n * ```\n * <select multiple name=\"city\" ngModel>\n *   <option *ngFor=\"let c of cities\" [value]=\"c\"></option>\n * </select>\n * ```\n */\nexport var NgSelectMultipleOption = (function () {\n    function NgSelectMultipleOption(_element, _renderer, _select) {\n        this._element = _element;\n        this._renderer = _renderer;\n        this._select = _select;\n        if (isPresent(this._select)) {\n            this.id = this._select._registerOption(this);\n        }\n    }\n    Object.defineProperty(NgSelectMultipleOption.prototype, \"ngValue\", {\n        set: function (value) {\n            if (this._select == null)\n                return;\n            this._value = value;\n            this._setElementValue(_buildValueString(this.id, value));\n            this._select.writeValue(this._select.value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgSelectMultipleOption.prototype, \"value\", {\n        set: function (value) {\n            if (isPresent(this._select)) {\n                this._value = value;\n                this._setElementValue(_buildValueString(this.id, value));\n                this._select.writeValue(this._select.value);\n            }\n            else {\n                this._setElementValue(value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @internal */\n    NgSelectMultipleOption.prototype._setElementValue = function (value) {\n        this._renderer.setElementProperty(this._element.nativeElement, 'value', value);\n    };\n    /** @internal */\n    NgSelectMultipleOption.prototype._setSelected = function (selected) {\n        this._renderer.setElementProperty(this._element.nativeElement, 'selected', selected);\n    };\n    NgSelectMultipleOption.prototype.ngOnDestroy = function () {\n        if (isPresent(this._select)) {\n            this._select._optionMap.delete(this.id);\n            this._select.writeValue(this._select.value);\n        }\n    };\n    NgSelectMultipleOption.decorators = [\n        { type: Directive, args: [{ selector: 'option' },] },\n    ];\n    /** @nocollapse */\n    NgSelectMultipleOption.ctorParameters = [\n        { type: ElementRef, },\n        { type: Renderer, },\n        { type: SelectMultipleControlValueAccessor, decorators: [{ type: Optional }, { type: Host },] },\n    ];\n    NgSelectMultipleOption.propDecorators = {\n        'ngValue': [{ type: Input, args: ['ngValue',] },],\n        'value': [{ type: Input, args: ['value',] },],\n    };\n    return NgSelectMultipleOption;\n}());\nexport var SELECT_DIRECTIVES = [SelectMultipleControlValueAccessor, NgSelectMultipleOption];\n//# sourceMappingURL=select_multiple_control_value_accessor.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@angular/forms/src/directives/select_multiple_control_value_accessor.js\n// module id = 149\n// module chunks = 1","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { fromPromise } from 'rxjs/observable/fromPromise';\nimport { composeAsyncValidators, composeValidators } from './directives/shared';\nimport { EventEmitter } from './facade/async';\nimport { ListWrapper, StringMapWrapper } from './facade/collection';\nimport { isBlank, isPresent, isPromise, isStringMap, normalizeBool } from './facade/lang';\n/**\n * Indicates that a FormControl is valid, i.e. that no errors exist in the input value.\n */\nexport var VALID = 'VALID';\n/**\n * Indicates that a FormControl is invalid, i.e. that an error exists in the input value.\n */\nexport var INVALID = 'INVALID';\n/**\n * Indicates that a FormControl is pending, i.e. that async validation is occurring and\n * errors are not yet available for the input value.\n */\nexport var PENDING = 'PENDING';\n/**\n * Indicates that a FormControl is disabled, i.e. that the control is exempt from ancestor\n * calculations of validity or value.\n */\nexport var DISABLED = 'DISABLED';\nexport function isControl(control) {\n    return control instanceof AbstractControl;\n}\nfunction _find(control, path, delimiter) {\n    if (isBlank(path))\n        return null;\n    if (!(path instanceof Array)) {\n        path = path.split(delimiter);\n    }\n    if (path instanceof Array && ListWrapper.isEmpty(path))\n        return null;\n    return path.reduce(function (v, name) {\n        if (v instanceof FormGroup) {\n            return isPresent(v.controls[name]) ? v.controls[name] : null;\n        }\n        else if (v instanceof FormArray) {\n            var index = name;\n            return isPresent(v.at(index)) ? v.at(index) : null;\n        }\n        else {\n            return null;\n        }\n    }, control);\n}\nfunction toObservable(r) {\n    return isPromise(r) ? fromPromise(r) : r;\n}\nfunction coerceToValidator(validator) {\n    return Array.isArray(validator) ? composeValidators(validator) : validator;\n}\nfunction coerceToAsyncValidator(asyncValidator) {\n    return Array.isArray(asyncValidator) ? composeAsyncValidators(asyncValidator) : asyncValidator;\n}\n/**\n * @stable\n */\nexport var AbstractControl = (function () {\n    function AbstractControl(validator, asyncValidator) {\n        this.validator = validator;\n        this.asyncValidator = asyncValidator;\n        this._pristine = true;\n        this._touched = false;\n    }\n    Object.defineProperty(AbstractControl.prototype, \"value\", {\n        get: function () { return this._value; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControl.prototype, \"status\", {\n        get: function () { return this._status; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControl.prototype, \"valid\", {\n        get: function () { return this._status === VALID; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControl.prototype, \"invalid\", {\n        get: function () { return this._status === INVALID; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControl.prototype, \"errors\", {\n        /**\n         * Returns the errors of this control.\n         */\n        get: function () { return this._errors; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControl.prototype, \"pristine\", {\n        get: function () { return this._pristine; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControl.prototype, \"dirty\", {\n        get: function () { return !this.pristine; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControl.prototype, \"touched\", {\n        get: function () { return this._touched; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControl.prototype, \"untouched\", {\n        get: function () { return !this._touched; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControl.prototype, \"valueChanges\", {\n        get: function () { return this._valueChanges; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControl.prototype, \"statusChanges\", {\n        get: function () { return this._statusChanges; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControl.prototype, \"pending\", {\n        get: function () { return this._status == PENDING; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControl.prototype, \"disabled\", {\n        get: function () { return this._status === DISABLED; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControl.prototype, \"enabled\", {\n        get: function () { return this._status !== DISABLED; },\n        enumerable: true,\n        configurable: true\n    });\n    AbstractControl.prototype.setAsyncValidators = function (newValidator) {\n        this.asyncValidator = coerceToAsyncValidator(newValidator);\n    };\n    AbstractControl.prototype.clearAsyncValidators = function () { this.asyncValidator = null; };\n    AbstractControl.prototype.setValidators = function (newValidator) {\n        this.validator = coerceToValidator(newValidator);\n    };\n    AbstractControl.prototype.clearValidators = function () { this.validator = null; };\n    AbstractControl.prototype.markAsTouched = function (_a) {\n        var onlySelf = (_a === void 0 ? {} : _a).onlySelf;\n        onlySelf = normalizeBool(onlySelf);\n        this._touched = true;\n        if (isPresent(this._parent) && !onlySelf) {\n            this._parent.markAsTouched({ onlySelf: onlySelf });\n        }\n    };\n    AbstractControl.prototype.markAsDirty = function (_a) {\n        var onlySelf = (_a === void 0 ? {} : _a).onlySelf;\n        onlySelf = normalizeBool(onlySelf);\n        this._pristine = false;\n        if (isPresent(this._parent) && !onlySelf) {\n            this._parent.markAsDirty({ onlySelf: onlySelf });\n        }\n    };\n    AbstractControl.prototype.markAsPristine = function (_a) {\n        var onlySelf = (_a === void 0 ? {} : _a).onlySelf;\n        this._pristine = true;\n        this._forEachChild(function (control) { control.markAsPristine({ onlySelf: true }); });\n        if (isPresent(this._parent) && !onlySelf) {\n            this._parent._updatePristine({ onlySelf: onlySelf });\n        }\n    };\n    AbstractControl.prototype.markAsUntouched = function (_a) {\n        var onlySelf = (_a === void 0 ? {} : _a).onlySelf;\n        this._touched = false;\n        this._forEachChild(function (control) { control.markAsUntouched({ onlySelf: true }); });\n        if (isPresent(this._parent) && !onlySelf) {\n            this._parent._updateTouched({ onlySelf: onlySelf });\n        }\n    };\n    AbstractControl.prototype.markAsPending = function (_a) {\n        var onlySelf = (_a === void 0 ? {} : _a).onlySelf;\n        onlySelf = normalizeBool(onlySelf);\n        this._status = PENDING;\n        if (isPresent(this._parent) && !onlySelf) {\n            this._parent.markAsPending({ onlySelf: onlySelf });\n        }\n    };\n    AbstractControl.prototype.disable = function (_a) {\n        var _b = _a === void 0 ? {} : _a, onlySelf = _b.onlySelf, emitEvent = _b.emitEvent;\n        emitEvent = isPresent(emitEvent) ? emitEvent : true;\n        this._status = DISABLED;\n        this._forEachChild(function (control) { control.disable({ onlySelf: true }); });\n        this._updateValue();\n        if (emitEvent) {\n            this._valueChanges.emit(this._value);\n            this._statusChanges.emit(this._status);\n        }\n        this._updateAncestors(onlySelf);\n        this._onDisabledChange(true);\n    };\n    AbstractControl.prototype.enable = function (_a) {\n        var _b = _a === void 0 ? {} : _a, onlySelf = _b.onlySelf, emitEvent = _b.emitEvent;\n        this._status = VALID;\n        this._forEachChild(function (control) { control.enable({ onlySelf: true }); });\n        this.updateValueAndValidity({ onlySelf: true, emitEvent: emitEvent });\n        this._updateAncestors(onlySelf);\n        this._onDisabledChange(false);\n    };\n    AbstractControl.prototype._updateAncestors = function (onlySelf) {\n        if (isPresent(this._parent) && !onlySelf) {\n            this._parent.updateValueAndValidity();\n            this._parent._updatePristine();\n            this._parent._updateTouched();\n        }\n    };\n    AbstractControl.prototype.setParent = function (parent) { this._parent = parent; };\n    AbstractControl.prototype.updateValueAndValidity = function (_a) {\n        var _b = _a === void 0 ? {} : _a, onlySelf = _b.onlySelf, emitEvent = _b.emitEvent;\n        onlySelf = normalizeBool(onlySelf);\n        emitEvent = isPresent(emitEvent) ? emitEvent : true;\n        this._updateValue();\n        this._errors = this._runValidator();\n        var originalStatus = this._status;\n        this._status = this._calculateStatus();\n        if (this._status == VALID || this._status == PENDING) {\n            this._runAsyncValidator(emitEvent);\n        }\n        if (this._disabledChanged(originalStatus)) {\n            this._updateValue();\n        }\n        if (emitEvent) {\n            this._valueChanges.emit(this._value);\n            this._statusChanges.emit(this._status);\n        }\n        if (isPresent(this._parent) && !onlySelf) {\n            this._parent.updateValueAndValidity({ onlySelf: onlySelf, emitEvent: emitEvent });\n        }\n    };\n    /** @internal */\n    AbstractControl.prototype._updateTreeValidity = function (_a) {\n        var emitEvent = (_a === void 0 ? { emitEvent: true } : _a).emitEvent;\n        this._forEachChild(function (ctrl) { return ctrl._updateTreeValidity({ emitEvent: emitEvent }); });\n        this.updateValueAndValidity({ onlySelf: true, emitEvent: emitEvent });\n    };\n    AbstractControl.prototype._runValidator = function () {\n        return isPresent(this.validator) ? this.validator(this) : null;\n    };\n    AbstractControl.prototype._runAsyncValidator = function (emitEvent) {\n        var _this = this;\n        if (isPresent(this.asyncValidator)) {\n            this._status = PENDING;\n            this._cancelExistingSubscription();\n            var obs = toObservable(this.asyncValidator(this));\n            this._asyncValidationSubscription = obs.subscribe({ next: function (res) { return _this.setErrors(res, { emitEvent: emitEvent }); } });\n        }\n    };\n    AbstractControl.prototype._cancelExistingSubscription = function () {\n        if (isPresent(this._asyncValidationSubscription)) {\n            this._asyncValidationSubscription.unsubscribe();\n        }\n    };\n    AbstractControl.prototype._disabledChanged = function (originalStatus) {\n        return this._status !== originalStatus &&\n            (this._status === DISABLED || originalStatus === DISABLED);\n    };\n    /**\n     * Sets errors on a form control.\n     *\n     * This is used when validations are run not automatically, but manually by the user.\n     *\n     * Calling `setErrors` will also update the validity of the parent control.\n     *\n     * ## Usage\n     *\n     * ```\n     * var login = new FormControl(\"someLogin\");\n     * login.setErrors({\n     *   \"notUnique\": true\n     * });\n     *\n     * expect(login.valid).toEqual(false);\n     * expect(login.errors).toEqual({\"notUnique\": true});\n     *\n     * login.updateValue(\"someOtherLogin\");\n     *\n     * expect(login.valid).toEqual(true);\n     * ```\n     */\n    AbstractControl.prototype.setErrors = function (errors, _a) {\n        var emitEvent = (_a === void 0 ? {} : _a).emitEvent;\n        emitEvent = isPresent(emitEvent) ? emitEvent : true;\n        this._errors = errors;\n        this._updateControlsErrors(emitEvent);\n    };\n    AbstractControl.prototype.get = function (path) { return _find(this, path, '.'); };\n    AbstractControl.prototype.getError = function (errorCode, path) {\n        if (path === void 0) { path = null; }\n        var control = isPresent(path) && !ListWrapper.isEmpty(path) ? this.get(path) : this;\n        if (isPresent(control) && isPresent(control._errors)) {\n            return StringMapWrapper.get(control._errors, errorCode);\n        }\n        else {\n            return null;\n        }\n    };\n    AbstractControl.prototype.hasError = function (errorCode, path) {\n        if (path === void 0) { path = null; }\n        return isPresent(this.getError(errorCode, path));\n    };\n    Object.defineProperty(AbstractControl.prototype, \"root\", {\n        get: function () {\n            var x = this;\n            while (isPresent(x._parent)) {\n                x = x._parent;\n            }\n            return x;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @internal */\n    AbstractControl.prototype._updateControlsErrors = function (emitEvent) {\n        this._status = this._calculateStatus();\n        if (emitEvent) {\n            this._statusChanges.emit(this._status);\n        }\n        if (isPresent(this._parent)) {\n            this._parent._updateControlsErrors(emitEvent);\n        }\n    };\n    /** @internal */\n    AbstractControl.prototype._initObservables = function () {\n        this._valueChanges = new EventEmitter();\n        this._statusChanges = new EventEmitter();\n    };\n    AbstractControl.prototype._calculateStatus = function () {\n        if (isPresent(this._errors))\n            return INVALID;\n        if (this._anyControlsHaveStatus(PENDING))\n            return PENDING;\n        if (this._anyControlsHaveStatus(INVALID))\n            return INVALID;\n        if (this._allControlsDisabled())\n            return DISABLED;\n        return VALID;\n    };\n    /** @internal */\n    AbstractControl.prototype._anyControlsHaveStatus = function (status) {\n        return this._anyControls(function (control) { return control.status == status; });\n    };\n    /** @internal */\n    AbstractControl.prototype._anyControlsDirty = function () {\n        return this._anyControls(function (control) { return control.dirty; });\n    };\n    /** @internal */\n    AbstractControl.prototype._anyControlsTouched = function () {\n        return this._anyControls(function (control) { return control.touched; });\n    };\n    /** @internal */\n    AbstractControl.prototype._updatePristine = function (_a) {\n        var onlySelf = (_a === void 0 ? {} : _a).onlySelf;\n        this._pristine = !this._anyControlsDirty();\n        if (isPresent(this._parent) && !onlySelf) {\n            this._parent._updatePristine({ onlySelf: onlySelf });\n        }\n    };\n    /** @internal */\n    AbstractControl.prototype._updateTouched = function (_a) {\n        var onlySelf = (_a === void 0 ? {} : _a).onlySelf;\n        this._touched = this._anyControlsTouched();\n        if (isPresent(this._parent) && !onlySelf) {\n            this._parent._updateTouched({ onlySelf: onlySelf });\n        }\n    };\n    /** @internal */\n    AbstractControl.prototype._onDisabledChange = function (isDisabled) { };\n    /** @internal */\n    AbstractControl.prototype._isBoxedValue = function (formState) {\n        return isStringMap(formState) && Object.keys(formState).length === 2 && 'value' in formState &&\n            'disabled' in formState;\n    };\n    return AbstractControl;\n}());\n/**\n * Defines a part of a form that cannot be divided into other controls. `FormControl`s have values\n * and\n * validation state, which is determined by an optional validation function.\n *\n * `FormControl` is one of the three fundamental building blocks used to define forms in Angular,\n * along\n * with {@link FormGroup} and {@link FormArray}.\n *\n * ## Usage\n *\n * By default, a `FormControl` is created for every `<input>` or other form component.\n * With {@link FormControlDirective} or {@link FormGroupDirective} an existing {@link FormControl}\n * can be bound to a DOM element instead. This `FormControl` can be configured with a custom\n * validation function.\n *\n * @stable\n */\nexport var FormControl = (function (_super) {\n    __extends(FormControl, _super);\n    function FormControl(formState, validator, asyncValidator) {\n        if (formState === void 0) { formState = null; }\n        if (validator === void 0) { validator = null; }\n        if (asyncValidator === void 0) { asyncValidator = null; }\n        _super.call(this, coerceToValidator(validator), coerceToAsyncValidator(asyncValidator));\n        /** @internal */\n        this._onChange = [];\n        this._applyFormState(formState);\n        this.updateValueAndValidity({ onlySelf: true, emitEvent: false });\n        this._initObservables();\n    }\n    /**\n     * Set the value of the form control to `value`.\n     *\n     * If `onlySelf` is `true`, this change will only affect the validation of this `FormControl`\n     * and not its parent component. If `emitEvent` is `true`, this change will cause a\n     * `valueChanges` event on the `FormControl` to be emitted. Both of these options default to\n     * `false`.\n     *\n     * If `emitModelToViewChange` is `true`, the view will be notified about the new value\n     * via an `onChange` event. This is the default behavior if `emitModelToViewChange` is not\n     * specified.\n     *\n     * If `emitViewToModelChange` is `true`, an ngModelChange event will be fired to update the\n     * model.  This is the default behavior if `emitViewToModelChange` is not specified.\n     */\n    FormControl.prototype.setValue = function (value, _a) {\n        var _this = this;\n        var _b = _a === void 0 ? {} : _a, onlySelf = _b.onlySelf, emitEvent = _b.emitEvent, emitModelToViewChange = _b.emitModelToViewChange, emitViewToModelChange = _b.emitViewToModelChange;\n        emitModelToViewChange = isPresent(emitModelToViewChange) ? emitModelToViewChange : true;\n        emitViewToModelChange = isPresent(emitViewToModelChange) ? emitViewToModelChange : true;\n        this._value = value;\n        if (this._onChange.length && emitModelToViewChange) {\n            this._onChange.forEach(function (changeFn) { return changeFn(_this._value, emitViewToModelChange); });\n        }\n        this.updateValueAndValidity({ onlySelf: onlySelf, emitEvent: emitEvent });\n    };\n    /**\n     * This function is functionally the same as updateValue() at this level.  It exists for\n     * symmetry with patchValue() on FormGroups and FormArrays, where it does behave differently.\n     */\n    FormControl.prototype.patchValue = function (value, options) {\n        if (options === void 0) { options = {}; }\n        this.setValue(value, options);\n    };\n    FormControl.prototype.reset = function (formState, _a) {\n        if (formState === void 0) { formState = null; }\n        var onlySelf = (_a === void 0 ? {} : _a).onlySelf;\n        this._applyFormState(formState);\n        this.markAsPristine({ onlySelf: onlySelf });\n        this.markAsUntouched({ onlySelf: onlySelf });\n        this.setValue(this._value, { onlySelf: onlySelf });\n    };\n    /**\n     * @internal\n     */\n    FormControl.prototype._updateValue = function () { };\n    /**\n     * @internal\n     */\n    FormControl.prototype._anyControls = function (condition) { return false; };\n    /**\n     * @internal\n     */\n    FormControl.prototype._allControlsDisabled = function () { return this.disabled; };\n    /**\n     * Register a listener for change events.\n     */\n    FormControl.prototype.registerOnChange = function (fn) { this._onChange.push(fn); };\n    /**\n     * @internal\n     */\n    FormControl.prototype._clearChangeFns = function () {\n        this._onChange = [];\n        this._onDisabledChange = null;\n    };\n    /**\n     * Register a listener for disabled events.\n     */\n    FormControl.prototype.registerOnDisabledChange = function (fn) { this._onDisabledChange = fn; };\n    /**\n     * @internal\n     */\n    FormControl.prototype._forEachChild = function (cb) { };\n    FormControl.prototype._applyFormState = function (formState) {\n        if (this._isBoxedValue(formState)) {\n            this._value = formState.value;\n            formState.disabled ? this.disable({ onlySelf: true, emitEvent: false }) :\n                this.enable({ onlySelf: true, emitEvent: false });\n        }\n        else {\n            this._value = formState;\n        }\n    };\n    return FormControl;\n}(AbstractControl));\n/**\n * Defines a part of a form, of fixed length, that can contain other controls.\n *\n * A `FormGroup` aggregates the values of each {@link FormControl} in the group.\n * The status of a `FormGroup` depends on the status of its children.\n * If one of the controls in a group is invalid, the entire group is invalid.\n * Similarly, if a control changes its value, the entire group changes as well.\n *\n * `FormGroup` is one of the three fundamental building blocks used to define forms in Angular,\n * along with {@link FormControl} and {@link FormArray}. {@link FormArray} can also contain other\n * controls, but is of variable length.\n *\n *\n * @stable\n */\nexport var FormGroup = (function (_super) {\n    __extends(FormGroup, _super);\n    function FormGroup(controls, validator, asyncValidator) {\n        if (validator === void 0) { validator = null; }\n        if (asyncValidator === void 0) { asyncValidator = null; }\n        _super.call(this, validator, asyncValidator);\n        this.controls = controls;\n        this._initObservables();\n        this._setParentForControls();\n        this.updateValueAndValidity({ onlySelf: true, emitEvent: false });\n    }\n    /**\n     * Register a control with the group's list of controls.\n     */\n    FormGroup.prototype.registerControl = function (name, control) {\n        if (this.controls[name])\n            return this.controls[name];\n        this.controls[name] = control;\n        control.setParent(this);\n        return control;\n    };\n    /**\n     * Add a control to this group.\n     */\n    FormGroup.prototype.addControl = function (name, control) {\n        this.registerControl(name, control);\n        this.updateValueAndValidity();\n    };\n    /**\n     * Remove a control from this group.\n     */\n    FormGroup.prototype.removeControl = function (name) {\n        StringMapWrapper.delete(this.controls, name);\n        this.updateValueAndValidity();\n    };\n    /**\n     * Check whether there is a control with the given name in the group.\n     */\n    FormGroup.prototype.contains = function (controlName) {\n        var c = StringMapWrapper.contains(this.controls, controlName);\n        return c && this.get(controlName).enabled;\n    };\n    FormGroup.prototype.setValue = function (value, _a) {\n        var _this = this;\n        var onlySelf = (_a === void 0 ? {} : _a).onlySelf;\n        this._checkAllValuesPresent(value);\n        StringMapWrapper.forEach(value, function (newValue, name) {\n            _this._throwIfControlMissing(name);\n            _this.controls[name].setValue(newValue, { onlySelf: true });\n        });\n        this.updateValueAndValidity({ onlySelf: onlySelf });\n    };\n    FormGroup.prototype.patchValue = function (value, _a) {\n        var _this = this;\n        var onlySelf = (_a === void 0 ? {} : _a).onlySelf;\n        StringMapWrapper.forEach(value, function (newValue, name) {\n            if (_this.controls[name]) {\n                _this.controls[name].patchValue(newValue, { onlySelf: true });\n            }\n        });\n        this.updateValueAndValidity({ onlySelf: onlySelf });\n    };\n    FormGroup.prototype.reset = function (value, _a) {\n        if (value === void 0) { value = {}; }\n        var onlySelf = (_a === void 0 ? {} : _a).onlySelf;\n        this._forEachChild(function (control, name) {\n            control.reset(value[name], { onlySelf: true });\n        });\n        this.updateValueAndValidity({ onlySelf: onlySelf });\n        this._updatePristine({ onlySelf: onlySelf });\n        this._updateTouched({ onlySelf: onlySelf });\n    };\n    FormGroup.prototype.getRawValue = function () {\n        return this._reduceChildren({}, function (acc, control, name) {\n            acc[name] = control.value;\n            return acc;\n        });\n    };\n    /** @internal */\n    FormGroup.prototype._throwIfControlMissing = function (name) {\n        if (!Object.keys(this.controls).length) {\n            throw new Error(\"\\n        There are no form controls registered with this group yet.  If you're using ngModel,\\n        you may want to check next tick (e.g. use setTimeout).\\n      \");\n        }\n        if (!this.controls[name]) {\n            throw new Error(\"Cannot find form control with name: \" + name + \".\");\n        }\n    };\n    /** @internal */\n    FormGroup.prototype._forEachChild = function (cb) {\n        StringMapWrapper.forEach(this.controls, cb);\n    };\n    /** @internal */\n    FormGroup.prototype._setParentForControls = function () {\n        var _this = this;\n        this._forEachChild(function (control, name) { control.setParent(_this); });\n    };\n    /** @internal */\n    FormGroup.prototype._updateValue = function () { this._value = this._reduceValue(); };\n    /** @internal */\n    FormGroup.prototype._anyControls = function (condition) {\n        var _this = this;\n        var res = false;\n        this._forEachChild(function (control, name) {\n            res = res || (_this.contains(name) && condition(control));\n        });\n        return res;\n    };\n    /** @internal */\n    FormGroup.prototype._reduceValue = function () {\n        var _this = this;\n        return this._reduceChildren({}, function (acc, control, name) {\n            if (control.enabled || _this.disabled) {\n                acc[name] = control.value;\n            }\n            return acc;\n        });\n    };\n    /** @internal */\n    FormGroup.prototype._reduceChildren = function (initValue, fn) {\n        var res = initValue;\n        this._forEachChild(function (control, name) { res = fn(res, control, name); });\n        return res;\n    };\n    /** @internal */\n    FormGroup.prototype._allControlsDisabled = function () {\n        for (var _i = 0, _a = Object.keys(this.controls); _i < _a.length; _i++) {\n            var controlName = _a[_i];\n            if (this.controls[controlName].enabled) {\n                return false;\n            }\n        }\n        return !StringMapWrapper.isEmpty(this.controls);\n    };\n    /** @internal */\n    FormGroup.prototype._checkAllValuesPresent = function (value) {\n        this._forEachChild(function (control, name) {\n            if (value[name] === undefined) {\n                throw new Error(\"Must supply a value for form control with name: '\" + name + \"'.\");\n            }\n        });\n    };\n    return FormGroup;\n}(AbstractControl));\n/**\n * Defines a part of a form, of variable length, that can contain other controls.\n *\n * A `FormArray` aggregates the values of each {@link FormControl} in the group.\n * The status of a `FormArray` depends on the status of its children.\n * If one of the controls in a group is invalid, the entire array is invalid.\n * Similarly, if a control changes its value, the entire array changes as well.\n *\n * `FormArray` is one of the three fundamental building blocks used to define forms in Angular,\n * along with {@link FormControl} and {@link FormGroup}. {@link FormGroup} can also contain\n * other controls, but is of fixed length.\n *\n * ## Adding or removing controls\n *\n * To change the controls in the array, use the `push`, `insert`, or `removeAt` methods\n * in `FormArray` itself. These methods ensure the controls are properly tracked in the\n * form's hierarchy. Do not modify the array of `AbstractControl`s used to instantiate\n * the `FormArray` directly, as that will result in strange and unexpected behavior such\n * as broken change detection.\n *\n *\n * @stable\n */\nexport var FormArray = (function (_super) {\n    __extends(FormArray, _super);\n    function FormArray(controls, validator, asyncValidator) {\n        if (validator === void 0) { validator = null; }\n        if (asyncValidator === void 0) { asyncValidator = null; }\n        _super.call(this, validator, asyncValidator);\n        this.controls = controls;\n        this._initObservables();\n        this._setParentForControls();\n        this.updateValueAndValidity({ onlySelf: true, emitEvent: false });\n    }\n    /**\n     * Get the {@link AbstractControl} at the given `index` in the array.\n     */\n    FormArray.prototype.at = function (index) { return this.controls[index]; };\n    /**\n     * Insert a new {@link AbstractControl} at the end of the array.\n     */\n    FormArray.prototype.push = function (control) {\n        this.controls.push(control);\n        control.setParent(this);\n        this.updateValueAndValidity();\n    };\n    /**\n     * Insert a new {@link AbstractControl} at the given `index` in the array.\n     */\n    FormArray.prototype.insert = function (index, control) {\n        ListWrapper.insert(this.controls, index, control);\n        control.setParent(this);\n        this.updateValueAndValidity();\n    };\n    /**\n     * Remove the control at the given `index` in the array.\n     */\n    FormArray.prototype.removeAt = function (index) {\n        ListWrapper.removeAt(this.controls, index);\n        this.updateValueAndValidity();\n    };\n    Object.defineProperty(FormArray.prototype, \"length\", {\n        /**\n         * Length of the control array.\n         */\n        get: function () { return this.controls.length; },\n        enumerable: true,\n        configurable: true\n    });\n    FormArray.prototype.setValue = function (value, _a) {\n        var _this = this;\n        var onlySelf = (_a === void 0 ? {} : _a).onlySelf;\n        this._checkAllValuesPresent(value);\n        value.forEach(function (newValue, index) {\n            _this._throwIfControlMissing(index);\n            _this.at(index).setValue(newValue, { onlySelf: true });\n        });\n        this.updateValueAndValidity({ onlySelf: onlySelf });\n    };\n    FormArray.prototype.patchValue = function (value, _a) {\n        var _this = this;\n        var onlySelf = (_a === void 0 ? {} : _a).onlySelf;\n        value.forEach(function (newValue, index) {\n            if (_this.at(index)) {\n                _this.at(index).patchValue(newValue, { onlySelf: true });\n            }\n        });\n        this.updateValueAndValidity({ onlySelf: onlySelf });\n    };\n    FormArray.prototype.reset = function (value, _a) {\n        if (value === void 0) { value = []; }\n        var onlySelf = (_a === void 0 ? {} : _a).onlySelf;\n        this._forEachChild(function (control, index) {\n            control.reset(value[index], { onlySelf: true });\n        });\n        this.updateValueAndValidity({ onlySelf: onlySelf });\n        this._updatePristine({ onlySelf: onlySelf });\n        this._updateTouched({ onlySelf: onlySelf });\n    };\n    FormArray.prototype.getRawValue = function () { return this.controls.map(function (control) { return control.value; }); };\n    /** @internal */\n    FormArray.prototype._throwIfControlMissing = function (index) {\n        if (!this.controls.length) {\n            throw new Error(\"\\n        There are no form controls registered with this array yet.  If you're using ngModel,\\n        you may want to check next tick (e.g. use setTimeout).\\n      \");\n        }\n        if (!this.at(index)) {\n            throw new Error(\"Cannot find form control at index \" + index);\n        }\n    };\n    /** @internal */\n    FormArray.prototype._forEachChild = function (cb) {\n        this.controls.forEach(function (control, index) { cb(control, index); });\n    };\n    /** @internal */\n    FormArray.prototype._updateValue = function () {\n        var _this = this;\n        this._value = this.controls.filter(function (control) { return control.enabled || _this.disabled; })\n            .map(function (control) { return control.value; });\n    };\n    /** @internal */\n    FormArray.prototype._anyControls = function (condition) {\n        return this.controls.some(function (control) { return control.enabled && condition(control); });\n    };\n    /** @internal */\n    FormArray.prototype._setParentForControls = function () {\n        var _this = this;\n        this._forEachChild(function (control) { control.setParent(_this); });\n    };\n    /** @internal */\n    FormArray.prototype._checkAllValuesPresent = function (value) {\n        this._forEachChild(function (control, i) {\n            if (value[i] === undefined) {\n                throw new Error(\"Must supply a value for form control at index: \" + i + \".\");\n            }\n        });\n    };\n    /** @internal */\n    FormArray.prototype._allControlsDisabled = function () {\n        for (var _i = 0, _a = this.controls; _i < _a.length; _i++) {\n            var control = _a[_i];\n            if (control.enabled)\n                return false;\n        }\n        return !!this.controls.length;\n    };\n    return FormArray;\n}(AbstractControl));\n//# sourceMappingURL=model.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@angular/forms/src/model.js\n// module id = 150\n// module chunks = 1","export abstract class BaseChart {\n  results: any[];\n\n  update() {\n    this.results = this.cloneData(this.results);\n  }\n\n  // Clones the data into a new object\n  cloneData(data) {\n    let results = [];\n\n    for (let item of data){\n      let copy = {\n        name: item['name']\n      };\n\n      if (item['value']) {\n        copy['value'] = item['value'];\n      };\n\n      if (item['series']) {\n        copy['series'] = [];\n        for (let seriesItem of item['series']){\n          let seriesItemCopy = Object.assign({}, seriesItem);\n          copy['series'].push(seriesItemCopy);\n        }\n      }\n\n      results.push(copy);\n    }\n\n    return results;\n  }\n\n  abstract setColors()\n\n  abstract click(data)\n}\n\n\n\n// WEBPACK FOOTER //\n// node_modules/tslint-loader!./src/common/base-chart.component.ts","export interface ViewDimensions {\n  width: number;\n  height: number;\n  xOffset: number;\n}\n\nexport function calculateViewDimensions(view, margins, showXLabel, showYLabel, showLegend, columns = 12): ViewDimensions {\n  let width = view[0];\n  let height = view[1];\n  let xOffset = margins[3];\n  // let yOffset = margins[0]; // unused\n  if (showLegend) {\n    width = width * columns / 12;\n  }\n\n  width = width - margins[1] - margins[3];\n  height = height - margins[0] - margins[2];\n\n  if (showXLabel) {\n    height -= 40;\n  }\n\n  if (showYLabel) {\n    width -= 60;\n    xOffset += 60;\n  }\n\n  width = Math.max(0, width);\n  height = Math.max(0, height);\n\n  return {width: width, height: height, xOffset: xOffset};\n}\n\n\n\n// WEBPACK FOOTER //\n// node_modules/tslint-loader!./src/common/view-dimensions.helper.ts","import d3 from '../d3';\n\nexport var colorSets = [\n  {\n    'name': 'flame',\n    'base': '#590012', // Base Color for Gradients\n    'group': 'general',\n    'domain': ['#A10A28', '#D3342D', '#EF6D49', '#FAAD67', '#FDDE90', '#DBED91', '#A9D770', '#6CBA67', '#2C9653', '#146738']\n  },\n  {\n    'name': 'ocean',\n    'base': '#0340B9', // Base Color for Gradients\n    'group': 'general',\n    'domain': ['#1D68FB', '#33C0FC', '#4AFFFE', '#AFFFFF', '#FFFC63', '#FDBD2D', '#FC8A25', '#FA4F1E', '#FA141B', '#BA38D1']\n  },\n  {\n    'name': 'forest',\n    'base': '#258203', // Base Color for Gradients\n    'group': 'general',\n    'domain': ['#55C22D', '#C1F33D', '#3CC099', '#AFFFFF', '#8CFC9D', '#76CFFA', '#BA60FB', '#EE6490', '#C42A1C', '#FC9F32']\n  },\n  {\n    'name': 'horizon',\n    'base': '#026CCB', // Base Color for Gradients\n    'group': 'general',\n    'domain': ['#2597FB', '#65EBFD', '#99FDD0', '#FCEE4B', '#FEFCFA', '#FDD6E3', '#FCB1A8', '#EF6F7B', '#CB96E8', '#EFDEE0']\n  },\n  {\n    'name': 'neons',\n    'base': '#B20000', // Base Color for Gradients\n    'group': 'general',\n    'domain': ['#FF3333', '#FF33FF', '#CC33FF', '#0000FF', '#33CCFF', '#33FFFF', '#33FF66', '#CCFF33', '#FFCC00', '#FF6600']\n  },\n  {\n    'name': 'picnic',\n    'base': '#A37C00', // Base Color for Gradients\n    'group': 'general',\n    'domain': ['#FAC51D', '#66BD6D', '#FAA026', '#29BB9C', '#E96B56', '#55ACD2', '#B7332F', '#2C83C9', '#9166B8', '#92E7E8']\n  },\n  {\n    'name': 'night',\n    'base': '#48025F',\n    'group': 'general',\n    'domain': [\"#2B1B5A\", \"#501356\", \"#183356\", \"#28203F\", \"#391B3C\", \"#1E2B3C\", \"#120634\", \"#2D0432\", \"#051932\", \"#453080\", \"#75267D\", \"#2C507D\", \"#4B3880\", \"#752F7D\", \"#35547D\"]\n  },\n  {\n    'name': 'nightLights',\n    'base': '#4e31a5',\n    'group': 'general',\n    'domain': [\"#4e31a5\", \"#9c25a7\", \"#3065ab\", \"#57468b\", \"#904497\", \"#46648b\", \"#32118d\", \"#a00fb3\", \"#1052a2\", \"#6e51bd\", \"#b63cc3\", \"#6c97cb\", \"#8671c1\", \"#b455be\", \"#7496c3\"]\n  },\n\n  {\n    'name': 'yellowGreen',\n    'group': 'gradient',\n    'domain': [\"#f7fcb9\", \"#addd8e\", \"#31a354\"]\n  },\n\n  {\n    'name': 'purpleRed',\n    'group': 'gradient',\n    'domain': [\"#e7e1ef\", \"#c994c7\", \"#dd1c77\"]\n  },\n\n  {\n    'name': 'yellowGreenBlue',\n    'group': 'gradient',\n    'domain': [\"#edf8b1\", \"#7fcdbb\", \"#2c7fb8\"]\n  },\n\n];\n\nexport function generateColorScale(scheme, type, domain) {\n  if (typeof(scheme) === 'string') {\n    scheme = colorSets.find(cs => {\n      return cs.name === scheme;\n    });\n  }\n  let colorScale;\n  if (type === 'quantile') {\n    colorScale = d3.scaleQuantile()\n      .range(scheme.domain)\n      .domain(domain);\n\n  } else if (type === 'ordinal') {\n    colorScale = d3.scaleOrdinal()\n      .range(scheme.domain)\n      .domain(domain);\n\n  } else if (type === 'linear') {\n    colorScale = d3.scaleLinear()\n      .domain(d3.range(0, 1, 1.0 / (scheme.domain.length - 1)))\n      .range(scheme.domain);\n  }\n\n  return colorScale;\n}\n\nexport function colorHelper(scheme, type, domain, customColors?) {\n  let colorScale = generateColorScale(scheme, type, domain);\n  let colorScaleFunction = function(value) {\n    if (type === 'linear') {\n      let valueScale = d3.scaleLinear()\n        .domain(domain)\n        .range([0, 1]);\n\n      return (colorScale(valueScale(value)));\n    } else {\n      let formattedValue = value.toString();\n      let found: any = undefined; // todo type customColors\n      if (customColors && customColors.length > 0) {\n        found = customColors.find((mapping) => {\n          return mapping.name === formattedValue.toLowerCase();\n        });\n      }\n\n      if (found) {\n        return found.value;\n      } else {\n        return colorScale(value);\n      }\n    }\n  };\n\n  return colorScaleFunction;\n}\n\n\n\n// WEBPACK FOOTER //\n// node_modules/tslint-loader!./src/utils/color-sets.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { isPresent } from '../facade/lang';\n/**\n * Base class for control directives.\n *\n * Only used internally in the forms module.\n *\n * @stable\n */\nexport var AbstractControlDirective = (function () {\n    function AbstractControlDirective() {\n    }\n    Object.defineProperty(AbstractControlDirective.prototype, \"control\", {\n        get: function () { throw new Error('unimplemented'); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlDirective.prototype, \"value\", {\n        get: function () { return isPresent(this.control) ? this.control.value : null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlDirective.prototype, \"valid\", {\n        get: function () { return isPresent(this.control) ? this.control.valid : null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlDirective.prototype, \"invalid\", {\n        get: function () { return isPresent(this.control) ? this.control.invalid : null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlDirective.prototype, \"pending\", {\n        get: function () { return isPresent(this.control) ? this.control.pending : null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlDirective.prototype, \"errors\", {\n        get: function () {\n            return isPresent(this.control) ? this.control.errors : null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlDirective.prototype, \"pristine\", {\n        get: function () { return isPresent(this.control) ? this.control.pristine : null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlDirective.prototype, \"dirty\", {\n        get: function () { return isPresent(this.control) ? this.control.dirty : null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlDirective.prototype, \"touched\", {\n        get: function () { return isPresent(this.control) ? this.control.touched : null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlDirective.prototype, \"untouched\", {\n        get: function () { return isPresent(this.control) ? this.control.untouched : null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlDirective.prototype, \"disabled\", {\n        get: function () { return isPresent(this.control) ? this.control.disabled : null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlDirective.prototype, \"enabled\", {\n        get: function () { return isPresent(this.control) ? this.control.enabled : null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlDirective.prototype, \"statusChanges\", {\n        get: function () {\n            return isPresent(this.control) ? this.control.statusChanges : null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlDirective.prototype, \"valueChanges\", {\n        get: function () {\n            return isPresent(this.control) ? this.control.valueChanges : null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlDirective.prototype, \"path\", {\n        get: function () { return null; },\n        enumerable: true,\n        configurable: true\n    });\n    AbstractControlDirective.prototype.reset = function (value) {\n        if (value === void 0) { value = undefined; }\n        if (isPresent(this.control))\n            this.control.reset(value);\n    };\n    return AbstractControlDirective;\n}());\n//# sourceMappingURL=abstract_control_directive.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@angular/forms/src/directives/abstract_control_directive.js\n// module id = 212\n// module chunks = 1","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { Directive, Self } from '@angular/core';\nimport { isPresent } from '../facade/lang';\nimport { ControlContainer } from './control_container';\nimport { NgControl } from './ng_control';\nexport var AbstractControlStatus = (function () {\n    function AbstractControlStatus(cd) {\n        this._cd = cd;\n    }\n    Object.defineProperty(AbstractControlStatus.prototype, \"ngClassUntouched\", {\n        get: function () {\n            return isPresent(this._cd.control) ? this._cd.control.untouched : false;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlStatus.prototype, \"ngClassTouched\", {\n        get: function () {\n            return isPresent(this._cd.control) ? this._cd.control.touched : false;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlStatus.prototype, \"ngClassPristine\", {\n        get: function () {\n            return isPresent(this._cd.control) ? this._cd.control.pristine : false;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlStatus.prototype, \"ngClassDirty\", {\n        get: function () {\n            return isPresent(this._cd.control) ? this._cd.control.dirty : false;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlStatus.prototype, \"ngClassValid\", {\n        get: function () {\n            return isPresent(this._cd.control) ? this._cd.control.valid : false;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlStatus.prototype, \"ngClassInvalid\", {\n        get: function () {\n            return isPresent(this._cd.control) ? this._cd.control.invalid : false;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return AbstractControlStatus;\n}());\nexport var ngControlStatusHost = {\n    '[class.ng-untouched]': 'ngClassUntouched',\n    '[class.ng-touched]': 'ngClassTouched',\n    '[class.ng-pristine]': 'ngClassPristine',\n    '[class.ng-dirty]': 'ngClassDirty',\n    '[class.ng-valid]': 'ngClassValid',\n    '[class.ng-invalid]': 'ngClassInvalid'\n};\n/**\n * Directive automatically applied to Angular form controls that sets CSS classes\n * based on control status (valid/invalid/dirty/etc).\n *\n * @stable\n */\nexport var NgControlStatus = (function (_super) {\n    __extends(NgControlStatus, _super);\n    function NgControlStatus(cd) {\n        _super.call(this, cd);\n    }\n    NgControlStatus.decorators = [\n        { type: Directive, args: [{ selector: '[formControlName],[ngModel],[formControl]', host: ngControlStatusHost },] },\n    ];\n    /** @nocollapse */\n    NgControlStatus.ctorParameters = [\n        { type: NgControl, decorators: [{ type: Self },] },\n    ];\n    return NgControlStatus;\n}(AbstractControlStatus));\n/**\n * Directive automatically applied to Angular form groups that sets CSS classes\n * based on control status (valid/invalid/dirty/etc).\n *\n * @stable\n */\nexport var NgControlStatusGroup = (function (_super) {\n    __extends(NgControlStatusGroup, _super);\n    function NgControlStatusGroup(cd) {\n        _super.call(this, cd);\n    }\n    NgControlStatusGroup.decorators = [\n        { type: Directive, args: [{\n                    selector: '[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]',\n                    host: ngControlStatusHost\n                },] },\n    ];\n    /** @nocollapse */\n    NgControlStatusGroup.ctorParameters = [\n        { type: ControlContainer, decorators: [{ type: Self },] },\n    ];\n    return NgControlStatusGroup;\n}(AbstractControlStatus));\n//# sourceMappingURL=ng_control_status.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@angular/forms/src/directives/ng_control_status.js\n// module id = 213\n// module chunks = 1","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { Directive, Host, Inject, Input, Optional, Output, Self, forwardRef } from '@angular/core';\nimport { EventEmitter } from '../facade/async';\nimport { FormControl } from '../model';\nimport { NG_ASYNC_VALIDATORS, NG_VALIDATORS } from '../validators';\nimport { AbstractFormGroupDirective } from './abstract_form_group_directive';\nimport { ControlContainer } from './control_container';\nimport { NG_VALUE_ACCESSOR } from './control_value_accessor';\nimport { NgControl } from './ng_control';\nimport { NgForm } from './ng_form';\nimport { NgModelGroup } from './ng_model_group';\nimport { composeAsyncValidators, composeValidators, controlPath, isPropertyUpdated, selectValueAccessor, setUpControl } from './shared';\nimport { TemplateDrivenErrors } from './template_driven_errors';\nexport var formControlBinding = {\n    provide: NgControl,\n    useExisting: forwardRef(function () { return NgModel; })\n};\nvar resolvedPromise = Promise.resolve(null);\n/**\n * Binds a domain model to a form control.\n *\n * ### Usage\n *\n * `ngModel` binds an existing domain model to a form control. For a\n * two-way binding, use `[(ngModel)]` to ensure the model updates in\n * both directions.\n *\n *  ```typescript\n * @Component({\n *      selector: \"search-comp\",\n *      directives: [],\n *      template: `<input type='text' [(ngModel)]=\"searchQuery\">`\n *      })\n * class SearchComp {\n *  searchQuery: string;\n * }\n *  ```\n *\n *  @stable\n */\nexport var NgModel = (function (_super) {\n    __extends(NgModel, _super);\n    function NgModel(parent, validators, asyncValidators, valueAccessors) {\n        _super.call(this);\n        /** @internal */\n        this._control = new FormControl();\n        /** @internal */\n        this._registered = false;\n        this.update = new EventEmitter();\n        this._parent = parent;\n        this._rawValidators = validators || [];\n        this._rawAsyncValidators = asyncValidators || [];\n        this.valueAccessor = selectValueAccessor(this, valueAccessors);\n    }\n    NgModel.prototype.ngOnChanges = function (changes) {\n        this._checkForErrors();\n        if (!this._registered)\n            this._setUpControl();\n        if ('isDisabled' in changes) {\n            this._updateDisabled(changes);\n        }\n        if (isPropertyUpdated(changes, this.viewModel)) {\n            this._updateValue(this.model);\n            this.viewModel = this.model;\n        }\n    };\n    NgModel.prototype.ngOnDestroy = function () { this.formDirective && this.formDirective.removeControl(this); };\n    Object.defineProperty(NgModel.prototype, \"control\", {\n        get: function () { return this._control; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgModel.prototype, \"path\", {\n        get: function () {\n            return this._parent ? controlPath(this.name, this._parent) : [this.name];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgModel.prototype, \"formDirective\", {\n        get: function () { return this._parent ? this._parent.formDirective : null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgModel.prototype, \"validator\", {\n        get: function () { return composeValidators(this._rawValidators); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgModel.prototype, \"asyncValidator\", {\n        get: function () {\n            return composeAsyncValidators(this._rawAsyncValidators);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    NgModel.prototype.viewToModelUpdate = function (newValue) {\n        this.viewModel = newValue;\n        this.update.emit(newValue);\n    };\n    NgModel.prototype._setUpControl = function () {\n        this._isStandalone() ? this._setUpStandalone() :\n            this.formDirective.addControl(this);\n        this._registered = true;\n    };\n    NgModel.prototype._isStandalone = function () {\n        return !this._parent || (this.options && this.options.standalone);\n    };\n    NgModel.prototype._setUpStandalone = function () {\n        setUpControl(this._control, this);\n        this._control.updateValueAndValidity({ emitEvent: false });\n    };\n    NgModel.prototype._checkForErrors = function () {\n        if (!this._isStandalone()) {\n            this._checkParentType();\n        }\n        this._checkName();\n    };\n    NgModel.prototype._checkParentType = function () {\n        if (!(this._parent instanceof NgModelGroup) &&\n            this._parent instanceof AbstractFormGroupDirective) {\n            TemplateDrivenErrors.formGroupNameException();\n        }\n        else if (!(this._parent instanceof NgModelGroup) && !(this._parent instanceof NgForm)) {\n            TemplateDrivenErrors.modelParentException();\n        }\n    };\n    NgModel.prototype._checkName = function () {\n        if (this.options && this.options.name)\n            this.name = this.options.name;\n        if (!this._isStandalone() && !this.name) {\n            TemplateDrivenErrors.missingNameException();\n        }\n    };\n    NgModel.prototype._updateValue = function (value) {\n        var _this = this;\n        resolvedPromise.then(function () { _this.control.setValue(value, { emitViewToModelChange: false }); });\n    };\n    NgModel.prototype._updateDisabled = function (changes) {\n        var _this = this;\n        var disabledValue = changes['isDisabled'].currentValue;\n        var isDisabled = disabledValue != null && disabledValue != false;\n        resolvedPromise.then(function () {\n            if (isDisabled && !_this.control.disabled) {\n                _this.control.disable();\n            }\n            else if (!isDisabled && _this.control.disabled) {\n                _this.control.enable();\n            }\n        });\n    };\n    NgModel.decorators = [\n        { type: Directive, args: [{\n                    selector: '[ngModel]:not([formControlName]):not([formControl])',\n                    providers: [formControlBinding],\n                    exportAs: 'ngModel'\n                },] },\n    ];\n    /** @nocollapse */\n    NgModel.ctorParameters = [\n        { type: ControlContainer, decorators: [{ type: Optional }, { type: Host },] },\n        { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALIDATORS,] },] },\n        { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_ASYNC_VALIDATORS,] },] },\n        { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALUE_ACCESSOR,] },] },\n    ];\n    NgModel.propDecorators = {\n        'name': [{ type: Input },],\n        'isDisabled': [{ type: Input, args: ['disabled',] },],\n        'model': [{ type: Input, args: ['ngModel',] },],\n        'options': [{ type: Input, args: ['ngModelOptions',] },],\n        'update': [{ type: Output, args: ['ngModelChange',] },],\n    };\n    return NgModel;\n}(NgControl));\n//# sourceMappingURL=ng_model.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@angular/forms/src/directives/ng_model.js\n// module id = 214\n// module chunks = 1","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Directive, ElementRef, Renderer, forwardRef } from '@angular/core';\nimport { NumberWrapper, isBlank } from '../facade/lang';\nimport { NG_VALUE_ACCESSOR } from './control_value_accessor';\nexport var NUMBER_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(function () { return NumberValueAccessor; }),\n    multi: true\n};\n/**\n * The accessor for writing a number value and listening to changes that is used by the\n * {@link NgModel}, {@link FormControlDirective}, and {@link FormControlName} directives.\n *\n *  ### Example\n *  ```\n *  <input type=\"number\" [(ngModel)]=\"age\">\n *  ```\n */\nexport var NumberValueAccessor = (function () {\n    function NumberValueAccessor(_renderer, _elementRef) {\n        this._renderer = _renderer;\n        this._elementRef = _elementRef;\n        this.onChange = function (_) { };\n        this.onTouched = function () { };\n    }\n    NumberValueAccessor.prototype.writeValue = function (value) {\n        // The value needs to be normalized for IE9, otherwise it is set to 'null' when null\n        var normalizedValue = isBlank(value) ? '' : value;\n        this._renderer.setElementProperty(this._elementRef.nativeElement, 'value', normalizedValue);\n    };\n    NumberValueAccessor.prototype.registerOnChange = function (fn) {\n        this.onChange = function (value) { fn(value == '' ? null : NumberWrapper.parseFloat(value)); };\n    };\n    NumberValueAccessor.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n    NumberValueAccessor.prototype.setDisabledState = function (isDisabled) {\n        this._renderer.setElementProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n    };\n    NumberValueAccessor.decorators = [\n        { type: Directive, args: [{\n                    selector: 'input[type=number][formControlName],input[type=number][formControl],input[type=number][ngModel]',\n                    host: {\n                        '(change)': 'onChange($event.target.value)',\n                        '(input)': 'onChange($event.target.value)',\n                        '(blur)': 'onTouched()'\n                    },\n                    providers: [NUMBER_VALUE_ACCESSOR]\n                },] },\n    ];\n    /** @nocollapse */\n    NumberValueAccessor.ctorParameters = [\n        { type: Renderer, },\n        { type: ElementRef, },\n    ];\n    return NumberValueAccessor;\n}());\n//# sourceMappingURL=number_value_accessor.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@angular/forms/src/directives/number_value_accessor.js\n// module id = 215\n// module chunks = 1","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { Directive, Inject, Input, Optional, Output, Self, forwardRef } from '@angular/core';\nimport { EventEmitter } from '../../facade/async';\nimport { StringMapWrapper } from '../../facade/collection';\nimport { NG_ASYNC_VALIDATORS, NG_VALIDATORS } from '../../validators';\nimport { NG_VALUE_ACCESSOR } from '../control_value_accessor';\nimport { NgControl } from '../ng_control';\nimport { ReactiveErrors } from '../reactive_errors';\nimport { composeAsyncValidators, composeValidators, isPropertyUpdated, selectValueAccessor, setUpControl } from '../shared';\nexport var formControlBinding = {\n    provide: NgControl,\n    useExisting: forwardRef(function () { return FormControlDirective; })\n};\n/**\n * Binds an existing {@link FormControl} to a DOM element. It requires importing the {@link\n * ReactiveFormsModule}.\n *\n * In this example, we bind the control to an input element. When the value of the input element\n * changes, the value of the control will reflect that change. Likewise, if the value of the\n * control changes, the input element reflects that change.\n *\n *  ```typescript\n * @Component({\n *   selector: 'my-app',\n *   template: `\n *     <div>\n *       <h2>Bind existing control example</h2>\n *       <form>\n *         <p>Element with existing control: <input type=\"text\"\n * [formControl]=\"loginControl\"></p>\n *         <p>Value of existing control: {{loginControl.value}}</p>\n *       </form>\n *     </div>\n *   `,\n * })\n * export class App {\n *   loginControl: FormControl = new FormControl('');\n * }\n *  ```\n *\n * ### ngModel\n *\n * We can also set the value of the form programmatically with setValue().\n **\n *  ```typescript\n * @Component({\n *      selector: \"login-comp\",\n\n *      template: \"<input type='text' [formControl]='loginControl'>\"\n *      })\n * class LoginComp {\n *  loginControl: FormControl = new FormControl('');\n *\n *  populate() {\n *    this.loginControl.setValue('some login');\n *  }\n *\n * }\n *  ```\n *\n *  @stable\n */\nexport var FormControlDirective = (function (_super) {\n    __extends(FormControlDirective, _super);\n    function FormControlDirective(validators, asyncValidators, valueAccessors) {\n        _super.call(this);\n        this.update = new EventEmitter();\n        this._rawValidators = validators || [];\n        this._rawAsyncValidators = asyncValidators || [];\n        this.valueAccessor = selectValueAccessor(this, valueAccessors);\n    }\n    Object.defineProperty(FormControlDirective.prototype, \"isDisabled\", {\n        set: function (isDisabled) { ReactiveErrors.disabledAttrWarning(); },\n        enumerable: true,\n        configurable: true\n    });\n    FormControlDirective.prototype.ngOnChanges = function (changes) {\n        if (this._isControlChanged(changes)) {\n            setUpControl(this.form, this);\n            if (this.control.disabled)\n                this.valueAccessor.setDisabledState(true);\n            this.form.updateValueAndValidity({ emitEvent: false });\n        }\n        if (isPropertyUpdated(changes, this.viewModel)) {\n            this.form.setValue(this.model);\n            this.viewModel = this.model;\n        }\n    };\n    Object.defineProperty(FormControlDirective.prototype, \"path\", {\n        get: function () { return []; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FormControlDirective.prototype, \"validator\", {\n        get: function () { return composeValidators(this._rawValidators); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FormControlDirective.prototype, \"asyncValidator\", {\n        get: function () {\n            return composeAsyncValidators(this._rawAsyncValidators);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FormControlDirective.prototype, \"control\", {\n        get: function () { return this.form; },\n        enumerable: true,\n        configurable: true\n    });\n    FormControlDirective.prototype.viewToModelUpdate = function (newValue) {\n        this.viewModel = newValue;\n        this.update.emit(newValue);\n    };\n    FormControlDirective.prototype._isControlChanged = function (changes) {\n        return StringMapWrapper.contains(changes, 'form');\n    };\n    FormControlDirective.decorators = [\n        { type: Directive, args: [{ selector: '[formControl]', providers: [formControlBinding], exportAs: 'ngForm' },] },\n    ];\n    /** @nocollapse */\n    FormControlDirective.ctorParameters = [\n        { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALIDATORS,] },] },\n        { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_ASYNC_VALIDATORS,] },] },\n        { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALUE_ACCESSOR,] },] },\n    ];\n    FormControlDirective.propDecorators = {\n        'form': [{ type: Input, args: ['formControl',] },],\n        'model': [{ type: Input, args: ['ngModel',] },],\n        'update': [{ type: Output, args: ['ngModelChange',] },],\n        'isDisabled': [{ type: Input, args: ['disabled',] },],\n    };\n    return FormControlDirective;\n}(NgControl));\n//# sourceMappingURL=form_control_directive.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@angular/forms/src/directives/reactive_directives/form_control_directive.js\n// module id = 216\n// module chunks = 1","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { Directive, Host, Inject, Input, Optional, Output, Self, SkipSelf, forwardRef } from '@angular/core';\nimport { EventEmitter } from '../../facade/async';\nimport { NG_ASYNC_VALIDATORS, NG_VALIDATORS } from '../../validators';\nimport { AbstractFormGroupDirective } from '../abstract_form_group_directive';\nimport { ControlContainer } from '../control_container';\nimport { NG_VALUE_ACCESSOR } from '../control_value_accessor';\nimport { NgControl } from '../ng_control';\nimport { ReactiveErrors } from '../reactive_errors';\nimport { composeAsyncValidators, composeValidators, controlPath, isPropertyUpdated, selectValueAccessor } from '../shared';\nimport { FormGroupDirective } from './form_group_directive';\nimport { FormArrayName, FormGroupName } from './form_group_name';\nexport var controlNameBinding = {\n    provide: NgControl,\n    useExisting: forwardRef(function () { return FormControlName; })\n};\n/**\n * Syncs an existing form control with the specified name to a DOM element.\n *\n * This directive can only be used as a child of {@link FormGroupDirective}.  It also requires\n * importing the {@link ReactiveFormsModule}.\n\n * ### Example\n *\n * In this example, we create the login and password controls.\n * We can work with each control separately: check its validity, get its value, listen to its\n * changes.\n *\n *  ```\n * @Component({\n *      selector: \"login-comp\",\n *      template: `\n *        <form [formGroup]=\"myForm\" (submit)=\"onLogIn()\">\n *          Login <input type=\"text\" formControlName=\"login\">\n *          <div *ngIf=\"!loginCtrl.valid\">Login is invalid</div>\n *          Password <input type=\"password\" formControlName=\"password\">\n *          <button type=\"submit\">Log in!</button>\n *        </form>\n *      `})\n * class LoginComp {\n *  loginCtrl = new FormControl();\n *  passwordCtrl = new FormControl();\n *  myForm = new FormGroup({\n *     login: loginCtrl,\n *     password: passwordCtrl\n *  });\n *  onLogIn(): void {\n *    // value === {login: 'some login', password: 'some password'}\n *  }\n * }\n *  ```\n *\n * We can also set the value of the form programmatically using setValue().\n *\n *  ```\n * @Component({\n *      selector: \"login-comp\",\n *      template: `\n *        <form [formGroup]=\"myForm\" (submit)='onLogIn()'>\n *          Login <input type='text' formControlName='login'>\n *          Password <input type='password' formControlName='password'>\n *          <button type='submit'>Log in!</button>\n *        </form>\n *      `})\n * class LoginComp {\n *  myForm = new FormGroup({\n *    login: new FormControl(),\n *    password: new FormControl()\n *  });\n *\n *  populate() {\n *     this.myForm.setValue({login: 'some login', password: 'some password'});\n *  }\n *\n *  onLogIn(): void {\n *    // this.credentials.login === \"some login\"\n *    // this.credentials.password === \"some password\"\n *  }\n * }\n *  ```\n *\n *  @stable\n */\nexport var FormControlName = (function (_super) {\n    __extends(FormControlName, _super);\n    function FormControlName(parent, validators, asyncValidators, valueAccessors) {\n        _super.call(this);\n        this._added = false;\n        this.update = new EventEmitter();\n        this._parent = parent;\n        this._rawValidators = validators || [];\n        this._rawAsyncValidators = asyncValidators || [];\n        this.valueAccessor = selectValueAccessor(this, valueAccessors);\n    }\n    Object.defineProperty(FormControlName.prototype, \"isDisabled\", {\n        set: function (isDisabled) { ReactiveErrors.disabledAttrWarning(); },\n        enumerable: true,\n        configurable: true\n    });\n    FormControlName.prototype.ngOnChanges = function (changes) {\n        if (!this._added) {\n            this._checkParentType();\n            this.formDirective.addControl(this);\n            if (this.control.disabled)\n                this.valueAccessor.setDisabledState(true);\n            this._added = true;\n        }\n        if (isPropertyUpdated(changes, this.viewModel)) {\n            this.viewModel = this.model;\n            this.formDirective.updateModel(this, this.model);\n        }\n    };\n    FormControlName.prototype.ngOnDestroy = function () {\n        if (this.formDirective) {\n            this.formDirective.removeControl(this);\n        }\n    };\n    FormControlName.prototype.viewToModelUpdate = function (newValue) {\n        this.viewModel = newValue;\n        this.update.emit(newValue);\n    };\n    Object.defineProperty(FormControlName.prototype, \"path\", {\n        get: function () { return controlPath(this.name, this._parent); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FormControlName.prototype, \"formDirective\", {\n        get: function () { return this._parent ? this._parent.formDirective : null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FormControlName.prototype, \"validator\", {\n        get: function () { return composeValidators(this._rawValidators); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FormControlName.prototype, \"asyncValidator\", {\n        get: function () {\n            return composeAsyncValidators(this._rawAsyncValidators);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FormControlName.prototype, \"control\", {\n        get: function () { return this.formDirective.getControl(this); },\n        enumerable: true,\n        configurable: true\n    });\n    FormControlName.prototype._checkParentType = function () {\n        if (!(this._parent instanceof FormGroupName) &&\n            this._parent instanceof AbstractFormGroupDirective) {\n            ReactiveErrors.ngModelGroupException();\n        }\n        else if (!(this._parent instanceof FormGroupName) && !(this._parent instanceof FormGroupDirective) &&\n            !(this._parent instanceof FormArrayName)) {\n            ReactiveErrors.controlParentException();\n        }\n    };\n    FormControlName.decorators = [\n        { type: Directive, args: [{ selector: '[formControlName]', providers: [controlNameBinding] },] },\n    ];\n    /** @nocollapse */\n    FormControlName.ctorParameters = [\n        { type: ControlContainer, decorators: [{ type: Optional }, { type: Host }, { type: SkipSelf },] },\n        { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALIDATORS,] },] },\n        { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_ASYNC_VALIDATORS,] },] },\n        { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALUE_ACCESSOR,] },] },\n    ];\n    FormControlName.propDecorators = {\n        'name': [{ type: Input, args: ['formControlName',] },],\n        'model': [{ type: Input, args: ['ngModel',] },],\n        'update': [{ type: Output, args: ['ngModelChange',] },],\n        'isDisabled': [{ type: Input, args: ['disabled',] },],\n    };\n    return FormControlName;\n}(NgControl));\n//# sourceMappingURL=form_control_name.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@angular/forms/src/directives/reactive_directives/form_control_name.js\n// module id = 217\n// module chunks = 1","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Directive, Input, forwardRef } from '@angular/core';\nimport { isPresent } from '../facade/lang';\nimport { NG_VALIDATORS, Validators } from '../validators';\nexport var REQUIRED_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(function () { return RequiredValidator; }),\n    multi: true\n};\n/**\n * A Directive that adds the `required` validator to any controls marked with the\n * `required` attribute, via the {@link NG_VALIDATORS} binding.\n *\n * ### Example\n *\n * ```\n * <input name=\"fullName\" ngModel required>\n * ```\n *\n * @stable\n */\nexport var RequiredValidator = (function () {\n    function RequiredValidator() {\n    }\n    Object.defineProperty(RequiredValidator.prototype, \"required\", {\n        get: function () { return this._required; },\n        set: function (value) {\n            this._required = isPresent(value) && \"\" + value !== 'false';\n            if (this._onChange)\n                this._onChange();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    RequiredValidator.prototype.validate = function (c) {\n        return this.required ? Validators.required(c) : null;\n    };\n    RequiredValidator.prototype.registerOnChange = function (fn) { this._onChange = fn; };\n    RequiredValidator.decorators = [\n        { type: Directive, args: [{\n                    selector: '[required][formControlName],[required][formControl],[required][ngModel]',\n                    providers: [REQUIRED_VALIDATOR],\n                    host: { '[attr.required]': 'required? \"\" : null' }\n                },] },\n    ];\n    /** @nocollapse */\n    RequiredValidator.ctorParameters = [];\n    RequiredValidator.propDecorators = {\n        'required': [{ type: Input },],\n    };\n    return RequiredValidator;\n}());\n/**\n * Provider which adds {@link MinLengthValidator} to {@link NG_VALIDATORS}.\n *\n * ## Example:\n *\n * {@example common/forms/ts/validators/validators.ts region='min'}\n */\nexport var MIN_LENGTH_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(function () { return MinLengthValidator; }),\n    multi: true\n};\n/**\n * A directive which installs the {@link MinLengthValidator} for any `formControlName`,\n * `formControl`, or control with `ngModel` that also has a `minlength` attribute.\n *\n * @stable\n */\nexport var MinLengthValidator = (function () {\n    function MinLengthValidator() {\n    }\n    MinLengthValidator.prototype._createValidator = function () {\n        this._validator = Validators.minLength(parseInt(this.minlength, 10));\n    };\n    MinLengthValidator.prototype.ngOnChanges = function (changes) {\n        if (changes['minlength']) {\n            this._createValidator();\n            if (this._onChange)\n                this._onChange();\n        }\n    };\n    MinLengthValidator.prototype.validate = function (c) {\n        return isPresent(this.minlength) ? this._validator(c) : null;\n    };\n    MinLengthValidator.prototype.registerOnChange = function (fn) { this._onChange = fn; };\n    MinLengthValidator.decorators = [\n        { type: Directive, args: [{\n                    selector: '[minlength][formControlName],[minlength][formControl],[minlength][ngModel]',\n                    providers: [MIN_LENGTH_VALIDATOR],\n                    host: { '[attr.minlength]': 'minlength? minlength : null' }\n                },] },\n    ];\n    /** @nocollapse */\n    MinLengthValidator.ctorParameters = [];\n    MinLengthValidator.propDecorators = {\n        'minlength': [{ type: Input },],\n    };\n    return MinLengthValidator;\n}());\n/**\n * Provider which adds {@link MaxLengthValidator} to {@link NG_VALIDATORS}.\n *\n * ## Example:\n *\n * {@example common/forms/ts/validators/validators.ts region='max'}\n */\nexport var MAX_LENGTH_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(function () { return MaxLengthValidator; }),\n    multi: true\n};\n/**\n * A directive which installs the {@link MaxLengthValidator} for any `formControlName,\n * `formControl`,\n * or control with `ngModel` that also has a `maxlength` attribute.\n *\n * @stable\n */\nexport var MaxLengthValidator = (function () {\n    function MaxLengthValidator() {\n    }\n    MaxLengthValidator.prototype._createValidator = function () {\n        this._validator = Validators.maxLength(parseInt(this.maxlength, 10));\n    };\n    MaxLengthValidator.prototype.ngOnChanges = function (changes) {\n        if (changes['maxlength']) {\n            this._createValidator();\n            if (this._onChange)\n                this._onChange();\n        }\n    };\n    MaxLengthValidator.prototype.validate = function (c) {\n        return isPresent(this.maxlength) ? this._validator(c) : null;\n    };\n    MaxLengthValidator.prototype.registerOnChange = function (fn) { this._onChange = fn; };\n    MaxLengthValidator.decorators = [\n        { type: Directive, args: [{\n                    selector: '[maxlength][formControlName],[maxlength][formControl],[maxlength][ngModel]',\n                    providers: [MAX_LENGTH_VALIDATOR],\n                    host: { '[attr.maxlength]': 'maxlength? maxlength : null' }\n                },] },\n    ];\n    /** @nocollapse */\n    MaxLengthValidator.ctorParameters = [];\n    MaxLengthValidator.propDecorators = {\n        'maxlength': [{ type: Input },],\n    };\n    return MaxLengthValidator;\n}());\nexport var PATTERN_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(function () { return PatternValidator; }),\n    multi: true\n};\n/**\n * A Directive that adds the `pattern` validator to any controls marked with the\n * `pattern` attribute, via the {@link NG_VALIDATORS} binding. Uses attribute value\n * as the regex to validate Control value against.  Follows pattern attribute\n * semantics; i.e. regex must match entire Control value.\n *\n * ### Example\n *\n * ```\n * <input [name]=\"fullName\" pattern=\"[a-zA-Z ]*\" ngModel>\n * ```\n * @stable\n */\nexport var PatternValidator = (function () {\n    function PatternValidator() {\n    }\n    PatternValidator.prototype._createValidator = function () { this._validator = Validators.pattern(this.pattern); };\n    PatternValidator.prototype.ngOnChanges = function (changes) {\n        if (changes['pattern']) {\n            this._createValidator();\n            if (this._onChange)\n                this._onChange();\n        }\n    };\n    PatternValidator.prototype.validate = function (c) {\n        return isPresent(this.pattern) ? this._validator(c) : null;\n    };\n    PatternValidator.prototype.registerOnChange = function (fn) { this._onChange = fn; };\n    PatternValidator.decorators = [\n        { type: Directive, args: [{\n                    selector: '[pattern][formControlName],[pattern][formControl],[pattern][ngModel]',\n                    providers: [PATTERN_VALIDATOR],\n                    host: { '[attr.pattern]': 'pattern? pattern : null' }\n                },] },\n    ];\n    /** @nocollapse */\n    PatternValidator.ctorParameters = [];\n    PatternValidator.propDecorators = {\n        'pattern': [{ type: Input },],\n    };\n    return PatternValidator;\n}());\n//# sourceMappingURL=validators.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@angular/forms/src/directives/validators.js\n// module id = 218\n// module chunks = 1","/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n// css base code, injected by the css-loader\r\nmodule.exports = function() {\r\n\tvar list = [];\r\n\r\n\t// return the list of modules as css string\r\n\tlist.toString = function toString() {\r\n\t\tvar result = [];\r\n\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\tvar item = this[i];\r\n\t\t\tif(item[2]) {\r\n\t\t\t\tresult.push(\"@media \" + item[2] + \"{\" + item[1] + \"}\");\r\n\t\t\t} else {\r\n\t\t\t\tresult.push(item[1]);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn result.join(\"\");\r\n\t};\r\n\r\n\t// import a list of modules into the list\r\n\tlist.i = function(modules, mediaQuery) {\r\n\t\tif(typeof modules === \"string\")\r\n\t\t\tmodules = [[null, modules, \"\"]];\r\n\t\tvar alreadyImportedModules = {};\r\n\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\tvar id = this[i][0];\r\n\t\t\tif(typeof id === \"number\")\r\n\t\t\t\talreadyImportedModules[id] = true;\r\n\t\t}\r\n\t\tfor(i = 0; i < modules.length; i++) {\r\n\t\t\tvar item = modules[i];\r\n\t\t\t// skip already imported module\r\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\r\n\t\t\t//  when a module is imported multiple times with different media queries.\r\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\r\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\r\n\t\t\t\tif(mediaQuery && !item[2]) {\r\n\t\t\t\t\titem[2] = mediaQuery;\r\n\t\t\t\t} else if(mediaQuery) {\r\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\r\n\t\t\t\t}\r\n\t\t\t\tlist.push(item);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\treturn list;\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader/lib/css-base.js\n// module id = 253\n// module chunks = 1","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar globalScope;\nif (typeof window === 'undefined') {\n    if (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope) {\n        // TODO: Replace any with WorkerGlobalScope from lib.webworker.d.ts #3492\n        globalScope = self;\n    }\n    else {\n        globalScope = global;\n    }\n}\nelse {\n    globalScope = window;\n}\nexport function scheduleMicroTask(fn) {\n    Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n}\n// Need to declare a new variable for global here since TypeScript\n// exports the original value of the symbol.\nvar _global = globalScope;\nexport { _global as global };\nexport function getTypeNameForDebugging(type) {\n    if (type['name']) {\n        return type['name'];\n    }\n    return typeof type;\n}\nexport var Math = _global.Math;\nexport var Date = _global.Date;\n// TODO: remove calls to assert in production environment\n// Note: Can't just export this and import in in other files\n// as `assert` is a reserved keyword in Dart\n_global.assert = function assert(condition) {\n    // TODO: to be fixed properly via #2830, noop for now\n};\nexport function isPresent(obj) {\n    return obj !== undefined && obj !== null;\n}\nexport function isBlank(obj) {\n    return obj === undefined || obj === null;\n}\nexport function isBoolean(obj) {\n    return typeof obj === 'boolean';\n}\nexport function isNumber(obj) {\n    return typeof obj === 'number';\n}\nexport function isString(obj) {\n    return typeof obj === 'string';\n}\nexport function isFunction(obj) {\n    return typeof obj === 'function';\n}\nexport function isType(obj) {\n    return isFunction(obj);\n}\nexport function isStringMap(obj) {\n    return typeof obj === 'object' && obj !== null;\n}\nvar STRING_MAP_PROTO = Object.getPrototypeOf({});\nexport function isStrictStringMap(obj) {\n    return isStringMap(obj) && Object.getPrototypeOf(obj) === STRING_MAP_PROTO;\n}\nexport function isPromise(obj) {\n    // allow any Promise/A+ compliant thenable.\n    // It's up to the caller to ensure that obj.then conforms to the spec\n    return isPresent(obj) && isFunction(obj.then);\n}\nexport function isArray(obj) {\n    return Array.isArray(obj);\n}\nexport function isDate(obj) {\n    return obj instanceof Date && !isNaN(obj.valueOf());\n}\nexport function noop() { }\nexport function stringify(token) {\n    if (typeof token === 'string') {\n        return token;\n    }\n    if (token === undefined || token === null) {\n        return '' + token;\n    }\n    if (token.overriddenName) {\n        return token.overriddenName;\n    }\n    if (token.name) {\n        return token.name;\n    }\n    var res = token.toString();\n    var newLineIndex = res.indexOf('\\n');\n    return (newLineIndex === -1) ? res : res.substring(0, newLineIndex);\n}\n// serialize / deserialize enum exist only for consistency with dart API\n// enums in typescript don't need to be serialized\nexport function serializeEnum(val) {\n    return val;\n}\nexport function deserializeEnum(val, values) {\n    return val;\n}\nexport function resolveEnumToken(enumValue, val) {\n    return enumValue[val];\n}\nexport var StringWrapper = (function () {\n    function StringWrapper() {\n    }\n    StringWrapper.fromCharCode = function (code) { return String.fromCharCode(code); };\n    StringWrapper.charCodeAt = function (s, index) { return s.charCodeAt(index); };\n    StringWrapper.split = function (s, regExp) { return s.split(regExp); };\n    StringWrapper.equals = function (s, s2) { return s === s2; };\n    StringWrapper.stripLeft = function (s, charVal) {\n        if (s && s.length) {\n            var pos = 0;\n            for (var i = 0; i < s.length; i++) {\n                if (s[i] != charVal)\n                    break;\n                pos++;\n            }\n            s = s.substring(pos);\n        }\n        return s;\n    };\n    StringWrapper.stripRight = function (s, charVal) {\n        if (s && s.length) {\n            var pos = s.length;\n            for (var i = s.length - 1; i >= 0; i--) {\n                if (s[i] != charVal)\n                    break;\n                pos--;\n            }\n            s = s.substring(0, pos);\n        }\n        return s;\n    };\n    StringWrapper.replace = function (s, from, replace) {\n        return s.replace(from, replace);\n    };\n    StringWrapper.replaceAll = function (s, from, replace) {\n        return s.replace(from, replace);\n    };\n    StringWrapper.slice = function (s, from, to) {\n        if (from === void 0) { from = 0; }\n        if (to === void 0) { to = null; }\n        return s.slice(from, to === null ? undefined : to);\n    };\n    StringWrapper.replaceAllMapped = function (s, from, cb) {\n        return s.replace(from, function () {\n            var matches = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                matches[_i - 0] = arguments[_i];\n            }\n            // Remove offset & string from the result array\n            matches.splice(-2, 2);\n            // The callback receives match, p1, ..., pn\n            return cb(matches);\n        });\n    };\n    StringWrapper.contains = function (s, substr) { return s.indexOf(substr) != -1; };\n    StringWrapper.compare = function (a, b) {\n        if (a < b) {\n            return -1;\n        }\n        else if (a > b) {\n            return 1;\n        }\n        else {\n            return 0;\n        }\n    };\n    return StringWrapper;\n}());\nexport var StringJoiner = (function () {\n    function StringJoiner(parts) {\n        if (parts === void 0) { parts = []; }\n        this.parts = parts;\n    }\n    StringJoiner.prototype.add = function (part) { this.parts.push(part); };\n    StringJoiner.prototype.toString = function () { return this.parts.join(''); };\n    return StringJoiner;\n}());\nexport var NumberWrapper = (function () {\n    function NumberWrapper() {\n    }\n    NumberWrapper.toFixed = function (n, fractionDigits) { return n.toFixed(fractionDigits); };\n    NumberWrapper.equal = function (a, b) { return a === b; };\n    NumberWrapper.parseIntAutoRadix = function (text) {\n        var result = parseInt(text);\n        if (isNaN(result)) {\n            throw new Error('Invalid integer literal when parsing ' + text);\n        }\n        return result;\n    };\n    NumberWrapper.parseInt = function (text, radix) {\n        if (radix == 10) {\n            if (/^(\\-|\\+)?[0-9]+$/.test(text)) {\n                return parseInt(text, radix);\n            }\n        }\n        else if (radix == 16) {\n            if (/^(\\-|\\+)?[0-9ABCDEFabcdef]+$/.test(text)) {\n                return parseInt(text, radix);\n            }\n        }\n        else {\n            var result = parseInt(text, radix);\n            if (!isNaN(result)) {\n                return result;\n            }\n        }\n        throw new Error('Invalid integer literal when parsing ' + text + ' in base ' + radix);\n    };\n    // TODO: NaN is a valid literal but is returned by parseFloat to indicate an error.\n    NumberWrapper.parseFloat = function (text) { return parseFloat(text); };\n    Object.defineProperty(NumberWrapper, \"NaN\", {\n        get: function () { return NaN; },\n        enumerable: true,\n        configurable: true\n    });\n    NumberWrapper.isNumeric = function (value) { return !isNaN(value - parseFloat(value)); };\n    NumberWrapper.isNaN = function (value) { return isNaN(value); };\n    NumberWrapper.isInteger = function (value) { return Number.isInteger(value); };\n    return NumberWrapper;\n}());\nexport var RegExp = _global.RegExp;\nexport var FunctionWrapper = (function () {\n    function FunctionWrapper() {\n    }\n    FunctionWrapper.apply = function (fn, posArgs) { return fn.apply(null, posArgs); };\n    FunctionWrapper.bind = function (fn, scope) { return fn.bind(scope); };\n    return FunctionWrapper;\n}());\n// JS has NaN !== NaN\nexport function looseIdentical(a, b) {\n    return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n}\n// JS considers NaN is the same as NaN for map Key (while NaN !== NaN otherwise)\n// see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map\nexport function getMapKey(value) {\n    return value;\n}\nexport function normalizeBlank(obj) {\n    return isBlank(obj) ? null : obj;\n}\nexport function normalizeBool(obj) {\n    return isBlank(obj) ? false : obj;\n}\nexport function isJsObject(o) {\n    return o !== null && (typeof o === 'function' || typeof o === 'object');\n}\nexport function print(obj) {\n    console.log(obj);\n}\nexport function warn(obj) {\n    console.warn(obj);\n}\n// Can't be all uppercase as our transpiler would think it is a special directive...\nexport var Json = (function () {\n    function Json() {\n    }\n    Json.parse = function (s) { return _global.JSON.parse(s); };\n    Json.stringify = function (data) {\n        // Dart doesn't take 3 arguments\n        return _global.JSON.stringify(data, null, 2);\n    };\n    return Json;\n}());\nexport var DateWrapper = (function () {\n    function DateWrapper() {\n    }\n    DateWrapper.create = function (year, month, day, hour, minutes, seconds, milliseconds) {\n        if (month === void 0) { month = 1; }\n        if (day === void 0) { day = 1; }\n        if (hour === void 0) { hour = 0; }\n        if (minutes === void 0) { minutes = 0; }\n        if (seconds === void 0) { seconds = 0; }\n        if (milliseconds === void 0) { milliseconds = 0; }\n        return new Date(year, month - 1, day, hour, minutes, seconds, milliseconds);\n    };\n    DateWrapper.fromISOString = function (str) { return new Date(str); };\n    DateWrapper.fromMillis = function (ms) { return new Date(ms); };\n    DateWrapper.toMillis = function (date) { return date.getTime(); };\n    DateWrapper.now = function () { return new Date(); };\n    DateWrapper.toJson = function (date) { return date.toJSON(); };\n    return DateWrapper;\n}());\nexport function setValueOnPath(global, path, value) {\n    var parts = path.split('.');\n    var obj = global;\n    while (parts.length > 1) {\n        var name = parts.shift();\n        if (obj.hasOwnProperty(name) && isPresent(obj[name])) {\n            obj = obj[name];\n        }\n        else {\n            obj = obj[name] = {};\n        }\n    }\n    if (obj === undefined || obj === null) {\n        obj = {};\n    }\n    obj[parts.shift()] = value;\n}\nvar _symbolIterator = null;\nexport function getSymbolIterator() {\n    if (isBlank(_symbolIterator)) {\n        if (isPresent(globalScope.Symbol) && isPresent(Symbol.iterator)) {\n            _symbolIterator = Symbol.iterator;\n        }\n        else {\n            // es6-shim specific logic\n            var keys = Object.getOwnPropertyNames(Map.prototype);\n            for (var i = 0; i < keys.length; ++i) {\n                var key = keys[i];\n                if (key !== 'entries' && key !== 'size' &&\n                    Map.prototype[key] === Map.prototype['entries']) {\n                    _symbolIterator = key;\n                }\n            }\n        }\n    }\n    return _symbolIterator;\n}\nexport function evalExpression(sourceUrl, expr, declarations, vars) {\n    var fnBody = declarations + \"\\nreturn \" + expr + \"\\n//# sourceURL=\" + sourceUrl;\n    var fnArgNames = [];\n    var fnArgValues = [];\n    for (var argName in vars) {\n        fnArgNames.push(argName);\n        fnArgValues.push(vars[argName]);\n    }\n    return new (Function.bind.apply(Function, [void 0].concat(fnArgNames.concat(fnBody))))().apply(void 0, fnArgValues);\n}\nexport function isPrimitive(obj) {\n    return !isJsObject(obj);\n}\nexport function hasConstructor(value, type) {\n    return value.constructor === type;\n}\nexport function escape(s) {\n    return _global.encodeURI(s);\n}\nexport function escapeRegExp(s) {\n    return s.replace(/([.*+?^=!:${}()|[\\]\\/\\\\])/g, '\\\\$1');\n}\n//# sourceMappingURL=lang.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@angular/forms/src/facade/lang.js\n// module id = 26\n// module chunks = 1","/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\nvar stylesInDom = {},\r\n\tmemoize = function(fn) {\r\n\t\tvar memo;\r\n\t\treturn function () {\r\n\t\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\r\n\t\t\treturn memo;\r\n\t\t};\r\n\t},\r\n\tisOldIE = memoize(function() {\r\n\t\treturn /msie [6-9]\\b/.test(window.navigator.userAgent.toLowerCase());\r\n\t}),\r\n\tgetHeadElement = memoize(function () {\r\n\t\treturn document.head || document.getElementsByTagName(\"head\")[0];\r\n\t}),\r\n\tsingletonElement = null,\r\n\tsingletonCounter = 0,\r\n\tstyleElementsInsertedAtTop = [];\r\n\r\nmodule.exports = function(list, options) {\r\n\tif(typeof DEBUG !== \"undefined\" && DEBUG) {\r\n\t\tif(typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\r\n\t}\r\n\r\n\toptions = options || {};\r\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\r\n\t// tags it will allow on a page\r\n\tif (typeof options.singleton === \"undefined\") options.singleton = isOldIE();\r\n\r\n\t// By default, add <style> tags to the bottom of <head>.\r\n\tif (typeof options.insertAt === \"undefined\") options.insertAt = \"bottom\";\r\n\r\n\tvar styles = listToStyles(list);\r\n\taddStylesToDom(styles, options);\r\n\r\n\treturn function update(newList) {\r\n\t\tvar mayRemove = [];\r\n\t\tfor(var i = 0; i < styles.length; i++) {\r\n\t\t\tvar item = styles[i];\r\n\t\t\tvar domStyle = stylesInDom[item.id];\r\n\t\t\tdomStyle.refs--;\r\n\t\t\tmayRemove.push(domStyle);\r\n\t\t}\r\n\t\tif(newList) {\r\n\t\t\tvar newStyles = listToStyles(newList);\r\n\t\t\taddStylesToDom(newStyles, options);\r\n\t\t}\r\n\t\tfor(var i = 0; i < mayRemove.length; i++) {\r\n\t\t\tvar domStyle = mayRemove[i];\r\n\t\t\tif(domStyle.refs === 0) {\r\n\t\t\t\tfor(var j = 0; j < domStyle.parts.length; j++)\r\n\t\t\t\t\tdomStyle.parts[j]();\r\n\t\t\t\tdelete stylesInDom[domStyle.id];\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n}\r\n\r\nfunction addStylesToDom(styles, options) {\r\n\tfor(var i = 0; i < styles.length; i++) {\r\n\t\tvar item = styles[i];\r\n\t\tvar domStyle = stylesInDom[item.id];\r\n\t\tif(domStyle) {\r\n\t\t\tdomStyle.refs++;\r\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\r\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\r\n\t\t\t}\r\n\t\t\tfor(; j < item.parts.length; j++) {\r\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tvar parts = [];\r\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\r\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\r\n\t\t\t}\r\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction listToStyles(list) {\r\n\tvar styles = [];\r\n\tvar newStyles = {};\r\n\tfor(var i = 0; i < list.length; i++) {\r\n\t\tvar item = list[i];\r\n\t\tvar id = item[0];\r\n\t\tvar css = item[1];\r\n\t\tvar media = item[2];\r\n\t\tvar sourceMap = item[3];\r\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\r\n\t\tif(!newStyles[id])\r\n\t\t\tstyles.push(newStyles[id] = {id: id, parts: [part]});\r\n\t\telse\r\n\t\t\tnewStyles[id].parts.push(part);\r\n\t}\r\n\treturn styles;\r\n}\r\n\r\nfunction insertStyleElement(options, styleElement) {\r\n\tvar head = getHeadElement();\r\n\tvar lastStyleElementInsertedAtTop = styleElementsInsertedAtTop[styleElementsInsertedAtTop.length - 1];\r\n\tif (options.insertAt === \"top\") {\r\n\t\tif(!lastStyleElementInsertedAtTop) {\r\n\t\t\thead.insertBefore(styleElement, head.firstChild);\r\n\t\t} else if(lastStyleElementInsertedAtTop.nextSibling) {\r\n\t\t\thead.insertBefore(styleElement, lastStyleElementInsertedAtTop.nextSibling);\r\n\t\t} else {\r\n\t\t\thead.appendChild(styleElement);\r\n\t\t}\r\n\t\tstyleElementsInsertedAtTop.push(styleElement);\r\n\t} else if (options.insertAt === \"bottom\") {\r\n\t\thead.appendChild(styleElement);\r\n\t} else {\r\n\t\tthrow new Error(\"Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.\");\r\n\t}\r\n}\r\n\r\nfunction removeStyleElement(styleElement) {\r\n\tstyleElement.parentNode.removeChild(styleElement);\r\n\tvar idx = styleElementsInsertedAtTop.indexOf(styleElement);\r\n\tif(idx >= 0) {\r\n\t\tstyleElementsInsertedAtTop.splice(idx, 1);\r\n\t}\r\n}\r\n\r\nfunction createStyleElement(options) {\r\n\tvar styleElement = document.createElement(\"style\");\r\n\tstyleElement.type = \"text/css\";\r\n\tinsertStyleElement(options, styleElement);\r\n\treturn styleElement;\r\n}\r\n\r\nfunction createLinkElement(options) {\r\n\tvar linkElement = document.createElement(\"link\");\r\n\tlinkElement.rel = \"stylesheet\";\r\n\tinsertStyleElement(options, linkElement);\r\n\treturn linkElement;\r\n}\r\n\r\nfunction addStyle(obj, options) {\r\n\tvar styleElement, update, remove;\r\n\r\n\tif (options.singleton) {\r\n\t\tvar styleIndex = singletonCounter++;\r\n\t\tstyleElement = singletonElement || (singletonElement = createStyleElement(options));\r\n\t\tupdate = applyToSingletonTag.bind(null, styleElement, styleIndex, false);\r\n\t\tremove = applyToSingletonTag.bind(null, styleElement, styleIndex, true);\r\n\t} else if(obj.sourceMap &&\r\n\t\ttypeof URL === \"function\" &&\r\n\t\ttypeof URL.createObjectURL === \"function\" &&\r\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\r\n\t\ttypeof Blob === \"function\" &&\r\n\t\ttypeof btoa === \"function\") {\r\n\t\tstyleElement = createLinkElement(options);\r\n\t\tupdate = updateLink.bind(null, styleElement);\r\n\t\tremove = function() {\r\n\t\t\tremoveStyleElement(styleElement);\r\n\t\t\tif(styleElement.href)\r\n\t\t\t\tURL.revokeObjectURL(styleElement.href);\r\n\t\t};\r\n\t} else {\r\n\t\tstyleElement = createStyleElement(options);\r\n\t\tupdate = applyToTag.bind(null, styleElement);\r\n\t\tremove = function() {\r\n\t\t\tremoveStyleElement(styleElement);\r\n\t\t};\r\n\t}\r\n\r\n\tupdate(obj);\r\n\r\n\treturn function updateStyle(newObj) {\r\n\t\tif(newObj) {\r\n\t\t\tif(newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap)\r\n\t\t\t\treturn;\r\n\t\t\tupdate(obj = newObj);\r\n\t\t} else {\r\n\t\t\tremove();\r\n\t\t}\r\n\t};\r\n}\r\n\r\nvar replaceText = (function () {\r\n\tvar textStore = [];\r\n\r\n\treturn function (index, replacement) {\r\n\t\ttextStore[index] = replacement;\r\n\t\treturn textStore.filter(Boolean).join('\\n');\r\n\t};\r\n})();\r\n\r\nfunction applyToSingletonTag(styleElement, index, remove, obj) {\r\n\tvar css = remove ? \"\" : obj.css;\r\n\r\n\tif (styleElement.styleSheet) {\r\n\t\tstyleElement.styleSheet.cssText = replaceText(index, css);\r\n\t} else {\r\n\t\tvar cssNode = document.createTextNode(css);\r\n\t\tvar childNodes = styleElement.childNodes;\r\n\t\tif (childNodes[index]) styleElement.removeChild(childNodes[index]);\r\n\t\tif (childNodes.length) {\r\n\t\t\tstyleElement.insertBefore(cssNode, childNodes[index]);\r\n\t\t} else {\r\n\t\t\tstyleElement.appendChild(cssNode);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction applyToTag(styleElement, obj) {\r\n\tvar css = obj.css;\r\n\tvar media = obj.media;\r\n\r\n\tif(media) {\r\n\t\tstyleElement.setAttribute(\"media\", media)\r\n\t}\r\n\r\n\tif(styleElement.styleSheet) {\r\n\t\tstyleElement.styleSheet.cssText = css;\r\n\t} else {\r\n\t\twhile(styleElement.firstChild) {\r\n\t\t\tstyleElement.removeChild(styleElement.firstChild);\r\n\t\t}\r\n\t\tstyleElement.appendChild(document.createTextNode(css));\r\n\t}\r\n}\r\n\r\nfunction updateLink(linkElement, obj) {\r\n\tvar css = obj.css;\r\n\tvar sourceMap = obj.sourceMap;\r\n\r\n\tif(sourceMap) {\r\n\t\t// http://stackoverflow.com/a/26603875\r\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\r\n\t}\r\n\r\n\tvar blob = new Blob([css], { type: \"text/css\" });\r\n\r\n\tvar oldSrc = linkElement.href;\r\n\r\n\tlinkElement.href = URL.createObjectURL(blob);\r\n\r\n\tif(oldSrc)\r\n\t\tURL.revokeObjectURL(oldSrc);\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/style-loader/addStyles.js\n// module id = 381\n// module chunks = 1","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport var FormErrorExamples = {\n    formControlName: \"\\n    <div [formGroup]=\\\"myGroup\\\">\\n      <input formControlName=\\\"firstName\\\">\\n    </div>\\n\\n    In your class:\\n\\n    this.myGroup = new FormGroup({\\n       firstName: new FormControl()\\n    });\",\n    formGroupName: \"\\n    <div [formGroup]=\\\"myGroup\\\">\\n       <div formGroupName=\\\"person\\\">\\n          <input formControlName=\\\"firstName\\\">\\n       </div>\\n    </div>\\n\\n    In your class:\\n\\n    this.myGroup = new FormGroup({\\n       person: new FormGroup({ firstName: new FormControl() })\\n    });\",\n    formArrayName: \"\\n    <div [formGroup]=\\\"myGroup\\\">\\n      <div formArrayName=\\\"cities\\\">\\n        <div *ngFor=\\\"let city of cityArray.controls; let i=index\\\">\\n          <input [formControlName]=\\\"i\\\">\\n        </div>\\n      </div>\\n    </div>\\n\\n    In your class:\\n\\n    this.cityArray = new FormArray([new FormControl('SF')]);\\n    this.myGroup = new FormGroup({\\n      cities: this.cityArray\\n    });\",\n    ngModelGroup: \"\\n    <form>\\n       <div ngModelGroup=\\\"person\\\">\\n          <input [(ngModel)]=\\\"person.name\\\" name=\\\"firstName\\\">\\n       </div>\\n    </form>\",\n    ngModelWithFormGroup: \"\\n    <div [formGroup]=\\\"myGroup\\\">\\n       <input formControlName=\\\"firstName\\\">\\n       <input [(ngModel)]=\\\"showMoreControls\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\n    </div>\\n  \"\n};\n//# sourceMappingURL=error_examples.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@angular/forms/src/directives/error_examples.js\n// module id = 454\n// module chunks = 1","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { FormErrorExamples as Examples } from './error_examples';\nexport var TemplateDrivenErrors = (function () {\n    function TemplateDrivenErrors() {\n    }\n    TemplateDrivenErrors.modelParentException = function () {\n        throw new Error(\"\\n      ngModel cannot be used to register form controls with a parent formGroup directive.  Try using\\n      formGroup's partner directive \\\"formControlName\\\" instead.  Example:\\n\\n      \" + Examples.formControlName + \"\\n\\n      Or, if you'd like to avoid registering this form control, indicate that it's standalone in ngModelOptions:\\n\\n      Example:\\n\\n      \" + Examples.ngModelWithFormGroup);\n    };\n    TemplateDrivenErrors.formGroupNameException = function () {\n        throw new Error(\"\\n      ngModel cannot be used to register form controls with a parent formGroupName or formArrayName directive.\\n\\n      Option 1: Use formControlName instead of ngModel (reactive strategy):\\n\\n      \" + Examples.formGroupName + \"\\n\\n      Option 2:  Update ngModel's parent be ngModelGroup (template-driven strategy):\\n\\n      \" + Examples.ngModelGroup);\n    };\n    TemplateDrivenErrors.missingNameException = function () {\n        throw new Error(\"If ngModel is used within a form tag, either the name attribute must be set or the form\\n      control must be defined as 'standalone' in ngModelOptions.\\n\\n      Example 1: <input [(ngModel)]=\\\"person.firstName\\\" name=\\\"first\\\">\\n      Example 2: <input [(ngModel)]=\\\"person.firstName\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\");\n    };\n    TemplateDrivenErrors.modelGroupParentException = function () {\n        throw new Error(\"\\n      ngModelGroup cannot be used with a parent formGroup directive.\\n\\n      Option 1: Use formGroupName instead of ngModelGroup (reactive strategy):\\n\\n      \" + Examples.formGroupName + \"\\n\\n      Option 2:  Use a regular form tag instead of the formGroup directive (template-driven strategy):\\n\\n      \" + Examples.ngModelGroup);\n    };\n    return TemplateDrivenErrors;\n}());\n//# sourceMappingURL=template_driven_errors.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@angular/forms/src/directives/template_driven_errors.js\n// module id = 455\n// module chunks = 1","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Injectable } from '@angular/core';\nimport { StringMapWrapper } from './facade/collection';\nimport { isArray, isPresent } from './facade/lang';\nimport { FormArray, FormControl, FormGroup } from './model';\n/**\n * Creates a form object from a user-specified configuration.\n *\n * ```typescript\n * @Component({\n *   selector: 'my-app',\n *   template: `\n *     <form [formGroup]=\"loginForm\">\n *       <p>Login <input formControlName=\"login\"></p>\n *       <div formGroupName=\"passwordRetry\">\n *         <p>Password <input type=\"password\" formControlName=\"password\"></p>\n *         <p>Confirm password <input type=\"password\" formControlName=\"passwordConfirmation\"></p>\n *       </div>\n *     </form>\n *     <h3>Form value:</h3>\n *     <pre>{{value}}</pre>\n *   `,\n *   directives: [REACTIVE_FORM_DIRECTIVES]\n * })\n * export class App {\n *   loginForm: FormGroup;\n *\n *   constructor(builder: FormBuilder) {\n *     this.loginForm = builder.group({\n *       login: [\"\", Validators.required],\n *       passwordRetry: builder.group({\n *         password: [\"\", Validators.required],\n *         passwordConfirmation: [\"\", Validators.required, asyncValidator]\n *       })\n *     });\n *   }\n *\n *   get value(): string {\n *     return JSON.stringify(this.loginForm.value, null, 2);\n *   }\n * }\n * ```\n *\n * @stable\n */\nexport var FormBuilder = (function () {\n    function FormBuilder() {\n    }\n    /**\n     * Construct a new {@link FormGroup} with the given map of configuration.\n     * Valid keys for the `extra` parameter map are `optionals` and `validator`.\n     *\n     * See the {@link FormGroup} constructor for more details.\n     */\n    FormBuilder.prototype.group = function (controlsConfig, extra) {\n        if (extra === void 0) { extra = null; }\n        var controls = this._reduceControls(controlsConfig);\n        var validator = isPresent(extra) ? StringMapWrapper.get(extra, 'validator') : null;\n        var asyncValidator = isPresent(extra) ? StringMapWrapper.get(extra, 'asyncValidator') : null;\n        return new FormGroup(controls, validator, asyncValidator);\n    };\n    /**\n     * Construct a new {@link FormControl} with the given `formState`,`validator`, and\n     * `asyncValidator`.\n     */\n    FormBuilder.prototype.control = function (formState, validator, asyncValidator) {\n        if (validator === void 0) { validator = null; }\n        if (asyncValidator === void 0) { asyncValidator = null; }\n        return new FormControl(formState, validator, asyncValidator);\n    };\n    /**\n     * Construct an array of {@link FormControl}s from the given `controlsConfig` array of\n     * configuration, with the given optional `validator` and `asyncValidator`.\n     */\n    FormBuilder.prototype.array = function (controlsConfig, validator, asyncValidator) {\n        var _this = this;\n        if (validator === void 0) { validator = null; }\n        if (asyncValidator === void 0) { asyncValidator = null; }\n        var controls = controlsConfig.map(function (c) { return _this._createControl(c); });\n        return new FormArray(controls, validator, asyncValidator);\n    };\n    /** @internal */\n    FormBuilder.prototype._reduceControls = function (controlsConfig) {\n        var _this = this;\n        var controls = {};\n        StringMapWrapper.forEach(controlsConfig, function (controlConfig, controlName) {\n            controls[controlName] = _this._createControl(controlConfig);\n        });\n        return controls;\n    };\n    /** @internal */\n    FormBuilder.prototype._createControl = function (controlConfig) {\n        if (controlConfig instanceof FormControl || controlConfig instanceof FormGroup ||\n            controlConfig instanceof FormArray) {\n            return controlConfig;\n        }\n        else if (isArray(controlConfig)) {\n            var value = controlConfig[0];\n            var validator = controlConfig.length > 1 ? controlConfig[1] : null;\n            var asyncValidator = controlConfig.length > 2 ? controlConfig[2] : null;\n            return this.control(value, validator, asyncValidator);\n        }\n        else {\n            return this.control(controlConfig);\n        }\n    };\n    FormBuilder.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    FormBuilder.ctorParameters = [];\n    return FormBuilder;\n}());\n//# sourceMappingURL=form_builder.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@angular/forms/src/form_builder.js\n// module id = 456\n// module chunks = 1","import d3 from '../d3';\n\nexport function gridLayout(dims, data, minWidth) {\n  let rows = 1;\n  let xScale: any = d3.scaleBand();\n  let yScale: any = d3.scaleBand();\n  let dataLength = data.length;\n  let width = dims.width;\n  let height = dims.height;\n\n  if (width > minWidth) {\n    while (width / dataLength < minWidth) {\n      rows += 1;\n      dataLength = Math.ceil(data.length / rows);\n    }\n  }\n\n  let columns = dataLength;\n\n  var xDomain = [];\n  var yDomain = [];\n  for (let i = 0; i < rows; i++) {\n    yDomain.push(i);\n  }\n  for (let i = 0; i < columns; i++) {\n    xDomain.push(i);\n  }\n  xScale.domain(xDomain);\n  yScale.domain(yDomain);\n\n  xScale.rangeRound([0, width], 0.1);\n  yScale.rangeRound([0, height], 0.1);\n\n  let res = [];\n  let total = getTotal(data);\n  let cardWidth = xScale.bandwidth();\n  let cardHeight = yScale.bandwidth();\n\n  for (let i = 0; i < data.length; i++) {\n    res[i] = {};\n    res[i].data = {\n      name: data[i].name,\n      value: data[i].value\n    };\n    res[i].x = xScale(i % columns);\n    res[i].y = yScale(Math.floor(i / columns));\n    res[i].width = cardWidth;\n    res[i].height = cardHeight;\n    res[i].data.percent = res[i].data.value / total;\n    res[i].data.total = total;\n  }\n\n  return res;\n}\n\nfunction getTotal(results) {\n  return results\n    .map(d => d.value)\n    .reduce((sum, val) => { return sum + val; } );\n}\n\n\n\n// WEBPACK FOOTER //\n// node_modules/tslint-loader!./src/common/grid-layout.helper.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { OpaqueToken } from '@angular/core';\n/**\n * Used to provide a {@link ControlValueAccessor} for form controls.\n *\n * See {@link DefaultValueAccessor} for how to implement one.\n * @stable\n */\nexport var NG_VALUE_ACCESSOR = new OpaqueToken('NgValueAccessor');\n//# sourceMappingURL=control_value_accessor.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@angular/forms/src/directives/control_value_accessor.js\n// module id = 47\n// module chunks = 1","import * as moment from \"moment\";\n\nexport function tickFormat(fieldType, groupByType): Function {\n  return function(label: string): string {\n    if (label === 'No Value' || label === 'Other') {\n      return label;\n    }\n    if (fieldType === 'date' && groupByType === 'groupBy') {\n      return moment(label).format(\"MM/DD/YYYY\");\n    }\n\n    return label.toString();\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// node_modules/tslint-loader!./src/common/tick-format.helper.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { getSymbolIterator, global, isArray, isBlank, isJsObject, isPresent } from './lang';\nexport var Map = global.Map;\nexport var Set = global.Set;\n// Safari and Internet Explorer do not support the iterable parameter to the\n// Map constructor.  We work around that by manually adding the items.\nvar createMapFromPairs = (function () {\n    try {\n        if (new Map([[1, 2]]).size === 1) {\n            return function createMapFromPairs(pairs) { return new Map(pairs); };\n        }\n    }\n    catch (e) {\n    }\n    return function createMapAndPopulateFromPairs(pairs) {\n        var map = new Map();\n        for (var i = 0; i < pairs.length; i++) {\n            var pair = pairs[i];\n            map.set(pair[0], pair[1]);\n        }\n        return map;\n    };\n})();\nvar createMapFromMap = (function () {\n    try {\n        if (new Map(new Map())) {\n            return function createMapFromMap(m) { return new Map(m); };\n        }\n    }\n    catch (e) {\n    }\n    return function createMapAndPopulateFromMap(m) {\n        var map = new Map();\n        m.forEach(function (v, k) { map.set(k, v); });\n        return map;\n    };\n})();\nvar _clearValues = (function () {\n    if ((new Map()).keys().next) {\n        return function _clearValues(m) {\n            var keyIterator = m.keys();\n            var k;\n            while (!((k = keyIterator.next()).done)) {\n                m.set(k.value, null);\n            }\n        };\n    }\n    else {\n        return function _clearValuesWithForeEach(m) {\n            m.forEach(function (v, k) { m.set(k, null); });\n        };\n    }\n})();\n// Safari doesn't implement MapIterator.next(), which is used is Traceur's polyfill of Array.from\n// TODO(mlaval): remove the work around once we have a working polyfill of Array.from\nvar _arrayFromMap = (function () {\n    try {\n        if ((new Map()).values().next) {\n            return function createArrayFromMap(m, getValues) {\n                return getValues ? Array.from(m.values()) : Array.from(m.keys());\n            };\n        }\n    }\n    catch (e) {\n    }\n    return function createArrayFromMapWithForeach(m, getValues) {\n        var res = ListWrapper.createFixedSize(m.size), i = 0;\n        m.forEach(function (v, k) {\n            res[i] = getValues ? v : k;\n            i++;\n        });\n        return res;\n    };\n})();\nexport var MapWrapper = (function () {\n    function MapWrapper() {\n    }\n    MapWrapper.clone = function (m) { return createMapFromMap(m); };\n    MapWrapper.createFromStringMap = function (stringMap) {\n        var result = new Map();\n        for (var prop in stringMap) {\n            result.set(prop, stringMap[prop]);\n        }\n        return result;\n    };\n    MapWrapper.toStringMap = function (m) {\n        var r = {};\n        m.forEach(function (v, k) { return r[k] = v; });\n        return r;\n    };\n    MapWrapper.createFromPairs = function (pairs) { return createMapFromPairs(pairs); };\n    MapWrapper.clearValues = function (m) { _clearValues(m); };\n    MapWrapper.iterable = function (m) { return m; };\n    MapWrapper.keys = function (m) { return _arrayFromMap(m, false); };\n    MapWrapper.values = function (m) { return _arrayFromMap(m, true); };\n    return MapWrapper;\n}());\n/**\n * Wraps Javascript Objects\n */\nexport var StringMapWrapper = (function () {\n    function StringMapWrapper() {\n    }\n    StringMapWrapper.create = function () {\n        // Note: We are not using Object.create(null) here due to\n        // performance!\n        // http://jsperf.com/ng2-object-create-null\n        return {};\n    };\n    StringMapWrapper.contains = function (map, key) {\n        return map.hasOwnProperty(key);\n    };\n    StringMapWrapper.get = function (map, key) {\n        return map.hasOwnProperty(key) ? map[key] : undefined;\n    };\n    StringMapWrapper.set = function (map, key, value) { map[key] = value; };\n    StringMapWrapper.keys = function (map) { return Object.keys(map); };\n    StringMapWrapper.values = function (map) {\n        return Object.keys(map).map(function (k) { return map[k]; });\n    };\n    StringMapWrapper.isEmpty = function (map) {\n        for (var prop in map) {\n            return false;\n        }\n        return true;\n    };\n    StringMapWrapper.delete = function (map, key) { delete map[key]; };\n    StringMapWrapper.forEach = function (map, callback) {\n        for (var _i = 0, _a = Object.keys(map); _i < _a.length; _i++) {\n            var k = _a[_i];\n            callback(map[k], k);\n        }\n    };\n    StringMapWrapper.merge = function (m1, m2) {\n        var m = {};\n        for (var _i = 0, _a = Object.keys(m1); _i < _a.length; _i++) {\n            var k = _a[_i];\n            m[k] = m1[k];\n        }\n        for (var _b = 0, _c = Object.keys(m2); _b < _c.length; _b++) {\n            var k = _c[_b];\n            m[k] = m2[k];\n        }\n        return m;\n    };\n    StringMapWrapper.equals = function (m1, m2) {\n        var k1 = Object.keys(m1);\n        var k2 = Object.keys(m2);\n        if (k1.length != k2.length) {\n            return false;\n        }\n        var key;\n        for (var i = 0; i < k1.length; i++) {\n            key = k1[i];\n            if (m1[key] !== m2[key]) {\n                return false;\n            }\n        }\n        return true;\n    };\n    return StringMapWrapper;\n}());\nexport var ListWrapper = (function () {\n    function ListWrapper() {\n    }\n    // JS has no way to express a statically fixed size list, but dart does so we\n    // keep both methods.\n    ListWrapper.createFixedSize = function (size) { return new Array(size); };\n    ListWrapper.createGrowableSize = function (size) { return new Array(size); };\n    ListWrapper.clone = function (array) { return array.slice(0); };\n    ListWrapper.forEachWithIndex = function (array, fn) {\n        for (var i = 0; i < array.length; i++) {\n            fn(array[i], i);\n        }\n    };\n    ListWrapper.first = function (array) {\n        if (!array)\n            return null;\n        return array[0];\n    };\n    ListWrapper.last = function (array) {\n        if (!array || array.length == 0)\n            return null;\n        return array[array.length - 1];\n    };\n    ListWrapper.indexOf = function (array, value, startIndex) {\n        if (startIndex === void 0) { startIndex = 0; }\n        return array.indexOf(value, startIndex);\n    };\n    ListWrapper.contains = function (list, el) { return list.indexOf(el) !== -1; };\n    ListWrapper.reversed = function (array) {\n        var a = ListWrapper.clone(array);\n        return a.reverse();\n    };\n    ListWrapper.concat = function (a, b) { return a.concat(b); };\n    ListWrapper.insert = function (list, index, value) { list.splice(index, 0, value); };\n    ListWrapper.removeAt = function (list, index) {\n        var res = list[index];\n        list.splice(index, 1);\n        return res;\n    };\n    ListWrapper.removeAll = function (list, items) {\n        for (var i = 0; i < items.length; ++i) {\n            var index = list.indexOf(items[i]);\n            list.splice(index, 1);\n        }\n    };\n    ListWrapper.remove = function (list, el) {\n        var index = list.indexOf(el);\n        if (index > -1) {\n            list.splice(index, 1);\n            return true;\n        }\n        return false;\n    };\n    ListWrapper.clear = function (list) { list.length = 0; };\n    ListWrapper.isEmpty = function (list) { return list.length == 0; };\n    ListWrapper.fill = function (list, value, start, end) {\n        if (start === void 0) { start = 0; }\n        if (end === void 0) { end = null; }\n        list.fill(value, start, end === null ? list.length : end);\n    };\n    ListWrapper.equals = function (a, b) {\n        if (a.length != b.length)\n            return false;\n        for (var i = 0; i < a.length; ++i) {\n            if (a[i] !== b[i])\n                return false;\n        }\n        return true;\n    };\n    ListWrapper.slice = function (l, from, to) {\n        if (from === void 0) { from = 0; }\n        if (to === void 0) { to = null; }\n        return l.slice(from, to === null ? undefined : to);\n    };\n    ListWrapper.splice = function (l, from, length) { return l.splice(from, length); };\n    ListWrapper.sort = function (l, compareFn) {\n        if (isPresent(compareFn)) {\n            l.sort(compareFn);\n        }\n        else {\n            l.sort();\n        }\n    };\n    ListWrapper.toString = function (l) { return l.toString(); };\n    ListWrapper.toJSON = function (l) { return JSON.stringify(l); };\n    ListWrapper.maximum = function (list, predicate) {\n        if (list.length == 0) {\n            return null;\n        }\n        var solution = null;\n        var maxValue = -Infinity;\n        for (var index = 0; index < list.length; index++) {\n            var candidate = list[index];\n            if (isBlank(candidate)) {\n                continue;\n            }\n            var candidateValue = predicate(candidate);\n            if (candidateValue > maxValue) {\n                solution = candidate;\n                maxValue = candidateValue;\n            }\n        }\n        return solution;\n    };\n    ListWrapper.flatten = function (list) {\n        var target = [];\n        _flattenArray(list, target);\n        return target;\n    };\n    ListWrapper.addAll = function (list, source) {\n        for (var i = 0; i < source.length; i++) {\n            list.push(source[i]);\n        }\n    };\n    return ListWrapper;\n}());\nfunction _flattenArray(source, target) {\n    if (isPresent(source)) {\n        for (var i = 0; i < source.length; i++) {\n            var item = source[i];\n            if (isArray(item)) {\n                _flattenArray(item, target);\n            }\n            else {\n                target.push(item);\n            }\n        }\n    }\n    return target;\n}\nexport function isListLikeIterable(obj) {\n    if (!isJsObject(obj))\n        return false;\n    return isArray(obj) ||\n        (!(obj instanceof Map) &&\n            getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n}\nexport function areIterablesEqual(a, b, comparator) {\n    var iterator1 = a[getSymbolIterator()]();\n    var iterator2 = b[getSymbolIterator()]();\n    while (true) {\n        var item1 = iterator1.next();\n        var item2 = iterator2.next();\n        if (item1.done && item2.done)\n            return true;\n        if (item1.done || item2.done)\n            return false;\n        if (!comparator(item1.value, item2.value))\n            return false;\n    }\n}\nexport function iterateListLike(obj, fn) {\n    if (isArray(obj)) {\n        for (var i = 0; i < obj.length; i++) {\n            fn(obj[i]);\n        }\n    }\n    else {\n        var iterator = obj[getSymbolIterator()]();\n        var item;\n        while (!((item = iterator.next()).done)) {\n            fn(item.value);\n        }\n    }\n}\n// Safari and Internet Explorer do not support the iterable parameter to the\n// Set constructor.  We work around that by manually adding the items.\nvar createSetFromList = (function () {\n    var test = new Set([1, 2, 3]);\n    if (test.size === 3) {\n        return function createSetFromList(lst) { return new Set(lst); };\n    }\n    else {\n        return function createSetAndPopulateFromList(lst) {\n            var res = new Set(lst);\n            if (res.size !== lst.length) {\n                for (var i = 0; i < lst.length; i++) {\n                    res.add(lst[i]);\n                }\n            }\n            return res;\n        };\n    }\n})();\nexport var SetWrapper = (function () {\n    function SetWrapper() {\n    }\n    SetWrapper.createFromList = function (lst) { return createSetFromList(lst); };\n    SetWrapper.has = function (s, key) { return s.has(key); };\n    SetWrapper.delete = function (m, k) { m.delete(k); };\n    return SetWrapper;\n}());\n//# sourceMappingURL=collection.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@angular/forms/src/facade/collection.js\n// module id = 48\n// module chunks = 1","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { OpaqueToken } from '@angular/core';\nimport { toPromise } from 'rxjs/operator/toPromise';\nimport { StringMapWrapper } from './facade/collection';\nimport { isBlank, isPresent, isPromise, isString } from './facade/lang';\n/**\n * Providers for validators to be used for {@link FormControl}s in a form.\n *\n * Provide this using `multi: true` to add validators.\n *\n * ### Example\n *\n * {@example core/forms/ts/ng_validators/ng_validators.ts region='ng_validators'}\n * @stable\n */\nexport var NG_VALIDATORS = new OpaqueToken('NgValidators');\n/**\n * Providers for asynchronous validators to be used for {@link FormControl}s\n * in a form.\n *\n * Provide this using `multi: true` to add validators.\n *\n * See {@link NG_VALIDATORS} for more details.\n *\n * @stable\n */\nexport var NG_ASYNC_VALIDATORS = new OpaqueToken('NgAsyncValidators');\n/**\n * Provides a set of validators used by form controls.\n *\n * A validator is a function that processes a {@link FormControl} or collection of\n * controls and returns a map of errors. A null map means that validation has passed.\n *\n * ### Example\n *\n * ```typescript\n * var loginControl = new FormControl(\"\", Validators.required)\n * ```\n *\n * @stable\n */\nexport var Validators = (function () {\n    function Validators() {\n    }\n    /**\n     * Validator that requires controls to have a non-empty value.\n     */\n    Validators.required = function (control) {\n        return isBlank(control.value) || (isString(control.value) && control.value == '') ?\n            { 'required': true } :\n            null;\n    };\n    /**\n     * Validator that requires controls to have a value of a minimum length.\n     */\n    Validators.minLength = function (minLength) {\n        return function (control) {\n            if (isPresent(Validators.required(control)))\n                return null;\n            var v = control.value;\n            return v.length < minLength ?\n                { 'minlength': { 'requiredLength': minLength, 'actualLength': v.length } } :\n                null;\n        };\n    };\n    /**\n     * Validator that requires controls to have a value of a maximum length.\n     */\n    Validators.maxLength = function (maxLength) {\n        return function (control) {\n            if (isPresent(Validators.required(control)))\n                return null;\n            var v = control.value;\n            return v.length > maxLength ?\n                { 'maxlength': { 'requiredLength': maxLength, 'actualLength': v.length } } :\n                null;\n        };\n    };\n    /**\n     * Validator that requires a control to match a regex to its value.\n     */\n    Validators.pattern = function (pattern) {\n        return function (control) {\n            if (isPresent(Validators.required(control)))\n                return null;\n            var regex = new RegExp(\"^\" + pattern + \"$\");\n            var v = control.value;\n            return regex.test(v) ? null :\n                { 'pattern': { 'requiredPattern': \"^\" + pattern + \"$\", 'actualValue': v } };\n        };\n    };\n    /**\n     * No-op validator.\n     */\n    Validators.nullValidator = function (c) { return null; };\n    /**\n     * Compose multiple validators into a single function that returns the union\n     * of the individual error maps.\n     */\n    Validators.compose = function (validators) {\n        if (isBlank(validators))\n            return null;\n        var presentValidators = validators.filter(isPresent);\n        if (presentValidators.length == 0)\n            return null;\n        return function (control) {\n            return _mergeErrors(_executeValidators(control, presentValidators));\n        };\n    };\n    Validators.composeAsync = function (validators) {\n        if (isBlank(validators))\n            return null;\n        var presentValidators = validators.filter(isPresent);\n        if (presentValidators.length == 0)\n            return null;\n        return function (control) {\n            var promises = _executeAsyncValidators(control, presentValidators).map(_convertToPromise);\n            return Promise.all(promises).then(_mergeErrors);\n        };\n    };\n    return Validators;\n}());\nfunction _convertToPromise(obj) {\n    return isPromise(obj) ? obj : toPromise.call(obj);\n}\nfunction _executeValidators(control, validators) {\n    return validators.map(function (v) { return v(control); });\n}\nfunction _executeAsyncValidators(control, validators) {\n    return validators.map(function (v) { return v(control); });\n}\nfunction _mergeErrors(arrayOfErrors) {\n    var res = arrayOfErrors.reduce(function (res, errors) {\n        return isPresent(errors) ? StringMapWrapper.merge(res, errors) : res;\n    }, {});\n    return StringMapWrapper.isEmpty(res) ? null : res;\n}\n//# sourceMappingURL=validators.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@angular/forms/src/validators.js\n// module id = 49\n// module chunks = 1","// Ensure we don't duplicate ids\n// during our session\nlet cache = {};\n\n/**\n * Unique Object ID Generation.\n * Example: `571785e57b215b3968f25c3c`\n */\nexport default function ObjectId() {\n  /* tslint:disable:no-bitwise */\n  const timestamp = (new Date().getTime() / 1000 | 0).toString(16);\n  const id = timestamp + 'xxxxxxxxxxxxxxxx'.replace(/[x]/g, function() {\n      return (Math.random() * 16 | 0).toString(16);\n    }).toLowerCase();\n  /* tslint:enable */\n\n  // ensure not already used\n  if (!cache[id]) {\n    cache[id] = true;\n    return id;\n  }\n\n  return ObjectId();\n};\n\n\n\n// WEBPACK FOOTER //\n// node_modules/tslint-loader!./src/utils/object-id.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Entry point for all public APIs of the forms package.\n */\nexport * from './src/forms';\n//# sourceMappingURL=index.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@angular/forms/index.js\n// module id = 556\n// module chunks = 1","import { Component, OnInit } from '@angular/core';\nimport { single, multi, countries } from './data';\nimport chartGroups from './chartTypes';\nimport '../src/a2d3.scss';\nimport './demo.scss';\n\n@Component({\n  selector: 'app',\n  template: `\n    <main>\n      <div class=\"chart-col\">\n        <div class=\"chart-view\">\n          <bar-vertical\n            *ngIf=\"chartType === 'bar-vertical'\"\n            [view]=\"view\"\n            [scheme]=\"colorScheme\"\n            [results]=\"single\"\n            [gradient]=\"gradient\"\n            [xAxis]=\"showXAxis\"\n            [yAxis]=\"showYAxis\"\n            [legend]=\"showLegend\"\n            [showXAxisLabel]=\"showXAxisLabel\"\n            [showYAxisLabel]=\"showYAxisLabel\"\n            [xAxisLabel]=\"xAxisLabel\"\n            [yAxisLabel]=\"yAxisLabel\">\n          </bar-vertical>\n\n          <bar-horizontal\n            *ngIf=\"chartType === 'bar-horizontal'\"\n            [view]=\"view\"\n            [scheme]=\"colorScheme\"\n            [results]=\"single\"\n            [gradient]=\"gradient\"\n            [xAxis]=\"showXAxis\"\n            [yAxis]=\"showYAxis\"\n            [legend]=\"showLegend\"\n            [showXAxisLabel]=\"showXAxisLabel\"\n            [showYAxisLabel]=\"showYAxisLabel\"\n            [xAxisLabel]=\"xAxisLabel\"\n            [yAxisLabel]=\"yAxisLabel\">\n          </bar-horizontal>\n\n          <bar-vertical-2d\n            *ngIf=\"chartType === 'bar-vertical-2d'\"\n            [view]=\"view\"\n            [scheme]=\"colorScheme\"\n            [results]=\"multi\"\n            [gradient]=\"gradient\"\n            [xAxis]=\"showXAxis\"\n            [yAxis]=\"showYAxis\"\n            [legend]=\"showLegend\"\n            [showXAxisLabel]=\"showXAxisLabel\"\n            [showYAxisLabel]=\"showYAxisLabel\"\n            [xAxisLabel]=\"xAxisLabel\"\n            [yAxisLabel]=\"yAxisLabel\">\n          </bar-vertical-2d>\n\n          <bar-horizontal-2d\n            *ngIf=\"chartType === 'bar-horizontal-2d'\"\n            [view]=\"view\"\n            [scheme]=\"colorScheme\"\n            [results]=\"multi\"\n            [gradient]=\"gradient\"\n            [xAxis]=\"showXAxis\"\n            [yAxis]=\"showYAxis\"\n            [legend]=\"showLegend\"\n            [showXAxisLabel]=\"showXAxisLabel\"\n            [showYAxisLabel]=\"showYAxisLabel\"\n            [xAxisLabel]=\"xAxisLabel\"\n            [yAxisLabel]=\"yAxisLabel\">\n          </bar-horizontal-2d>\n\n          <bar-vertical-stacked\n            *ngIf=\"chartType === 'bar-vertical-stacked'\"\n            [view]=\"view\"\n            [scheme]=\"colorScheme\"\n            [results]=\"multi\"\n            [gradient]=\"gradient\"\n            [xAxis]=\"showXAxis\"\n            [yAxis]=\"showYAxis\"\n            [legend]=\"showLegend\"\n            [showXAxisLabel]=\"showXAxisLabel\"\n            [showYAxisLabel]=\"showYAxisLabel\"\n            [xAxisLabel]=\"xAxisLabel\"\n            [yAxisLabel]=\"yAxisLabel\">\n          </bar-vertical-stacked>\n\n          <bar-horizontal-stacked\n            *ngIf=\"chartType === 'bar-horizontal-stacked'\"\n            [view]=\"view\"\n            [scheme]=\"colorScheme\"\n            [results]=\"multi\"\n            [gradient]=\"gradient\"\n            [xAxis]=\"showXAxis\"\n            [yAxis]=\"showYAxis\"\n            [legend]=\"showLegend\"\n            [showXAxisLabel]=\"showXAxisLabel\"\n            [showYAxisLabel]=\"showYAxisLabel\"\n            [xAxisLabel]=\"xAxisLabel\"\n            [yAxisLabel]=\"yAxisLabel\">\n          </bar-horizontal-stacked>\n\n          <bar-vertical-normalized\n            *ngIf=\"chartType === 'bar-vertical-normalized'\"\n            [view]=\"view\"\n            [scheme]=\"colorScheme\"\n            [results]=\"multi\"\n            [gradient]=\"gradient\"\n            [xAxis]=\"showXAxis\"\n            [yAxis]=\"showYAxis\"\n            [legend]=\"showLegend\"\n            [showXAxisLabel]=\"showXAxisLabel\"\n            [showYAxisLabel]=\"showYAxisLabel\"\n            [xAxisLabel]=\"xAxisLabel\"\n            [yAxisLabel]=\"yAxisLabel\">\n          </bar-vertical-normalized>\n\n          <bar-horizontal-normalized\n            *ngIf=\"chartType === 'bar-horizontal-normalized'\"\n            [view]=\"view\"\n            [scheme]=\"colorScheme\"\n            [results]=\"multi\"\n            [gradient]=\"gradient\"\n            [xAxis]=\"showXAxis\"\n            [yAxis]=\"showYAxis\"\n            [legend]=\"showLegend\"\n            [showXAxisLabel]=\"showXAxisLabel\"\n            [showYAxisLabel]=\"showYAxisLabel\"\n            [xAxisLabel]=\"xAxisLabel\"\n            [yAxisLabel]=\"yAxisLabel\">\n          </bar-horizontal-normalized>\n\n          <pie-chart\n            *ngIf=\"chartType === 'pie-chart'\"\n            [view]=\"view\"\n            [scheme]=\"colorScheme\"\n            [results]=\"single\"\n            [legend]=\"showLegend\"\n            [explodeSlices]=\"explodeSlices\"\n            [labels]=\"showLabels\"\n            [doughnut]=\"doughnut\"\n            [gradient]=\"gradient\">\n          </pie-chart>\n\n          <advanced-pie-chart\n            *ngIf=\"chartType === 'advanced-pie-chart'\"\n            [view]=\"view\"\n            [scheme]=\"colorScheme\"\n            [results]=\"single\"\n            [gradient]=\"gradient\">\n          </advanced-pie-chart>\n\n          <pie-grid\n            *ngIf=\"chartType === 'pie-grid'\"\n            [view]=\"view\"\n            [scheme]=\"colorScheme\"\n            [results]=\"single\">\n          </pie-grid>\n\n          <line-chart\n            *ngIf=\"chartType === 'line-chart'\"\n            [view]=\"view\"\n            [scheme]=\"colorScheme\"\n            [results]=\"multi\"\n            [legend]=\"showLegend\"\n            [gradient]=\"gradient\"\n            [xAxis]=\"showXAxis\"\n            [yAxis]=\"showYAxis\"\n            [showXAxisLabel]=\"showXAxisLabel\"\n            [showYAxisLabel]=\"showYAxisLabel\"\n            [xAxisLabel]=\"xAxisLabel\"\n            [yAxisLabel]=\"yAxisLabel\"\n            [autoScale]=\"autoScale\">\n          </line-chart>\n\n          <area-chart\n            *ngIf=\"chartType === 'area-chart'\"\n            [view]=\"view\"\n            [scheme]=\"colorScheme\"\n            [results]=\"multi\"\n            [legend]=\"showLegend\"\n            [gradient]=\"gradient\"\n            [xAxis]=\"showXAxis\"\n            [yAxis]=\"showYAxis\"\n            [showXAxisLabel]=\"showXAxisLabel\"\n            [showYAxisLabel]=\"showYAxisLabel\"\n            [xAxisLabel]=\"xAxisLabel\"\n            [yAxisLabel]=\"yAxisLabel\"\n            [autoScale]=\"autoScale\">\n          </area-chart>\n\n          <area-chart-stacked\n            *ngIf=\"chartType === 'area-chart-stacked'\"\n            [view]=\"view\"\n            [scheme]=\"colorScheme\"\n            [results]=\"multi\"\n            [legend]=\"showLegend\"\n            [gradient]=\"gradient\"\n            [xAxis]=\"showXAxis\"\n            [yAxis]=\"showYAxis\"\n            [showXAxisLabel]=\"showXAxisLabel\"\n            [showYAxisLabel]=\"showYAxisLabel\"\n            [xAxisLabel]=\"xAxisLabel\"\n            [yAxisLabel]=\"yAxisLabel\">\n          </area-chart-stacked>\n\n          <area-chart-normalized\n            *ngIf=\"chartType === 'area-chart-normalized'\"\n            [view]=\"view\"\n            [scheme]=\"colorScheme\"\n            [results]=\"multi\"\n            [legend]=\"showLegend\"\n            [gradient]=\"gradient\"\n            [xAxis]=\"showXAxis\"\n            [yAxis]=\"showYAxis\"\n            [showXAxisLabel]=\"showXAxisLabel\"\n            [showYAxisLabel]=\"showYAxisLabel\"\n            [xAxisLabel]=\"xAxisLabel\"\n            [yAxisLabel]=\"yAxisLabel\">\n          </area-chart-normalized>\n\n          <heat-map\n            *ngIf=\"chartType === 'heat-map'\"\n            [view]=\"view\"\n            [scheme]=\"colorScheme\"\n            [results]=\"multi\"\n            [legend]=\"showLegend\"\n            [gradient]=\"gradient\"\n            [xAxis]=\"showXAxis\"\n            [yAxis]=\"showYAxis\"\n            [showXAxisLabel]=\"showXAxisLabel\"\n            [showYAxisLabel]=\"showYAxisLabel\"\n            [xAxisLabel]=\"xAxisLabel\"\n            [yAxisLabel]=\"yAxisLabel\">\n          </heat-map>\n\n          <number-card\n            *ngIf=\"chartType === 'number-card'\"\n            [view]=\"view\"\n            [scheme]=\"colorScheme\"\n            [results]=\"single\">\n          </number-card>\n        </div>\n      </div>\n\n      <div class=\"sidebar\">\n        <h1>\n          ng2<strong>d3</strong>\n          <small>Angular2 D3 Chart Framework</small>\n        </h1>\n\n        <h3>Chart Type</h3>\n        <select\n          [ngModel]=\"chartType\"\n          (ngModelChange)=\"selectChart($event)\">\n          <template ngFor let-group [ngForOf]=\"chartGroups\">\n            <optgroup [label]=\"group.name\">\n              <option *ngFor=\"let chart of group.charts\" [value]=\"chart.selector\">{{chart.name}}</option>\n            </optgroup>\n          </template>\n        </select>\n\n        <h3>Data</h3>\n        <select>\n          <option>Country</option>\n        </select>\n\n        <pre *ngIf=\"chart.inputFormat === 'singleSeries'\">{{single | json}}</pre>\n        <pre *ngIf=\"chart.inputFormat === 'multiSeries'\">{{multi | json}}</pre>\n\n        <div>\n          <label>\n            <input type=\"checkbox\" [checked]=\"realTimeData\" (change)=\"realTimeData = $event.target.checked\">\n            Real-time\n          </label>\n        </div>\n\n        <h3>Options</h3>\n\n        <div *ngIf=\"chart.options.includes('showXAxis')\">\n          <label>\n            <input type=\"checkbox\" [checked]=\"showXAxis\" (change)=\"showXAxis = $event.target.checked\">\n            Show X Axis\n          </label> <br />\n        </div>\n\n        <div *ngIf=\"chart.options.includes('showYAxis')\">\n          <label>\n            <input type=\"checkbox\" [checked]=\"showYAxis\" (change)=\"showYAxis = $event.target.checked\">\n            Show Y Axis\n          </label> <br />\n        </div>\n\n        <div *ngIf=\"chart.options.includes('gradient')\">\n          <label>\n            <input type=\"checkbox\" [checked]=\"gradient\" (change)=\"gradient = $event.target.checked\">\n            Use gradients\n          </label> <br />\n        </div>\n\n        <div *ngIf=\"chart.options.includes('showLegend')\">\n          <label>\n            <input type=\"checkbox\" [checked]=\"showLegend\" (change)=\"showLegend = $event.target.checked\">\n            Show Legend\n          </label> <br />\n        </div>\n\n        <div *ngIf=\"chart.options.includes('showXAxisLabel')\">\n          <label>\n            <input type=\"checkbox\" [checked]=\"showXAxisLabel\" (change)=\"showXAxisLabel = $event.target.checked\">\n            Show X Axis Label\n          </label> <br />\n        </div>\n\n        <div *ngIf=\"chart.options.includes('xAxisLabel')\">\n          <label>X Axis Label:</label><br />\n          <input type=\"text\" [(ngModel)]=\"xAxisLabel\"><br />\n        </div>\n\n        <div *ngIf=\"chart.options.includes('showYAxisLabel')\">\n          <label>\n            <input type=\"checkbox\" [checked]=\"showYAxisLabel\" (change)=\"showYAxisLabel = $event.target.checked\">\n            Show Y Axis Label\n          </label> <br />\n        </div>\n\n        <div *ngIf=\"chart.options.includes('yAxisLabel')\">\n          <label>Y Axis Label:</label><br />\n          <input type=\"text\" [(ngModel)]=\"yAxisLabel\"><br />\n        </div>\n\n        <div *ngIf=\"chart.options.includes('showLabels')\">\n          <label>\n            <input type=\"checkbox\" [checked]=\"showLabels\" (change)=\"showLabels = $event.target.checked\">\n            Show Labels\n          </label> <br />\n        </div>\n\n        <div *ngIf=\"chart.options.includes('explodeSlices')\">\n          <label>\n            <input type=\"checkbox\" [checked]=\"explodeSlices\" (change)=\"explodeSlices = $event.target.checked\">\n            Explode Slices\n          </label> <br />\n        </div>\n\n        <div *ngIf=\"chart.options.includes('doughnut')\">\n          <label>\n            <input type=\"checkbox\" [checked]=\"doughnut\" (change)=\"doughnut = $event.target.checked\">\n            Doughnut\n          </label> <br />\n        </div>\n\n        <div *ngIf=\"chart.options.includes('autoScale')\">\n          <label>\n            <input type=\"checkbox\" [checked]=\"autoScale\" (change)=\"autoScale = $event.target.checked\">\n            Auto Scale\n          </label> <br />\n        </div>\n      </div>\n    </main>\n  `\n})\nexport class App implements OnInit {\n  chartType = 'bar-vertical';\n  chartGroups: any[];\n  chart: any;\n  realTimeData: boolean = false;\n  countries: any[];\n  single: any[];\n  multi: any[];\n\n  view: any[] = [900, 200];\n\n  // options\n  showXAxis = true;\n  showYAxis = true;\n  gradient = false;\n  showLegend = true;\n  showXAxisLabel = true;\n  xAxisLabel = 'Country';\n  showYAxisLabel = true;\n  yAxisLabel = 'Population';\n\n  colorScheme = {\n    domain: ['#5AA454', '#A10A28', '#C7B42C', '#AAAAAA']\n  };\n\n  // pie\n  showLabels = true;\n  explodeSlices = false;\n  doughnut = false;\n\n  // line, area\n  autoScale = true;\n\n  constructor() {\n    Object.assign(this, {single, multi, countries, chartGroups});\n  }\n\n  ngOnInit() {\n    this.selectChart(this.chartType);\n\n    setInterval(this.updateData.bind(this), 2000);\n  }\n\n  updateData() {\n    if (!this.realTimeData) {\n      return;\n    }\n\n    let country = this.countries[Math.floor(Math.random() * this.countries.length)];\n    let add = Math.random() < 0.7;\n    let remove = Math.random() < 0.5;\n\n    if (remove) {\n      if (this.single.length > 1) {\n        let index = Math.floor(Math.random() * this.single.length);\n        this.single.splice(index, 1);\n        this.single = [ ...this.single ];\n      }\n\n      if (this.multi.length > 1) {\n        let index = Math.floor(Math.random() * this.multi.length);\n        this.multi.splice(index, 1);\n        this.multi = [ ...this.multi ];\n      }\n    }\n\n    if (add) {\n      // single\n      let entry = {\n        name: country,\n        value: Math.floor(1000000 + Math.random() * 20000000)\n      };\n      this.single = [ ...this.single, entry ];\n\n      // multi\n      let multiEntry = {\n        name: country,\n        series: [{\n          name: \"2010\",\n          value: Math.floor(1000000 + Math.random() * 20000000)\n        }, {\n          name: \"2011\",\n          value: Math.floor(1000000 + Math.random() * 20000000)\n        }]\n      };\n\n      this.multi = [ ...this.multi, multiEntry ];\n    }\n  }\n\n  selectChart(chartSelector) {\n    this.chartType = chartSelector;\n    for (let group of this.chartGroups) {\n      for (let chart of group.charts) {\n        if (chart.selector === chartSelector) {\n          this.chart = chart;\n          return;\n        }\n      }\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// node_modules/tslint-loader!./demo/app.ts","import {NgModule} from \"@angular/core\";\nimport {CommonModule} from \"./common/common.module\";\nimport {AreaChartModule} from \"./area-chart/area-chart.module\";\nimport {BarChartModule} from \"./bar-chart/bar-chart.module\";\nimport {HeatMapModule} from \"./heat-map/heat-map.module\";\nimport {LineChartModule} from \"./line-chart/line-chart.module\";\nimport {NumberCardModule} from \"./number-card/number-card.module\";\nimport {PieChartModule} from \"./pie-chart/pie-chart.module\";\nimport {TreeMapModule} from \"./tree-map/tree-map.module\";\n\n@NgModule({\n  exports: [\n    CommonModule,\n    AreaChartModule,\n    BarChartModule,\n    HeatMapModule,\n    LineChartModule,\n    NumberCardModule,\n    PieChartModule,\n    TreeMapModule\n  ]\n})\nexport class A2D3Module {}\n\n\n\n// WEBPACK FOOTER //\n// node_modules/tslint-loader!./src/A2D3Module.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { AbstractControlDirective } from './abstract_control_directive';\n/**\n * A directive that contains multiple {@link NgControl}s.\n *\n * Only used by the forms module.\n *\n * @stable\n */\nexport var ControlContainer = (function (_super) {\n    __extends(ControlContainer, _super);\n    function ControlContainer() {\n        _super.apply(this, arguments);\n    }\n    Object.defineProperty(ControlContainer.prototype, \"formDirective\", {\n        /**\n         * Get the form to which this container belongs.\n         */\n        get: function () { return null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ControlContainer.prototype, \"path\", {\n        /**\n         * Get the path to this container.\n         */\n        get: function () { return null; },\n        enumerable: true,\n        configurable: true\n    });\n    return ControlContainer;\n}(AbstractControlDirective));\n//# sourceMappingURL=control_container.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@angular/forms/src/directives/control_container.js\n// module id = 61\n// module chunks = 1","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { NgModule } from '@angular/core';\nimport { CheckboxControlValueAccessor } from './directives/checkbox_value_accessor';\nimport { DefaultValueAccessor } from './directives/default_value_accessor';\nimport { NgControlStatus, NgControlStatusGroup } from './directives/ng_control_status';\nimport { NgForm } from './directives/ng_form';\nimport { NgModel } from './directives/ng_model';\nimport { NgModelGroup } from './directives/ng_model_group';\nimport { NumberValueAccessor } from './directives/number_value_accessor';\nimport { RadioControlValueAccessor } from './directives/radio_control_value_accessor';\nimport { FormControlDirective } from './directives/reactive_directives/form_control_directive';\nimport { FormControlName } from './directives/reactive_directives/form_control_name';\nimport { FormGroupDirective } from './directives/reactive_directives/form_group_directive';\nimport { FormArrayName, FormGroupName } from './directives/reactive_directives/form_group_name';\nimport { NgSelectOption, SelectControlValueAccessor } from './directives/select_control_value_accessor';\nimport { NgSelectMultipleOption, SelectMultipleControlValueAccessor } from './directives/select_multiple_control_value_accessor';\nimport { MaxLengthValidator, MinLengthValidator, PatternValidator, RequiredValidator } from './directives/validators';\nexport { CheckboxControlValueAccessor } from './directives/checkbox_value_accessor';\nexport { DefaultValueAccessor } from './directives/default_value_accessor';\nexport { NgControl } from './directives/ng_control';\nexport { NgControlStatus, NgControlStatusGroup } from './directives/ng_control_status';\nexport { NgForm } from './directives/ng_form';\nexport { NgModel } from './directives/ng_model';\nexport { NgModelGroup } from './directives/ng_model_group';\nexport { NumberValueAccessor } from './directives/number_value_accessor';\nexport { RadioControlValueAccessor } from './directives/radio_control_value_accessor';\nexport { FormControlDirective } from './directives/reactive_directives/form_control_directive';\nexport { FormControlName } from './directives/reactive_directives/form_control_name';\nexport { FormGroupDirective } from './directives/reactive_directives/form_group_directive';\nexport { FormArrayName, FormGroupName } from './directives/reactive_directives/form_group_name';\nexport { NgSelectOption, SelectControlValueAccessor } from './directives/select_control_value_accessor';\nexport { NgSelectMultipleOption, SelectMultipleControlValueAccessor } from './directives/select_multiple_control_value_accessor';\nexport { MaxLengthValidator, MinLengthValidator, PatternValidator, RequiredValidator } from './directives/validators';\nexport var SHARED_FORM_DIRECTIVES = [\n    NgSelectOption, NgSelectMultipleOption, DefaultValueAccessor, NumberValueAccessor,\n    CheckboxControlValueAccessor, SelectControlValueAccessor, SelectMultipleControlValueAccessor,\n    RadioControlValueAccessor, NgControlStatus, NgControlStatusGroup, RequiredValidator,\n    MinLengthValidator, MaxLengthValidator, PatternValidator\n];\nexport var TEMPLATE_DRIVEN_DIRECTIVES = [NgModel, NgModelGroup, NgForm];\nexport var REACTIVE_DRIVEN_DIRECTIVES = [FormControlDirective, FormGroupDirective, FormControlName, FormGroupName, FormArrayName];\n/**\n *\n * A list of all the form directives used as part of a `@Component` annotation.\n *\n *  This is a shorthand for importing them each individually.\n *\n * ### Example\n *\n * ```typescript\n * @Component({\n *   selector: 'my-app',\n *   directives: [FORM_DIRECTIVES]\n * })\n * class MyApp {}\n * ```\n * @stable\n */\nexport var FORM_DIRECTIVES = [TEMPLATE_DRIVEN_DIRECTIVES, SHARED_FORM_DIRECTIVES];\n/**\n * @stable\n */\nexport var REACTIVE_FORM_DIRECTIVES = [REACTIVE_DRIVEN_DIRECTIVES, SHARED_FORM_DIRECTIVES];\n/**\n * Internal module used for sharing directives between FormsModule and ReactiveFormsModule\n */\nexport var InternalFormsSharedModule = (function () {\n    function InternalFormsSharedModule() {\n    }\n    InternalFormsSharedModule.decorators = [\n        { type: NgModule, args: [{ declarations: SHARED_FORM_DIRECTIVES, exports: SHARED_FORM_DIRECTIVES },] },\n    ];\n    /** @nocollapse */\n    InternalFormsSharedModule.ctorParameters = [];\n    return InternalFormsSharedModule;\n}());\n//# sourceMappingURL=directives.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@angular/forms/src/directives.js\n// module id = 624\n// module chunks = 1","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport function normalizeValidator(validator) {\n    if (validator.validate !== undefined) {\n        return function (c) { return validator.validate(c); };\n    }\n    else {\n        return validator;\n    }\n}\nexport function normalizeAsyncValidator(validator) {\n    if (validator.validate !== undefined) {\n        return function (c) { return validator.validate(c); };\n    }\n    else {\n        return validator;\n    }\n}\n//# sourceMappingURL=normalize_validator.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@angular/forms/src/directives/normalize_validator.js\n// module id = 625\n// module chunks = 1","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { NgModule } from '@angular/core';\nimport { InternalFormsSharedModule, REACTIVE_DRIVEN_DIRECTIVES, TEMPLATE_DRIVEN_DIRECTIVES } from './directives';\nimport { RadioControlRegistry } from './directives/radio_control_value_accessor';\nimport { FormBuilder } from './form_builder';\n/**\n * The ng module for forms.\n * @stable\n */\nexport var FormsModule = (function () {\n    function FormsModule() {\n    }\n    FormsModule.decorators = [\n        { type: NgModule, args: [{\n                    declarations: TEMPLATE_DRIVEN_DIRECTIVES,\n                    providers: [RadioControlRegistry],\n                    exports: [InternalFormsSharedModule, TEMPLATE_DRIVEN_DIRECTIVES]\n                },] },\n    ];\n    /** @nocollapse */\n    FormsModule.ctorParameters = [];\n    return FormsModule;\n}());\n/**\n * The ng module for reactive forms.\n * @stable\n */\nexport var ReactiveFormsModule = (function () {\n    function ReactiveFormsModule() {\n    }\n    ReactiveFormsModule.decorators = [\n        { type: NgModule, args: [{\n                    declarations: [REACTIVE_DRIVEN_DIRECTIVES],\n                    providers: [FormBuilder, RadioControlRegistry],\n                    exports: [InternalFormsSharedModule, REACTIVE_DRIVEN_DIRECTIVES]\n                },] },\n    ];\n    /** @nocollapse */\n    ReactiveFormsModule.ctorParameters = [];\n    return ReactiveFormsModule;\n}());\n//# sourceMappingURL=form_providers.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@angular/forms/src/form_providers.js\n// module id = 626\n// module chunks = 1","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * This module is used for handling user input, by defining and building a {@link FormGroup} that\n * consists of\n * {@link FormControl} objects, and mapping them onto the DOM. {@link FormControl} objects can then\n * be used\n * to read information\n * from the form DOM elements.\n *\n * Forms providers are not included in default providers; you must import these providers\n * explicitly.\n */\nexport { AbstractControlDirective } from './directives/abstract_control_directive';\nexport { AbstractFormGroupDirective } from './directives/abstract_form_group_directive';\nexport { CheckboxControlValueAccessor } from './directives/checkbox_value_accessor';\nexport { ControlContainer } from './directives/control_container';\nexport { NG_VALUE_ACCESSOR } from './directives/control_value_accessor';\nexport { DefaultValueAccessor } from './directives/default_value_accessor';\nexport { NgControl } from './directives/ng_control';\nexport { NgControlStatus, NgControlStatusGroup } from './directives/ng_control_status';\nexport { NgForm } from './directives/ng_form';\nexport { NgModel } from './directives/ng_model';\nexport { NgModelGroup } from './directives/ng_model_group';\nexport { FormControlDirective } from './directives/reactive_directives/form_control_directive';\nexport { FormControlName } from './directives/reactive_directives/form_control_name';\nexport { FormGroupDirective } from './directives/reactive_directives/form_group_directive';\nexport { FormArrayName } from './directives/reactive_directives/form_group_name';\nexport { FormGroupName } from './directives/reactive_directives/form_group_name';\nexport { NgSelectOption, SelectControlValueAccessor } from './directives/select_control_value_accessor';\nexport { SelectMultipleControlValueAccessor } from './directives/select_multiple_control_value_accessor';\nexport { MaxLengthValidator, MinLengthValidator, PatternValidator, RequiredValidator } from './directives/validators';\nexport { FormBuilder } from './form_builder';\nexport { AbstractControl, FormArray, FormControl, FormGroup } from './model';\nexport { NG_ASYNC_VALIDATORS, NG_VALIDATORS, Validators } from './validators';\nexport * from './form_providers';\n//# sourceMappingURL=forms.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@angular/forms/src/forms.js\n// module id = 627\n// module chunks = 1","let chartGroups = [\n  {\n    name: \"Bar Charts\",\n    charts: [\n      {\n        name: \"Vertical Bar Chart\",\n        selector: 'bar-vertical',\n        inputFormat: 'singleSeries',\n        options: ['colorScheme', 'showXAxis', 'showYAxis', 'gradient', 'showLegend', 'showXAxisLabel', 'xAxisLabel', 'showYAxisLabel', 'yAxisLabel']\n      },\n      {\n        name: \"Horizontal Bar Chart\",\n        selector: 'bar-horizontal',\n        inputFormat: 'singleSeries',\n        options: ['colorScheme', 'showXAxis', 'showYAxis', 'gradient', 'showLegend', 'showXAxisLabel', 'xAxisLabel', 'showYAxisLabel', 'yAxisLabel']\n      },\n      {\n        name: \"Grouped Vertical Bar Chart\",\n        selector: 'bar-vertical-2d',\n        inputFormat: 'multiSeries',\n        options: ['colorScheme', 'showXAxis', 'showYAxis', 'gradient', 'showLegend', 'showXAxisLabel', 'xAxisLabel', 'showYAxisLabel', 'yAxisLabel']\n      },\n      {\n        name: \"Grouped Horizontal Bar Chart\",\n        selector: 'bar-horizontal-2d',\n        inputFormat: 'multiSeries',\n        options: ['colorScheme', 'showXAxis', 'showYAxis', 'gradient', 'showLegend', 'showXAxisLabel', 'xAxisLabel', 'showYAxisLabel', 'yAxisLabel']\n      },\n      {\n        name: \"Stacked Vertical Bar Chart\",\n        selector: 'bar-vertical-stacked',\n        inputFormat: 'multiSeries',\n        options: ['colorScheme', 'showXAxis', 'showYAxis', 'gradient', 'showLegend', 'showXAxisLabel', 'xAxisLabel', 'showYAxisLabel', 'yAxisLabel']\n      },\n      {\n        name: \"Stacked Horizontal Bar Chart\",\n        selector: 'bar-horizontal-stacked',\n        inputFormat: 'multiSeries',\n        options: ['colorScheme', 'showXAxis', 'showYAxis', 'gradient', 'showLegend', 'showXAxisLabel', 'xAxisLabel', 'showYAxisLabel', 'yAxisLabel']\n      },\n      {\n        name: \"Normalized Vertical Bar Chart\",\n        selector: 'bar-vertical-normalized',\n        inputFormat: 'multiSeries',\n        options: ['colorScheme', 'showXAxis', 'showYAxis', 'gradient', 'showLegend', 'showXAxisLabel', 'xAxisLabel', 'showYAxisLabel', 'yAxisLabel']\n      },\n      {\n        name: \"Normalized Horizontal Bar Chart\",\n        selector: 'bar-horizontal-normalized',\n        inputFormat: 'multiSeries',\n        options: ['colorScheme', 'showXAxis', 'showYAxis', 'gradient', 'showLegend', 'showXAxisLabel', 'xAxisLabel', 'showYAxisLabel', 'yAxisLabel']\n      }\n    ]\n  },\n  {\n    name: \"Pie Charts\",\n    charts: [\n      {\n        name: \"Pie Chart\",\n        selector: 'pie-chart',\n        inputFormat: 'singleSeries',\n        options: ['colorScheme', 'gradient', 'showLegend', 'doughnut', 'explodeSlices', 'showLabels']\n      },\n      {\n        name: \"Advanced Pie Chart\",\n        selector: 'advanced-pie-chart',\n        inputFormat: 'singleSeries',\n        options: ['colorScheme', 'gradient', 'showLegend', 'doughnut', 'showLabels']\n      },\n      {\n        name: \"Pie Grid\",\n        selector: 'pie-grid',\n        inputFormat: 'singleSeries',\n        options: ['colorScheme']\n      }\n    ]\n  },\n  {\n    name: \"Line/Area Charts\",\n    charts: [\n      {\n        name: \"Line Chart\",\n        selector: 'line-chart',\n        inputFormat: 'multiSeries',\n        options: ['colorScheme', 'showXAxis', 'showYAxis', 'gradient', 'showLegend', 'showXAxisLabel', 'xAxisLabel', 'showYAxisLabel', 'yAxisLabel', 'autoScale', 'timeline']\n      },\n      {\n        name: \"Area Chart\",\n        selector: 'area-chart',\n        inputFormat: 'multiSeries',\n        options: ['colorScheme', 'showXAxis', 'showYAxis', 'gradient', 'showLegend', 'showXAxisLabel', 'xAxisLabel', 'showYAxisLabel', 'yAxisLabel', 'autoScale', 'timeline']\n      },\n      {\n        name: \"Stacked Area Chart\",\n        selector: 'area-chart-stacked',\n        inputFormat: 'multiSeries',\n        options: ['colorScheme', 'showXAxis', 'showYAxis', 'gradient', 'showLegend', 'showXAxisLabel', 'xAxisLabel', 'showYAxisLabel', 'yAxisLabel', 'autoScale', 'timeline']\n      },\n      {\n        name: \"Normalized Area Chart\",\n        selector: 'area-chart-normalized',\n        inputFormat: 'multiSeries',\n        options: ['colorScheme', 'showXAxis', 'showYAxis', 'gradient', 'showLegend', 'showXAxisLabel', 'xAxisLabel', 'showYAxisLabel', 'yAxisLabel', 'autoScale', 'timeline']\n      },\n    ]\n  },\n  {\n    name: \"Other Charts\",\n    charts: [\n      {\n        name: \"Heat Map\",\n        selector: 'heat-map',\n        inputFormat: 'multiSeries',\n        options: ['colorScheme', 'showXAxis', 'showYAxis', 'gradient', 'showLegend', 'showXAxisLabel', 'xAxisLabel', 'showYAxisLabel', 'yAxisLabel']\n      },\n      {\n        name: \"Number Cards\",\n        selector: 'number-card',\n        inputFormat: 'singleSeries',\n        options: ['colorScheme']\n      }\n    ]\n  }\n];\n\nexport default chartGroups;\n\n\n\n// WEBPACK FOOTER //\n// node_modules/tslint-loader!./demo/chartTypes.ts","export var single = [\n  {\n    \"name\": \"Germany\",\n    \"value\": 8940000\n  },\n  {\n    \"name\": \"USA\",\n    \"value\": 5000000\n  },\n  {\n    \"name\": \"France\",\n    \"value\": 7200000\n  }\n];\n\nexport var multi = [\n  {\n    \"name\": \"Germany\",\n    \"series\": [\n      {\n        \"name\": \"2010\",\n        \"value\": 7300000\n      },\n      {\n        \"name\": \"2011\",\n        \"value\": 8940000\n      }\n    ]\n  },\n\n  {\n    \"name\": \"USA\",\n    \"series\": [\n      {\n        \"name\": \"2010\",\n        \"value\": 7870000\n      },\n      {\n        \"name\": \"2011\",\n        \"value\": 8270000\n      }\n    ]\n  },\n\n  {\n    \"name\": \"France\",\n    \"series\": [\n      {\n        \"name\": \"2010\",\n        \"value\": 5000002\n      },\n      {\n        \"name\": \"2011\",\n        \"value\": 5800000\n      }\n    ]\n  }\n];\n\nexport var countries = [\n  \"Abkhazia\", \"Afghanistan\", \"Akrotiri and Dhekelia\", \"Aland\", \"Albania\", \"Algeria\", \"American Samoa\", \"Andorra\", \"Angola\", \"Anguilla\", \"Antigua and Barbuda\", \"Argentina\", \"Armenia\", \"Aruba\", \"Ascension Island\", \"Australia\", \"Austria\", \"Azerbaijan\", \"Bahamas, The\", \"Bahrain\", \"Bangladesh\", \"Barbados\", \"Belarus\", \"Belgium\", \"Belize\", \"Benin\", \"Bermuda\", \"Bhutan\", \"Bolivia\", \"Bosnia and Herzegovina\", \"Botswana\", \"Brazil\", \"Brunei\", \"Bulgaria\", \"Burkina Faso\", \"Burundi\", \"Cambodia\", \"Cameroon\", \"Canada\", \"Cape Verde\", \"Cayman Islands\", \"Central Africa Republic\", \"Chad\", \"Chile\", \"China\", \"Christmas Island\", \"Cocos (Keeling) Islands\", \"Colombia\", \"Comoros\", \"Congo\", \"Cook Islands\", \"Costa Rica\", \"Cote d'lvoire\", \"Croatia\", \"Cuba\", \"Cyprus\", \"Czech Republic\", \"Denmark\", \"Djibouti\", \"Dominica\", \"Dominican Republic\", \"East Timor Ecuador\", \"Egypt\", \"El Salvador\", \"Equatorial Guinea\", \"Eritrea\", \"Estonia\", \"Ethiopia\", \"Falkland Islands\", \"Faroe Islands\", \"Fiji\", \"Finland\", \"France\", \"French Polynesia\", \"Gabon\", \"Cambia, The\", \"Georgia\", \"Germany\", \"Ghana\", \"Gibraltar\", \"Greece\", \"Greenland\", \"Grenada\", \"Guam\", \"Guatemala\", \"Guemsey\", \"Guinea\", \"Guinea-Bissau\", \"Guyana\", \"Haiti\", \"Honduras\", \"Hong Kong\", \"Hungary\", \"Iceland\", \"India\", \"Indonesia\", \"Iran\", \"Iraq\", \"Ireland\", \"Isle of Man\", \"Israel\", \"Italy\", \"Jamaica\", \"Japan\", \"Jersey\", \"Jordan\", \"Kazakhstan\", \"Kenya\", \"Kiribati\", \"Korea, N\", \"Korea, S\", \"Kosovo\", \"Kuwait\", \"Kyrgyzstan\", \"Laos\", \"Latvia\", \"Lebanon\", \"Lesotho\", \"Liberia\", \"Libya\", \"Liechtenstein\", \"Lithuania\", \"Luxembourg\", \"Macao\", \"Macedonia\", \"Madagascar\", \"Malawi\", \"Malaysia\", \"Maldives\", \"Mali\", \"Malta\", \"Marshall Islands\", \"Mauritania\", \"Mauritius\", \"Mayotte\", \"Mexico\", \"Micronesia\", \"Moldova\", \"Monaco\", \"Mongolia\", \"Montenegro\", \"Montserrat\", \"Morocco\", \"Mozambique\", \"Myanmar\", \"Nagorno-Karabakh\", \"Namibia\", \"Nauru\", \"Nepal\", \"Netherlands\", \"Netherlands Antilles\", \"New Caledonia\", \"New Zealand\", \"Nicaragua\", \"Niger\", \"Nigeria\", \"Niue\", \"Norfolk Island\", \"Northern Cyprus\", \"Northern Mariana Islands\", \"Norway\", \"Oman\", \"Pakistan\", \"Palau\", \"Palestine\", \"Panama\", \"Papua New Guinea\", \"Paraguay\", \"Peru\", \"Philippines\", \"Pitcaim Islands\", \"Poland\", \"Portugal\", \"Puerto Rico\", \"Qatar\", \"Romania\", \"Russia\", \"Rwanda\", \"Sahrawi Arab Democratic Republic\", \"Saint-Barthelemy\", \"Saint Helena\", \"Saint Kitts and Nevis\", \"Saint Lucia\", \"Saint Martin\", \"Saint Pierre and Miquelon\", \"Saint Vincent and Grenadines\", \"Samos\", \"San Marino\", \"Sao Tome and Principe\", \"Saudi Arabia\", \"Senegal\", \"Serbia\", \"Seychelles\", \"Sierra Leone\", \"Singapore\", \"Slovakia\", \"Slovenia\", \"Solomon Islands\", \"Somalia\", \"Somaliland\", \"South Africa\", \"South Ossetia\", \"Spain\", \"Sri Lanka\", \"Sudan\", \"Suriname\", \"Svalbard\", \"Swaziland\", \"Sweden\", \"Switzerland\", \"Syria\", \"Tajikistan\", \"Tanzania\", \"Thailand\", \"Togo\", \"Tokelau\", \"Tonga\", \"Transnistria\", \"Trinidad and Tobago\", \"Tristan da Cunha\", \"Tunisia\", \"Turkey\", \"Turkmenistan\", \"Turks and Caicos Islands\", \"Tuvalu\", \"Uganda\", \"Ukraine\", \"United Arab Emirates\", \"United Kingdom\", \"United States\", \"Uruguay\", \"Uzbekistan\", \"Vanuatu\", \"Vatican City\", \"Venezuela\", \"Vietnam\", \"Virgin Islands, British\", \"Virgin Islands, U.S.\", \"Wallis and Futuna\", \"Yemen\", \"Zambia\", \"Zimbabwe\"\n];\n\n\n\n// WEBPACK FOOTER //\n// node_modules/tslint-loader!./demo/data.ts","import { Component, Input, Output, EventEmitter, OnInit, OnChanges } from '@angular/core';\nimport { calculateViewDimensions, ViewDimensions } from '../common/view-dimensions.helper';\nimport { colorHelper } from '../utils/color-sets';\nimport { BaseChart } from '../common/base-chart.component';\nimport d3 from '../d3';\nimport moment = require(\"moment\");\nimport ObjectId from \"../utils/object-id\";\n\n@Component({\n  selector: 'area-chart-normalized',\n  template: `\n    <chart\n      [legend]=\"legend\"\n      [view]=\"view\"\n      [colors]=\"colors\"\n      [legendData]=\"seriesDomain\">\n\n      <svg:defs>\n        <svg:clipPath [attr.id]=\"clipPathId\">\n          <svg:rect\n            [attr.width]=\"dims.width + 10\"\n            [attr.height]=\"dims.height + 10\"\n            [attr.transform]=\"'translate(-5, -5)'\"/>\n        </svg:clipPath>\n      </svg:defs>\n\n      <svg:g [attr.transform]=\"transform\" class=\"line chart\">\n        <svg:g xAxis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"true\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\">\n        </svg:g>\n\n        <svg:g yAxis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"true\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\">\n        </svg:g>\n\n        <svg:g [attr.clip-path]=\"clipPath\">\n\n          <svg:g *ngFor=\"let series of results\">\n            <svg:g areaSeries\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [color]=\"colors(series.name)\"\n              [data]=\"series\"\n              [scaleType]=\"scaleType\"\n              [gradient]=\"gradient\"\n              normalized=\"true\"\n            />\n          </svg:g>\n\n          <svg:rect\n            class=\"tooltip-area\"\n            [attr.width]=\"dims.width + 10\"\n            [attr.height]=\"dims.height + 10\"\n            x=\"-5\"\n            y=\"-5\"\n            style=\"fill: rgb(255, 0, 0); opacity: 0; cursor: 'auto';\"\n          />\n\n          <svg:g *ngFor=\"let series of results\">\n            <svg:g circleSeries\n              type=\"stacked\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [color]=\"colors(series.name)\"\n              [strokeColor]=\"colors(series.name)\"\n              [data]=\"series\"\n              [scaleType]=\"scaleType\"\n              chartType=\"area\"\n              (clickHandler)=\"click($event)\"\n            />\n          </svg:g>\n\n        </svg:g>\n      </svg:g>\n\n      <svg:g timeline\n        *ngIf=\"timeline && scaleType === 'time'\"\n        [results]=\"results\"\n        [view]=\"view\"\n        [scheme]=\"scheme\"\n        [customColors]=\"customColors\"\n        [legend]=\"legend\">\n      </svg:g>\n    </chart>\n  `\n})\nexport class AreaChartNormalized extends BaseChart implements OnInit, OnChanges {\n  dims: ViewDimensions;\n  scaleType: string;\n  xDomain: any[];\n  yDomain: any[];\n  seriesDomain: any;\n  xScale: any;\n  yScale: any;\n  transform: string;\n  clipPathId: string;\n  clipPath: string;\n  colors: Function;\n\n  @Input() view;\n  @Input() results;\n  @Input() margin = [10, 20, 70, 70];\n  @Input() scheme;\n  @Input() customColors;\n  @Input() legend = false;\n  @Input() xAxis;\n  @Input() yAxis;\n  @Input() showXAxisLabel;\n  @Input() showYAxisLabel;\n  @Input() xAxisLabel;\n  @Input() yAxisLabel;\n  @Input() timeline;\n  @Input() gradient;\n\n  @Output() clickHandler = new EventEmitter();\n\n\n  ngOnInit() {\n    this.update();\n  }\n\n  ngOnChanges() {\n    this.update();\n  }\n\n  update() {\n    super.update();\n    this.dims = calculateViewDimensions(this.view, this.margin, this.showXAxisLabel, this.showYAxisLabel, this.legend, 9);\n\n    if (this.timeline) {\n      this.dims.height -= 150;\n    }\n\n    this.xDomain = this.getXDomain();\n    this.yDomain = this.getYDomain();\n    this.seriesDomain = this.getSeriesDomain();\n\n    this.xScale = this.getXScale();\n    this.yScale = this.getYScale();\n\n    // modifies results in place\n    for (let i = 0; i < this.xDomain.length; i++) {\n      let val = this.xDomain[i];\n      let d0 = 0;\n\n      let total = 0;\n      for (let group of this.results){\n        let d = group.series.find(item => item.name === val);\n        total += d.value;\n      }\n\n      for (let group of this.results){\n        let d = group.series.find(item => item.name === val);\n\n        d.d0 = d0;\n        d.d1 = d0 + d.value;\n        d0 += d.value;\n\n        if (total > 0) {\n          d.d0 = (d.d0 * 100) / total;\n          d.d1 = (d.d1 * 100) / total;\n        } else {\n          d.d0 = 0;\n          d.d1 = 0;\n        }\n      }\n    }\n\n    this.setColors();\n    this.transform = `translate(${ this.dims.xOffset } , ${ this.margin[0] })`;\n    let pageUrl = window.location.href;\n    this.clipPathId = 'clip' + ObjectId().toString();\n    this.clipPath = `url(${pageUrl}#${this.clipPathId})`;\n\n  }\n\n  getXDomain() {\n    let values = [];\n    for (let results of this.results) {\n      for (let d of results.series){\n        if (!values.includes(d.name)) {\n          values.push(d.name);\n        }\n      }\n    }\n\n    this.scaleType = this.getScaleType(values);\n    let domain = [];\n    if (this.scaleType === 'time') {\n      values = values.map(v => moment(v).toDate());\n      let min = Math.min(...values);\n      let max = Math.max(...values);\n      domain = [min, max];\n    } else if (this.scaleType === 'linear') {\n      values = values.map(v => Number(v));\n      let min = Math.min(...values);\n      let max = Math.max(...values);\n      domain = [min, max];\n    } else {\n      domain = values;\n    }\n    return domain;\n  }\n\n  getYDomain() {\n    return [0, 100];\n  }\n\n  getSeriesDomain() {\n    return this.results.map(d => d.name);\n  }\n\n  getXScale() {\n    let scale;\n    if (this.scaleType === 'time') {\n      scale = d3.scaleTime()\n        .range([0, this.dims.width])\n        .domain(this.xDomain);\n    } else if (this.scaleType === 'linear') {\n      scale = d3.scaleLinear()\n        .range([0, this.dims.width])\n        .domain(this.xDomain);\n    } else if (this.scaleType === 'ordinal') {\n      scale = d3.scalePoint()\n        .range([0, this.dims.width])\n        .padding(0.1)\n        .domain(this.xDomain);\n    }\n\n    return scale;\n  }\n\n  getYScale() {\n    return d3.scaleLinear()\n      .range([this.dims.height, 0])\n      .domain(this.yDomain);\n  }\n\n  getScaleType(values) {\n    let date = true;\n    let number = true;\n    for (let value of values) {\n      if (!this.isDate(value)) {\n        date = false;\n      }\n      if (typeof value !== 'number') {\n        number = false;\n      }\n    }\n\n    if (date) {\n      return 'time';\n    }\n    if (number) {\n      return 'linear';\n    }\n    return 'ordinal';\n  }\n\n  isDate(value) {\n    if (value instanceof Date) {\n      return true;\n    }\n\n    return false;\n  }\n\n\n  click(data) {\n    this.clickHandler.emit(data);\n  }\n\n  setColors() {\n    this.colors = colorHelper(this.scheme, 'ordinal', this.seriesDomain, this.customColors);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// node_modules/tslint-loader!./src/area-chart/area-chart-normalized.component.ts","import { Component, Input, Output, EventEmitter, ElementRef, OnInit, OnChanges } from '@angular/core';\nimport { calculateViewDimensions, ViewDimensions } from '../common/view-dimensions.helper';\nimport { colorHelper } from '../utils/color-sets';\nimport { BaseChart } from '../common/base-chart.component';\nimport moment = require(\"moment\");\nimport ObjectId from \"../utils/object-id\";\nimport d3 from '../d3';\n\n@Component({\n  selector: 'area-chart-stacked',\n  template: `\n    <chart\n      [legend]=\"legend\"\n      [view]=\"view\"\n      [colors]=\"colors\"\n      [legendData]=\"seriesDomain\">\n\n      <svg:defs>\n        <svg:clipPath [attr.id]=\"clipPathId\">\n          <svg:rect\n            [attr.width]=\"dims.width + 10\"\n            [attr.height]=\"dims.height + 10\"\n            [attr.transform]=\"'translate(-5, -5)'\"/>\n        </svg:clipPath>\n      </svg:defs>\n\n      <svg:g [attr.transform]=\"transform\" class=\"area chart\">\n        <svg:g xAxis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"true\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\">\n        </svg:g>\n\n        <svg:g yAxis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"true\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\">\n        </svg:g>\n\n        <svg:g [attr.clip-path]=\"clipPath\">\n\n          <svg:g *ngFor=\"let series of results\">\n            <svg:g areaSeries\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [color]=\"colors(series.name)\"\n              [data]=\"series\"\n              [scaleType]=\"scaleType\"\n              [gradient]=\"gradient\"\n              stacked=\"true\"\n            />\n          </svg:g>\n\n          <svg:rect\n            class=\"tooltip-area\"\n            [attr.width]=\"dims.width + 10\"\n            [attr.height]=\"dims.height + 10\"\n            x=\"-5\"\n            y=\"-5\"\n            style=\"fill: rgb(255, 0, 0); opacity: 0; cursor: 'auto';\"\n          />\n\n          <svg:g *ngFor=\"let series of results\">\n            <svg:g circleSeries\n              type=\"stacked\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [color]=\"colors(series.name)\"\n              [strokeColor]=\"colors(series.name)\"\n              [data]=\"series\"\n              [scaleType]=\"scaleType\"\n              (clickHandler)=\"click($event)\"\n            />\n          </svg:g>\n\n        </svg:g>\n      </svg:g>\n\n      <svg:g timeline\n        *ngIf=\"timeline && scaleType === 'time'\"\n        [results]=\"results\"\n        [view]=\"view\"\n        [scheme]=\"scheme\"\n        [customColors]=\"customColors\"\n        [legend]=\"legend\">\n      </svg:g>\n    </chart>\n  `\n})\nexport class AreaChartStacked extends BaseChart implements OnInit, OnChanges {\n  element: HTMLElement;\n  dims: ViewDimensions;\n  scaleType: string;\n  xDomain: any[];\n  yDomain: any[];\n  seriesDomain: any;\n  xScale: any;\n  yScale: any;\n  transform: string;\n  clipPathId: string;\n  clipPath: string;\n  colors: Function;\n\n  @Input() view;\n  @Input() results;\n  @Input() margin = [10, 20, 70, 70];\n  @Input() scheme;\n  @Input() customColors;\n  @Input() legend = false;\n  @Input() xAxis;\n  @Input() yAxis;\n  @Input() showXAxisLabel;\n  @Input() showYAxisLabel;\n  @Input() xAxisLabel;\n  @Input() yAxisLabel;\n  @Input() timeline;\n  @Input() gradient;\n\n  @Output() clickHandler = new EventEmitter();\n\n  constructor(element: ElementRef) {\n    super();\n    this.element = element.nativeElement;\n  }\n\n  ngOnInit() {\n    this.update();\n  }\n\n  ngOnChanges() {\n    this.update();\n  }\n\n  update() {\n    super.update();\n    this.dims = calculateViewDimensions(this.view, this.margin, this.showXAxisLabel, this.showYAxisLabel, this.legend, 9);\n\n    if (this.timeline) {\n      this.dims.height -= 150;\n    }\n\n    this.xDomain = this.getXDomain();\n    this.yDomain = this.getYDomain();\n    this.seriesDomain = this.getSeriesDomain();\n\n    this.xScale = this.getXScale();\n    this.yScale = this.getYScale();\n\n    // modifies results in place\n    for (let i = 0; i < this.xDomain.length; i++) {\n      let val = this.xDomain[i];\n      let d0 = 0;\n      for (let group of this.results){\n        let d = group.series.find(item => item.name === val);\n\n        d.d0 = d0;\n        d.d1 = d0 + d.value;\n        d0 += d.value;\n      }\n    }\n\n    this.setColors();\n    this.transform = `translate(${ this.dims.xOffset } , ${ this.margin[0] })`;\n    let pageUrl = window.location.href;\n    this.clipPathId = 'clip' + ObjectId().toString();\n    this.clipPath = `url(${pageUrl}#${this.clipPathId})`;\n\n    this.addTooltip();\n  }\n\n  getXDomain() {\n    let values = [];\n    for (let results of this.results) {\n      for (let d of results.series){\n        if (!values.includes(d.name)) {\n          values.push(d.name);\n        }\n      }\n    }\n\n    this.scaleType = this.getScaleType(values);\n    let domain = [];\n    if (this.scaleType === 'time') {\n      values = values.map(v => moment(v).toDate());\n      let min = Math.min(...values);\n      let max = Math.max(...values);\n      domain = [min, max];\n    } else if (this.scaleType === 'linear') {\n      values = values.map(v => Number(v));\n      let min = Math.min(...values);\n      let max = Math.max(...values);\n      domain = [min, max];\n    } else {\n      domain = values;\n    }\n    return domain;\n  }\n\n  getYDomain() {\n    let domain = [];\n\n    for (let i = 0; i < this.xDomain.length; i++) {\n      let val = this.xDomain[i];\n      let sum = 0;\n      for (let group of this.results){\n        let d = group.series.find(item => item.name === val);\n        sum += d.value;\n      }\n\n      domain.push(sum);\n    }\n\n    let min = Math.min(0, ...domain);\n    let max = Math.max(...domain);\n    return [min, max];\n  }\n\n  getSeriesDomain() {\n    return this.results.map(d => d.name);\n  }\n\n  getXScale() {\n    let scale;\n    if (this.scaleType === 'time') {\n      scale = d3.scaleTime()\n        .range([0, this.dims.width])\n        .domain(this.xDomain);\n    } else if (this.scaleType === 'linear') {\n      scale = d3.scaleLinear()\n        .range([0, this.dims.width])\n        .domain(this.xDomain);\n    } else if (this.scaleType === 'ordinal') {\n      scale = d3.scalePoint()\n        .range([0, this.dims.width])\n        .padding(0.1)\n        .domain(this.xDomain);\n    }\n\n    return scale;\n  }\n\n  getYScale() {\n    return d3.scaleLinear()\n      .range([this.dims.height, 0])\n      .domain(this.yDomain);\n  }\n\n  getScaleType(values) {\n    let date = true;\n    let number = true;\n    for (let value of values) {\n      if (!this.isDate(value)) {\n        date = false;\n      }\n      if (typeof value !== 'number') {\n        number = false;\n      }\n    }\n\n    if (date) {\n      return 'time';\n    }\n    if (number) {\n      return 'linear';\n    }\n    return 'ordinal';\n  }\n\n  isDate(value) {\n    if (value instanceof Date) {\n      return true;\n    }\n\n    return false;\n  }\n\n  addTooltip() {\n    // d3.select(this.element).select('.tooltip-area')\n    //   .on('mousemove', () => {\n    //     let el = d3.select(this.element).select('.tooltip-area')[0][0];\n    //     let chartEl = d3.select(this.element);\n    //     updateTooltip(el, chartEl, this);\n    //   })\n    //   .on('mouseenter', () => {\n    //     showTooltip(this);\n    //   })\n    //   .on('mouseout', () => {\n    //     hideTooltip(this)}\n    //   );\n  }\n\n  click(data) {\n    this.clickHandler.emit(data);\n  }\n\n  setColors() {\n    this.colors = colorHelper(this.scheme, 'ordinal', this.seriesDomain, this.customColors);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// node_modules/tslint-loader!./src/area-chart/area-chart-stacked.component.ts","import {Component, Input, Output, EventEmitter, OnInit, OnChanges} from '@angular/core';\nimport {calculateViewDimensions, ViewDimensions} from '../common/view-dimensions.helper';\nimport {colorHelper} from '../utils/color-sets';\nimport {BaseChart} from '../common/base-chart.component';\nimport moment = require(\"moment\");\nimport ObjectId from \"../utils/object-id\";\nimport d3 from '../d3';\n\n@Component({\n  selector: 'area-chart',\n  template: `\n    <chart\n      [legend]=\"legend\"\n      [view]=\"view\"\n      [colors]=\"colors\"\n      [legendData]=\"seriesDomain\">\n\n      <svg:defs>\n        <svg:clipPath [attr.id]=\"clipPathId\">\n          <svg:rect\n            [attr.width]=\"dims.width + 10\"\n            [attr.height]=\"dims.height + 10\"\n            [attr.transform]=\"'translate(-5, -5)'\"/>\n        </svg:clipPath>\n      </svg:defs>\n\n      <svg:g [attr.transform]=\"transform\" class=\"line chart\">\n        <svg:g xAxis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"true\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\">\n        </svg:g>\n\n        <svg:g yAxis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"true\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\">\n        </svg:g>\n\n        <svg:g [attr.clip-path]=\"clipPath\">\n\n          <svg:g *ngFor=\"let series of results\">\n            <svg:g areaSeries\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [color]=\"colors(series.name)\"\n              [data]=\"series\"\n              [scaleType]=\"scaleType\"\n              [gradient]=\"gradient\"\n            />\n          </svg:g>\n\n          <svg:rect\n            class=\"tooltip-area\"\n            [attr.width]=\"dims.width + 10\"\n            [attr.height]=\"dims.height + 10\"\n            x=\"-5\"\n            y=\"-5\"\n            style=\"fill: rgb(255, 0, 0); opacity: 0; cursor: 'auto';\"\n          />\n\n          <svg:g *ngFor=\"let series of results\">\n            <svg:g circleSeries\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [color]=\"colors(series.name)\"\n              [strokeColor]=\"colors(series.name)\"\n              [data]=\"series\"\n              [scaleType]=\"scaleType\"\n              (clickHandler)=\"click($event)\"\n            />\n          </svg:g>\n\n        </svg:g>\n      </svg:g>\n\n      <svg:g timeline\n        *ngIf=\"timeline && scaleType === 'time'\"\n        [results]=\"results\"\n        [view]=\"view\"\n        [scheme]=\"scheme\"\n        [customColors]=\"customColors\"\n        [legend]=\"legend\">\n      </svg:g>\n    </chart>\n  `\n})\nexport class AreaChart extends BaseChart implements OnInit, OnChanges {\n  dims: ViewDimensions;\n  xDomain: any;\n  yDomain: any;\n  seriesDomain: any;\n  xScale: any;\n  yScale: any;\n  transform: string;\n  colors: Function;\n  clipPathId: string;\n  clipPath: string;\n  scaleType: string;\n  series: any;\n\n  @Input() view;\n  @Input() results;\n  @Input() margin = [10, 20, 70, 70];\n  @Input() scheme;\n  @Input() legend;\n  @Input() state;\n  @Input() customColors;\n  @Input() xAxis;\n  @Input() yAxis;\n  @Input() autoScale;\n  @Input() showXAxisLabel;\n  @Input() showYAxisLabel;\n  @Input() xAxisLabel;\n  @Input() yAxisLabel;\n  @Input() timeline;\n  @Input() gradient: boolean;\n\n  @Output() clickHandler = new EventEmitter();\n\n  ngOnInit() {\n    this.update();\n  }\n\n  ngOnChanges() {\n    this.update();\n  }\n\n  update() {\n    super.update();\n    this.dims = calculateViewDimensions(this.view, this.margin, this.showXAxisLabel, this.showYAxisLabel, this.legend, 9);\n\n    if (this.timeline) {\n      this.dims.height -= 150;\n    }\n\n    this.xDomain = this.getXDomain();\n    this.yDomain = this.getYDomain();\n    this.seriesDomain = this.getSeriesDomain();\n\n    // TODO: should sorting happen here?\n    // this.series = this.results.series[0].array.sort((a, b) => {\n    //   return this.results.d0Domain.indexOf(a.vals[0].label[0][0]) - this.results.d0Domain.indexOf(b.vals[0].label[0][0]);\n    // });\n\n    this.xScale = this.getXScale();\n    this.yScale = this.getYScale();\n\n\n    this.setColors();\n\n    this.transform = `translate(${ this.dims.xOffset }, ${ this.margin[0] })`;\n    let pageUrl = window.location.href;\n    this.clipPathId = 'clip' + ObjectId().toString();\n    this.clipPath = `url(${pageUrl}#${this.clipPathId})`;\n  }\n\n  getXDomain() {\n    let values = [];\n    for (let results of this.results) {\n      for (let d of results.series){\n        if (!values.includes(d.name)) {\n          values.push(d.name);\n        }\n      }\n    }\n\n    this.scaleType = this.getScaleType(values);\n    let domain = [];\n    if (this.scaleType === 'time') {\n      values = values.map(v => moment(v).toDate());\n      let min = Math.min(...values);\n      let max = Math.max(...values);\n      domain = [min, max];\n    } else if (this.scaleType === 'linear') {\n      values = values.map(v => Number(v));\n      let min = Math.min(...values);\n      let max = Math.max(...values);\n      domain = [min, max];\n    } else {\n      domain = values;\n    }\n    return domain;\n  }\n\n  getYDomain() {\n    let domain = [];\n    for (let results of this.results) {\n      for (let d of results.series){\n        if (!domain.includes(d.value)) {\n          domain.push(d.value);\n        }\n      }\n    }\n\n    let min = Math.min(...domain);\n    let max = Math.max(...domain);\n    if (!this.autoScale) {\n      min = Math.min(0, min);\n    }\n    return [min, max];\n  }\n\n  getSeriesDomain() {\n    return this.results.map(d => d.name);\n  }\n\n  getXScale() {\n    let scale;\n    if (this.scaleType === 'time') {\n      scale = d3.scaleTime()\n        .range([0, this.dims.width])\n        .domain(this.xDomain);\n    } else if (this.scaleType === 'linear') {\n      scale = d3.scaleLinear()\n        .range([0, this.dims.width])\n        .domain(this.xDomain);\n    } else if (this.scaleType === 'ordinal') {\n      scale = d3.scalePoint()\n        .range([0, this.dims.width])\n        .padding(0.1)\n        .domain(this.xDomain);\n    }\n\n    return scale;\n  }\n\n  getYScale() {\n    return d3.scaleLinear()\n      .range([this.dims.height, 0])\n      .domain(this.yDomain);\n  }\n\n  getScaleType(values) {\n    let date = true;\n    let number = true;\n    for (let value of values) {\n      if (!this.isDate(value)) {\n        date = false;\n      }\n      if (typeof value !== 'number') {\n        number = false;\n      }\n    }\n\n    if (date) {\n      return 'time';\n    }\n    if (number) {\n      return 'linear';\n    }\n    return 'ordinal';\n  }\n\n  isDate(value) {\n    if (value instanceof Date) {\n      return true;\n    }\n\n    return false;\n  }\n\n  click(data) {\n    this.clickHandler.emit(data);\n  }\n\n  setColors() {\n    this.colors = colorHelper(this.scheme, 'ordinal', this.seriesDomain, this.customColors);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// node_modules/tslint-loader!./src/area-chart/area-chart.component.ts","import {NgModule} from \"@angular/core\";\nimport {AreaChart} from \"./area-chart.component\";\nimport {AreaChartNormalized} from \"./area-chart-normalized.component\";\nimport {AreaChartStacked} from \"./area-chart-stacked.component\";\nimport {AreaSeries} from \"./area-series.component\";\nimport {CommonModule} from \"../common/common.module\";\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [\n    AreaChart,\n    AreaChartNormalized,\n    AreaChartStacked,\n    AreaSeries\n  ],\n  exports: [\n    AreaChart,\n    AreaChartNormalized,\n    AreaChartStacked,\n    AreaSeries\n  ]\n})\nexport class AreaChartModule {}\n\n\n\n// WEBPACK FOOTER //\n// node_modules/tslint-loader!./src/area-chart/area-chart.module.ts","import { Component, Input, Output, EventEmitter, OnInit, OnChanges } from '@angular/core';\nimport d3 from '../d3';\nimport moment = require(\"moment\");\n\n@Component({\n  selector: 'g[areaSeries]',\n  template: `\n    <svg:g area\n      [data]=\"data\"\n      [path]=\"path\"\n      [fill]=\"color\"\n      [startingPath]=\"startingPath\"\n      [opacity]=\"opacity\"\n      [gradient]=\"gradient\"\n    />\n  `\n})\nexport class AreaSeries implements OnInit, OnChanges {\n  opacity: number;\n  path: string;\n  startingPath: string;\n\n  @Input() data;\n  @Input() xScale;\n  @Input() yScale;\n  @Input() color;\n  @Input() scaleType;\n  @Input() stacked = false;\n  @Input() normalized = false;\n  @Input() gradient;\n\n  @Output() clickHandler = new EventEmitter();\n\n  ngOnInit() {\n    this.update();\n  }\n\n  ngOnChanges() {\n    this.update();\n  }\n\n  update() {\n    let area;\n    let startingArea;\n\n    let xProperty = (d) => {\n      let label = d.name;\n      if (this.scaleType === 'time') {\n        return this.xScale(moment(label).toDate());\n      } else {\n        return this.xScale(label);\n      }\n    };\n\n    // let areaData = this.data.series.map(d => {\n    //   if (this.stacked) {\n    //     let offset0 = d0;\n    //     let offset1 = d0 + d.value;\n    //     d0 = d0 + d.value;\n    //\n    //     return {\n    //       name: d.name,\n    //       value: d.value,\n    //       d0: offset0,\n    //       d1: offset1\n    //     };\n    //   } else if (this.normalized) {\n    //     let offset0 = d0;\n    //     let offset1 = d0 + d.value;\n    //     d0 = d0 + d.value;\n    //\n    //     if (total > 0) {\n    //       offset0 = (offset0 * 100) / total;\n    //       offset1 = (offset1 * 100) /total;\n    //     } else {\n    //       offset0 = 0;\n    //       offset1 = 0;\n    //     }\n    //\n    //     return {\n    //       name: d.name,\n    //       value: d.value,\n    //       d0: offset0,\n    //       d1: offset1\n    //     };\n    //   } else {\n    //     return d;\n    //   }\n    // });\n\n\n    if (this.stacked || this.normalized) {\n      area = d3.area()\n        .x(xProperty)\n        .y0((d, i) => this.yScale(d.d0))\n        .y1((d, i) => this.yScale(d.d1));\n\n      startingArea = d3.area()\n        .x(xProperty)\n        .y0(d => this.yScale.range()[0])\n        .y1(d => this.yScale.range()[0]);\n    } else {\n      area = d3.area()\n        .x(xProperty)\n        .y0(() => this.yScale.range()[0])\n        .y1(d => this.yScale(d.value));\n\n      startingArea = d3.area()\n        .x(xProperty)\n        .y0(d => this.yScale.range()[0])\n        .y1(d => this.yScale.range()[0]);\n    }\n\n    this.opacity = 1;\n    this.path = area(this.data.series);\n\n    this.startingPath = startingArea(this.data.series);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// node_modules/tslint-loader!./src/area-chart/area-series.component.ts","import {NgModule} from \"@angular/core\";\nimport {CommonModule} from \"../common/common.module\";\nimport {Bar} from \"./bar.component\";\nimport {BarHorizontal} from \"./bar-horizontal.component\";\nimport {BarHorizontal2D} from \"./bar-horizontal-2d.component\";\nimport {BarHorizontalNormalized} from \"./bar-horizontal-normalized.component\";\nimport {BarHorizontalStacked} from \"./bar-horizontal-stacked.component\";\nimport {BarVertical} from \"./bar-vertical.component\";\nimport {BarVertical2D} from \"./bar-vertical-2d.component\";\nimport {BarVerticalNormalized} from \"./bar-vertical-normalized.component\";\nimport {BarVerticalStacked} from \"./bar-vertical-stacked.component\";\nimport {DateBar} from \"./date-bar.component\";\nimport {SeriesHorizontal} from \"./series-horizontal.component\";\nimport {SeriesVertical} from \"./series-vertical.component\";\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [\n    Bar,\n    BarHorizontal,\n    BarHorizontal2D,\n    BarHorizontalNormalized,\n    BarHorizontalStacked,\n    BarVertical,\n    BarVertical2D,\n    BarVerticalNormalized,\n    BarVerticalStacked,\n    DateBar,\n    SeriesHorizontal,\n    SeriesVertical\n  ],\n  exports: [\n    Bar,\n    BarHorizontal,\n    BarHorizontal2D,\n    BarHorizontalNormalized,\n    BarHorizontalStacked,\n    BarVertical,\n    BarVertical2D,\n    BarVerticalNormalized,\n    BarVerticalStacked,\n    DateBar,\n    SeriesHorizontal,\n    SeriesVertical\n  ]\n})\nexport class BarChartModule {}\n\n\n\n// WEBPACK FOOTER //\n// node_modules/tslint-loader!./src/bar-chart/bar-chart.module.ts","import { Component, Input, Output, EventEmitter, OnInit, OnChanges } from '@angular/core';\nimport { calculateViewDimensions, ViewDimensions } from '../common/view-dimensions.helper';\nimport { colorHelper } from '../utils/color-sets';\nimport { BaseChart } from '../common/base-chart.component';\nimport d3 from '../d3';\n\n@Component({\n  selector: 'bar-horizontal-2d',\n  template: `\n    <chart\n      [legend]=\"legend\"\n      [view]=\"view\"\n      [colors]=\"colors\"\n      [legendData]=\"innerDomain\">\n      <svg:g [attr.transform]=\"transform\" class=\"bar chart\">\n        <svg:g gridPanelSeries\n          [xScale]=\"valueScale\"\n          [yScale]=\"groupScale\"\n          [data]=\"results\"\n          [dims]=\"dims\"\n          orient=\"horizontal\">\n        </svg:g>\n\n        <svg:g xAxis\n          *ngIf=\"xAxis\"\n          [xScale]=\"valueScale\"\n          [dims]=\"dims\"\n          showGridLines=\"true\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\">\n        </svg:g>\n\n        <svg:g yAxis\n          *ngIf=\"yAxis\"\n          [yScale]=\"groupScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\">\n        </svg:g>\n\n        <svg:g\n          *ngFor=\"let group of results\"\n          [attr.transform]=\"groupTransform(group)\">\n          <svg:g seriesHorizontal\n            [xScale]=\"valueScale\"\n            [yScale]=\"innerScale\"\n            [colors]=\"colors\"\n            [series]=\"group.series\"\n            [dims]=\"dims\"\n            [gradient]=\"gradient\"\n            (clickHandler)=\"click($event)\"\n          />\n        </svg:g>\n\n      </svg:g>\n    </chart>\n  `\n})\nexport class BarHorizontal2D extends BaseChart implements OnInit, OnChanges {\n  dims: ViewDimensions;\n  groupDomain: any[];\n  innerDomain: any[];\n  valuesDomain: any[];\n  groupScale: any;\n  innerScale: any;\n  valueScale: any;\n  transform: string;\n  colors: Function;\n\n  @Input() view;\n  @Input() results;\n  @Input() margin = [10, 20, 70, 100];\n  @Input() scheme;\n  @Input() customColors;\n  @Input() legend = false;\n  @Input() xAxis;\n  @Input() yAxis;\n  @Input() showXAxisLabel;\n  @Input() showYAxisLabel;\n  @Input() xAxisLabel;\n  @Input() yAxisLabel;\n  @Input() gradient: boolean;\n\n  @Output() clickHandler = new EventEmitter();\n\n    ngOnInit() {\n      this.update();\n    }\n\n    ngOnChanges() {\n      this.update();\n    }\n\n    update() {\n      super.update();\n      this.dims = calculateViewDimensions(this.view, this.margin, this.showXAxisLabel, this.showYAxisLabel, this.legend, 9);\n\n      this.groupDomain = this.getGroupDomain();\n      this.innerDomain = this.getInnerDomain();\n      this.valuesDomain = this.getValueDomain();\n\n      this.groupScale = this.getGroupScale();\n      this.innerScale = this.getInnerScale();\n      this.valueScale = this.getValueScale();\n\n      this.setColors();\n\n      this.transform = `translate(${ this.dims.xOffset } , ${ this.margin[0] })`;\n    }\n\n    getGroupScale() {\n      let spacing = 0.2;\n      return d3.scaleBand()\n        .rangeRound([this.dims.height, 0])\n        .paddingInner(spacing)\n        .domain(this.groupDomain);\n    }\n\n    getInnerScale() {\n      let spacing = 0.2;\n      return d3.scaleBand()\n        .rangeRound([0, this.groupScale.bandwidth()])\n        .paddingInner(spacing)\n        .domain(this.innerDomain);\n    }\n\n    getValueScale() {\n      return d3.scaleLinear()\n        .range([0, this.dims.width])\n        .domain(this.valuesDomain);\n    }\n\n    getGroupDomain() {\n      let domain = [];\n      for (let group of this.results) {\n        if (!domain.includes(group.name)) {\n          domain.push(group.name);\n        }\n      }\n\n      return domain;\n    }\n\n    getInnerDomain() {\n      let domain = [];\n      for (let group of this.results) {\n        for (let d of group.series) {\n          if (!domain.includes(d.name)) {\n            domain.push(d.name);\n          }\n        }\n      }\n\n      return domain;\n    }\n\n    getValueDomain() {\n      let domain = [];\n      for (let group of this.results) {\n        for (let d of group.series) {\n          if (!domain.includes(d.value)) {\n            domain.push(d.value);\n          }\n        }\n      }\n\n      let min = Math.min(0, ...domain);\n      let max = Math.max(...domain);\n      return [min, max];\n    }\n\n\n  groupTransform(group) {\n    return `translate(0, ${this.groupScale(group.name)})`;\n  }\n\n  click(data) {\n    this.clickHandler.emit(data);\n  }\n\n  setColors() {\n    this.colors = colorHelper(this.scheme, 'ordinal', this.innerDomain, this.customColors);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// node_modules/tslint-loader!./src/bar-chart/bar-horizontal-2d.component.ts","import {Component, Input, Output, EventEmitter, OnInit, OnChanges} from '@angular/core';\nimport {calculateViewDimensions, ViewDimensions} from '../common/view-dimensions.helper';\nimport {colorHelper} from '../utils/color-sets';\nimport {BaseChart} from '../common/base-chart.component';\nimport d3 from '../d3';\n\n@Component({\n  selector: 'bar-horizontal-normalized',\n  template: `\n    <chart\n      [legend]=\"legend\"\n      [view]=\"view\"\n      [colors]=\"colors\"\n      [legendData]=\"innerDomain\">\n      <svg:g [attr.transform]=\"transform\" class=\"bar chart\">\n        <svg:g xAxis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          showGridLines=\"true\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\">\n        </svg:g>\n\n        <svg:g yAxis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\">\n        </svg:g>\n\n        <svg:g\n          *ngFor=\"let group of results\"\n          [attr.transform]=\"groupTransform(group)\">\n          <svg:g seriesHorizontal\n            type=\"normalized\"\n            [xScale]=\"xScale\"\n            [yScale]=\"yScale\"\n            [colors]=\"colors\"\n            [series]=\"group.series\"\n            [dims]=\"dims\"\n            [gradient]=\"gradient\"\n            (clickHandler)=\"click($event)\"\n          />\n        </svg:g>\n\n      </svg:g>\n    </chart>\n  `\n})\nexport class BarHorizontalNormalized extends BaseChart implements OnInit, OnChanges {\n  dims: ViewDimensions;\n  groupDomain: any[];\n  innerDomain: any[];\n  valueDomain: any[];\n  xScale: any;\n  yScale: any;\n  transform: string;\n  colors: Function;\n\n  @Input() view;\n  @Input() results;\n  @Input() margin = [10, 20, 70, 100];\n  @Input() scheme;\n  @Input() customColors;\n  @Input() legend = false;\n  @Input() xAxis;\n  @Input() yAxis;\n  @Input() showXAxisLabel;\n  @Input() showYAxisLabel;\n  @Input() xAxisLabel;\n  @Input() yAxisLabel;\n  @Input() gradient: boolean;\n\n  @Output() clickHandler = new EventEmitter();\n\n  ngOnInit() {\n    this.update();\n  }\n\n  ngOnChanges() {\n    this.update();\n  }\n\n  update() {\n    super.update();\n    this.dims = calculateViewDimensions(this.view, this.margin, this.showXAxisLabel, this.showYAxisLabel, this.legend, 9);\n\n    this.groupDomain = this.getGroupDomain();\n    this.innerDomain = this.getInnerDomain();\n    this.valueDomain = this.getValueDomain();\n\n    this.xScale = this.getXScale();\n    this.yScale = this.getYScale();\n\n    this.setColors();\n\n    this.transform = `translate(${ this.dims.xOffset } , ${ this.margin[0] })`;\n  }\n\n  getGroupDomain() {\n    let domain = [];\n    for (let group of this.results) {\n      if (!domain.includes(group.name)) {\n        domain.push(group.name);\n      }\n    }\n\n    return domain;\n  }\n\n  getInnerDomain() {\n    let domain = [];\n    for (let group of this.results) {\n      for (let d of group.series) {\n        if (!domain.includes(d.name)) {\n          domain.push(d.name);\n        }\n      }\n    }\n\n    return domain;\n  }\n\n  getValueDomain() {\n    return [0, 100];\n  }\n\n  getYScale() {\n    let spacing = 0.1;\n    return d3.scaleBand()\n      .rangeRound([this.dims.height, 0])\n      .paddingInner(spacing)\n      .domain(this.groupDomain);\n  }\n\n  getXScale() {\n    return d3.scaleLinear()\n      .range([0, this.dims.width])\n      .domain(this.valueDomain);\n\n  }\n\n  groupTransform(group) {\n    return `translate(0, ${this.yScale(group.name)})`;\n  }\n\n  click(data) {\n    this.clickHandler.emit(data);\n  }\n\n  setColors() {\n    this.colors = colorHelper(this.scheme, 'ordinal', this.innerDomain, this.customColors);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// node_modules/tslint-loader!./src/bar-chart/bar-horizontal-normalized.component.ts","import {Component, Input, Output, EventEmitter, OnInit, OnChanges} from '@angular/core';\nimport {calculateViewDimensions, ViewDimensions} from '../common/view-dimensions.helper';\nimport {colorHelper} from '../utils/color-sets';\nimport {BaseChart} from '../common/base-chart.component';\nimport d3 from '../d3';\n\n@Component({\n  selector: 'bar-horizontal-stacked',\n  template: `\n    <chart\n      [legend]=\"legend\"\n      [view]=\"view\"\n      [colors]=\"colors\"\n      [legendData]=\"innerDomain\">\n      <svg:g [attr.transform]=\"transform\" class=\"bar chart\">\n        <svg:g xAxis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          showGridLines=\"true\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\">\n        </svg:g>\n\n        <svg:g yAxis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\">\n        </svg:g>\n\n        <svg:g\n          *ngFor=\"let group of results\"\n          [attr.transform]=\"groupTransform(group)\">\n          <svg:g seriesHorizontal\n            type=\"stacked\"\n            [xScale]=\"xScale\"\n            [yScale]=\"yScale\"\n            [colors]=\"colors\"\n            [series]=\"group.series\"\n            [dims]=\"dims\"\n            [gradient]=\"gradient\"\n            (clickHandler)=\"click($event)\"\n          />\n        </svg:g>\n\n      </svg:g>\n    </chart>\n  `\n})\nexport class BarHorizontalStacked extends BaseChart implements OnInit, OnChanges {\n  dims: ViewDimensions;\n  groupDomain: any[];\n  innerDomain: any[];\n  valueDomain: any[];\n  xScale: any;\n  yScale: any;\n  transform: string;\n  colors: Function;\n\n  @Input() view;\n  @Input() results;\n  @Input() margin = [10, 20, 70, 100];\n  @Input() scheme;\n  @Input() customColors;\n  @Input() legend = false;\n  @Input() xAxis;\n  @Input() yAxis;\n  @Input() showXAxisLabel;\n  @Input() showYAxisLabel;\n  @Input() xAxisLabel;\n  @Input() yAxisLabel;\n  @Input() gradient: boolean;\n\n  @Output() clickHandler = new EventEmitter();\n\n  ngOnInit() {\n    this.update();\n  }\n\n  ngOnChanges() {\n    this.update();\n  }\n\n  update() {\n    super.update();\n    this.dims = calculateViewDimensions(this.view, this.margin, this.showXAxisLabel, this.showYAxisLabel, this.legend, 9);\n\n    this.groupDomain = this.getGroupDomain();\n    this.innerDomain = this.getInnerDomain();\n    this.valueDomain = this.getValueDomain();\n\n    this.xScale = this.getXScale();\n    this.yScale = this.getYScale();\n\n    this.setColors();\n\n    this.transform = `translate(${ this.dims.xOffset } , ${ this.margin[0] })`;\n  }\n\n  getGroupDomain() {\n    let domain = [];\n    for (let group of this.results) {\n      if (!domain.includes(group.name)) {\n        domain.push(group.name);\n      }\n    }\n\n    return domain;\n  }\n\n  getInnerDomain() {\n    let domain = [];\n    for (let group of this.results) {\n      for (let d of group.series) {\n        if (!domain.includes(d.name)) {\n          domain.push(d.name);\n        }\n      }\n    }\n\n    return domain;\n  }\n\n  getValueDomain() {\n    let domain = [];\n    for (let group of this.results) {\n      let sum = 0;\n      for (let d of group.series) {\n        sum += d.value;\n      }\n\n      domain.push(sum);\n    }\n\n    let min = Math.min(0, ...domain);\n    let max = Math.max(...domain);\n    return [min, max];\n  }\n\n  getYScale() {\n    let spacing = 0.1;\n    return d3.scaleBand()\n      .rangeRound([this.dims.height, 0])\n      .paddingInner(spacing)\n      .domain(this.groupDomain);\n  }\n\n  getXScale() {\n    return d3.scaleLinear()\n      .range([0, this.dims.width])\n      .domain(this.valueDomain);\n\n  }\n\n  groupTransform(group) {\n    return `translate(0, ${this.yScale(group.name)})`;\n  }\n\n  click(data) {\n    this.clickHandler.emit(data);\n  }\n\n  setColors() {\n    this.colors = colorHelper(this.scheme, 'ordinal', this.innerDomain, this.customColors);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// node_modules/tslint-loader!./src/bar-chart/bar-horizontal-stacked.component.ts","import { Component, Input, Output, EventEmitter, OnInit, OnChanges } from '@angular/core';\nimport { calculateViewDimensions, ViewDimensions } from '../common/view-dimensions.helper';\nimport { colorHelper } from '../utils/color-sets';\nimport { BaseChart } from '../common/base-chart.component';\nimport { tickFormat } from '../common/tick-format.helper';\nimport d3 from '../d3';\n\n@Component({\n  selector: 'bar-horizontal',\n  template: `\n    <chart\n      [legend]=\"legend\"\n      [view]=\"view\"\n      [colors]=\"colors\"\n      [legendData]=\"yDomain\">\n      <svg:g [attr.transform]=\"transform\" class=\"bar chart\">\n        <svg:g xAxis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"true\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\">\n        </svg:g>\n\n        <svg:g yAxis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [tickFormatting]=\"yAxisTickFormatting()\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\">\n        </svg:g>\n\n        <svg:g seriesHorizontal\n          [xScale]=\"xScale\"\n          [yScale]=\"yScale\"\n          [colors]=\"colors\"\n          [series]=\"results\"\n          [dims]=\"dims\"\n          [gradient]=\"gradient\"\n          (clickHandler)=\"click($event)\"\n        />\n      </svg:g>\n    </chart>\n  `\n})\nexport class BarHorizontal extends BaseChart implements OnInit, OnChanges {\n  dims: ViewDimensions;\n  yScale: any;\n  xScale: any;\n  xDomain: any;\n  yDomain: any;\n  transform: string;\n  colors: Function;\n\n  @Input() view;\n  @Input() results;\n  @Input() margin = [10, 20, 70, 100];\n  @Input() scheme;\n  @Input() customColors;\n  @Input() legend = false;\n  @Input() xAxis;\n  @Input() yAxis;\n  @Input() showXAxisLabel;\n  @Input() showYAxisLabel;\n  @Input() xAxisLabel;\n  @Input() yAxisLabel;\n  @Input() gradient: boolean;\n\n  @Output() clickHandler = new EventEmitter();\n\n  ngOnInit() {\n    this.update();\n  }\n\n  ngOnChanges() {\n    this.update();\n  }\n\n  update() {\n    super.update();\n    this.dims = calculateViewDimensions(this.view, this.margin, this.showXAxisLabel, this.showYAxisLabel, this.legend, 9);\n\n    this.xScale = this.getXScale();\n    this.yScale = this.getYScale();\n\n    this.setColors();\n\n    this.transform = `translate(${ this.dims.xOffset } , ${ this.margin[0] })`;\n  }\n\n  getXScale() {\n    this.xDomain = this.getXDomain();\n    return d3.scaleLinear()\n      .range([0, this.dims.width])\n      .domain(this.xDomain);\n  }\n\n  getYScale() {\n    const spacing = 0.2;\n    this.yDomain = this.getYDomain();\n    return d3.scaleBand()\n      .rangeRound([this.dims.height, 0])\n      .paddingInner(spacing)\n      .domain(this.yDomain);\n  }\n\n  getXDomain() {\n    let values = this.results.map(d => d.value);\n    let min = Math.min(0, ...values);\n    let max = Math.max(...values);\n    return [min, max];\n  }\n\n  getYDomain() {\n    return this.results.map(d => d.name);\n  }\n\n  yAxisTickFormatting() {\n    let tickFormatting;\n    if (this.results.query && this.results.query.dimensions.length) {\n      tickFormatting = tickFormat(this.results.query.dimensions[0].field.fieldType, this.results.query.dimensions[0].groupByType.value);\n    }\n    return tickFormatting;\n  }\n\n  click(data) {\n    this.clickHandler.emit(data);\n  }\n\n  setColors() {\n    this.colors = colorHelper(this.scheme, 'ordinal', this.yDomain, this.customColors);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// node_modules/tslint-loader!./src/bar-chart/bar-horizontal.component.ts","import { Component, Input, Output, EventEmitter, OnInit, OnChanges } from '@angular/core';\nimport { calculateViewDimensions, ViewDimensions } from '../common/view-dimensions.helper';\nimport { colorHelper } from '../utils/color-sets';\nimport { BaseChart } from '../common/base-chart.component';\nimport d3 from '../d3';\n\n@Component({\n  selector: 'bar-vertical-2d',\n  template: `\n    <chart\n      [legend]=\"legend\"\n      [view]=\"view\"\n      [colors]=\"colors\"\n      [legendData]=\"innerDomain\">\n      <svg:g [attr.transform]=\"transform\" class=\"bar chart\">\n        <svg:g gridPanelSeries\n          [xScale]=\"groupScale\"\n          [yScale]=\"valueScale\"\n          [data]=\"results\"\n          [dims]=\"dims\"\n          orient=\"vertical\">\n        </svg:g>\n\n        <svg:g xAxis\n          *ngIf=\"xAxis\"\n          [xScale]=\"groupScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\">\n        </svg:g>\n\n        <svg:g yAxis\n          *ngIf=\"yAxis\"\n          [yScale]=\"valueScale\"\n          [dims]=\"dims\"\n          showGridLines=\"true\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\">\n        </svg:g>\n\n        <svg:g\n          *ngFor=\"let group of results\"\n          [attr.transform]=\"groupTransform(group)\">\n          <svg:g seriesVertical\n            [xScale]=\"innerScale\"\n            [yScale]=\"valueScale\"\n            [colors]=\"colors\"\n            [series]=\"group.series\"\n            [dims]=\"dims\"\n            [gradient]=\"gradient\"\n            (clickHandler)=\"click($event)\"\n          />\n        </svg:g>\n      </svg:g>\n    </chart>\n  `\n})\nexport class BarVertical2D extends BaseChart implements OnInit, OnChanges {\n  dims: ViewDimensions;\n  groupDomain: any[];\n  innerDomain: any[];\n  valuesDomain: any[];\n  groupScale: any;\n  innerScale: any;\n  valueScale: any;\n  transform: string;\n  colors: Function;\n\n  @Input() view;\n  @Input() results;\n  @Input() margin = [10, 20, 70, 100];\n  @Input() scheme;\n  @Input() customColors;\n  @Input() legend = false;\n  @Input() xAxis;\n  @Input() yAxis;\n  @Input() showXAxisLabel;\n  @Input() showYAxisLabel;\n  @Input() xAxisLabel;\n  @Input() yAxisLabel;\n  @Input() scaleType = 'ordinal';\n  @Input() gradient: boolean;\n\n  @Output() clickHandler = new EventEmitter();\n\n  ngOnInit() {\n    this.update();\n  }\n\n  ngOnChanges() {\n    this.update();\n  }\n\n  update() {\n    super.update();\n    this.dims = calculateViewDimensions(this.view, this.margin, this.showXAxisLabel, this.showYAxisLabel, this.legend, 9);\n\n    this.groupDomain = this.getGroupDomain();\n    this.innerDomain = this.getInnerDomain();\n    this.valuesDomain = this.getValueDomain();\n\n    this.groupScale = this.getGroupScale();\n    this.innerScale = this.getInnerScale();\n    this.valueScale = this.getValueScale();\n\n    this.setColors();\n\n    this.transform = `translate(${ this.dims.xOffset } , ${ this.margin[0] })`;\n  }\n\n  getGroupScale() {\n    let spacing = 0.2;\n    return d3.scaleBand()\n      .rangeRound([0, this.dims.width])\n      .paddingInner(spacing)\n      .domain(this.groupDomain);\n  }\n\n  getInnerScale() {\n    let spacing = 0.2;\n    return d3.scaleBand()\n      .rangeRound([0, this.groupScale.bandwidth()])\n      .paddingInner(spacing)\n      .domain(this.innerDomain);\n  }\n\n  getValueScale() {\n    return d3.scaleLinear()\n      .range([this.dims.height, 0])\n      .domain(this.valuesDomain);\n  }\n\n  getGroupDomain() {\n    let domain = [];\n    for (let group of this.results) {\n      if (!domain.includes(group.name)) {\n        domain.push(group.name);\n      }\n    }\n\n    return domain;\n  }\n\n  getInnerDomain() {\n    let domain = [];\n    for (let group of this.results) {\n      for (let d of group.series) {\n        if (!domain.includes(d.name)) {\n          domain.push(d.name);\n        }\n      }\n    }\n\n    return domain;\n  }\n\n  getValueDomain() {\n    let domain = [];\n    for (let group of this.results) {\n      for (let d of group.series) {\n        if (!domain.includes(d.value)) {\n          domain.push(d.value);\n        }\n      }\n    }\n\n    let min = Math.min(0, ...domain);\n    let max = Math.max(...domain);\n    return [min, max];\n  }\n\n  groupTransform(group) {\n    return `translate(${this.groupScale(group.name)}, 0)`;\n  }\n\n  click(data) {\n    this.clickHandler.emit(data);\n  }\n\n  setColors() {\n    this.colors = colorHelper(this.scheme, 'ordinal', this.innerDomain, this.customColors);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// node_modules/tslint-loader!./src/bar-chart/bar-vertical-2d.component.ts","import { Component, Input, Output, EventEmitter, OnInit, OnChanges } from '@angular/core';\nimport { calculateViewDimensions, ViewDimensions } from '../common/view-dimensions.helper';\nimport { colorHelper } from '../utils/color-sets';\nimport { BaseChart } from '../common/base-chart.component';\nimport d3 from '../d3';\n\n@Component({\n  selector: 'bar-vertical-normalized',\n  template: `\n    <chart\n      [legend]=\"legend\"\n      [view]=\"view\"\n      [colors]=\"colors\"\n      [legendData]=\"innerDomain\">\n      <svg:g [attr.transform]=\"transform\" class=\"bar chart\">\n        <svg:g xAxis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\">\n        </svg:g>\n\n        <svg:g yAxis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          showGridLines=\"true\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\">\n        </svg:g>\n\n        <svg:g\n          *ngFor=\"let group of results\"\n          [attr.transform]=\"groupTransform(group)\">\n          <svg:g seriesVertical\n            type=\"normalized\"\n            [xScale]=\"xScale\"\n            [yScale]=\"yScale\"\n            [colors]=\"colors\"\n            [series]=\"group.series\"\n            [dims]=\"dims\"\n            [gradient]=\"gradient\"\n            (clickHandler)=\"click($event)\"\n          />\n        </svg:g>\n\n      </svg:g>\n    </chart>\n  `\n})\nexport class BarVerticalNormalized extends BaseChart implements OnInit, OnChanges {\n  dims: ViewDimensions;\n  groupDomain: any[];\n  innerDomain: any[];\n  valueDomain: any[];\n  xScale: any;\n  yScale: any;\n  transform: string;\n  colors: Function;\n\n  @Input() view;\n  @Input() results;\n  @Input() margin = [10, 20, 70, 100];\n  @Input() scheme;\n  @Input() customColors;\n  @Input() legend = false;\n  @Input() xAxis;\n  @Input() yAxis;\n  @Input() showXAxisLabel;\n  @Input() showYAxisLabel;\n  @Input() xAxisLabel;\n  @Input() yAxisLabel;\n  @Input() gradient: boolean;\n\n  @Output() clickHandler = new EventEmitter();\n\n  ngOnInit() {\n    this.update();\n  }\n\n  ngOnChanges() {\n    this.update();\n  }\n\n  update() {\n    super.update();\n    this.dims = calculateViewDimensions(this.view, this.margin, this.showXAxisLabel, this.showYAxisLabel, this.legend, 9);\n\n    this.groupDomain = this.getGroupDomain();\n    this.innerDomain = this.getInnerDomain();\n    this.valueDomain = this.getValueDomain();\n\n    this.xScale = this.getXScale();\n    this.yScale = this.getYScale();\n\n    this.setColors();\n\n    this.transform = `translate(${ this.dims.xOffset } , ${ this.margin[0] })`;\n  }\n\n  getGroupDomain() {\n    let domain = [];\n    for (let group of this.results) {\n      if (!domain.includes(group.name)) {\n        domain.push(group.name);\n      }\n    }\n\n    return domain;\n  }\n\n  getInnerDomain() {\n    let domain = [];\n    for (let group of this.results) {\n      for (let d of group.series) {\n        if (!domain.includes(d.name)) {\n          domain.push(d.name);\n        }\n      }\n    }\n\n    return domain;\n  }\n\n  getValueDomain() {\n    return [0, 100];\n  }\n\n  getXScale() {\n    let spacing = 0.1;\n    return d3.scaleBand()\n      .rangeRound([0, this.dims.width])\n      .paddingInner(spacing)\n      .domain(this.groupDomain);\n  }\n\n  getYScale() {\n    return d3.scaleLinear()\n      .range([this.dims.height, 0])\n      .domain(this.valueDomain);\n  }\n\n  groupTransform(group) {\n    return `translate(${this.xScale(group.name)}, 0)`;\n  }\n\n  click(data) {\n    this.clickHandler.emit(data);\n  }\n\n  setColors() {\n    this.colors = colorHelper(this.scheme, 'ordinal', this.innerDomain, this.customColors);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// node_modules/tslint-loader!./src/bar-chart/bar-vertical-normalized.component.ts","import { Component, Input, Output, EventEmitter, OnInit, OnChanges } from '@angular/core';\nimport { calculateViewDimensions, ViewDimensions } from '../common/view-dimensions.helper';\nimport { colorHelper } from '../utils/color-sets';\nimport { BaseChart } from '../common/base-chart.component';\nimport d3 from '../d3';\n\n@Component({\n  selector: 'bar-vertical-stacked',\n  template: `\n    <chart\n      [legend]=\"legend\"\n      [view]=\"view\"\n      [colors]=\"colors\"\n      [legendData]=\"innerDomain\">\n      <svg:g [attr.transform]=\"transform\" class=\"bar chart\">\n        <svg:g xAxis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\">\n        </svg:g>\n\n        <svg:g yAxis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          showGridLines=\"true\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\">\n        </svg:g>\n\n        <svg:g\n          *ngFor=\"let group of results\"\n          [attr.transform]=\"groupTransform(group)\">\n          <svg:g seriesVertical\n            type=\"stacked\"\n            [xScale]=\"xScale\"\n            [yScale]=\"yScale\"\n            [colors]=\"colors\"\n            [series]=\"group.series\"\n            [dims]=\"dims\"\n            [gradient]=\"gradient\"\n            (clickHandler)=\"click($event)\"\n          />\n        </svg:g>\n\n      </svg:g>\n    </chart>\n  `\n})\nexport class BarVerticalStacked extends BaseChart implements OnInit, OnChanges {\n  dims: ViewDimensions;\n  groupDomain: any[];\n  innerDomain: any[];\n  valueDomain: any[];\n  xScale: any;\n  yScale: any;\n  transform: string;\n  tickFormatting: Function;\n  colors: Function;\n\n  @Input() view;\n  @Input() results;\n  @Input() margin = [10, 20, 70, 100];\n  @Input() scheme;\n  @Input() customColors;\n  @Input() legend = false;\n  @Input() xAxis;\n  @Input() yAxis;\n  @Input() showXAxisLabel;\n  @Input() showYAxisLabel;\n  @Input() xAxisLabel;\n  @Input() yAxisLabel;\n  @Input() gradient: boolean;\n\n  @Output() clickHandler = new EventEmitter();\n\n  ngOnInit() {\n    this.update();\n  }\n\n  ngOnChanges() {\n    this.update();\n  }\n\n  update() {\n    super.update();\n    this.dims = calculateViewDimensions(this.view, this.margin, this.showXAxisLabel, this.showYAxisLabel, this.legend, 9);\n\n    this.groupDomain = this.getGroupDomain();\n    this.innerDomain = this.getInnerDomain();\n    this.valueDomain = this.getValueDomain();\n\n    this.xScale = this.getXScale();\n    this.yScale = this.getYScale();\n\n    this.setColors();\n\n    this.transform = `translate(${ this.dims.xOffset } , ${ this.margin[0] })`;\n  }\n\n  getGroupDomain() {\n    let domain = [];\n    for (let group of this.results) {\n      if (!domain.includes(group.name)) {\n        domain.push(group.name);\n      }\n    }\n\n    return domain;\n  }\n\n  getInnerDomain() {\n    let domain = [];\n    for (let group of this.results) {\n      for (let d of group.series) {\n        if (!domain.includes(d.name)) {\n          domain.push(d.name);\n        }\n      }\n    }\n\n    return domain;\n  }\n\n  getValueDomain() {\n    let domain = [];\n    for (let group of this.results) {\n      let sum = 0;\n      for (let d of group.series) {\n        sum += d.value;\n      }\n\n      domain.push(sum);\n    }\n\n    let min = Math.min(0, ...domain);\n    let max = Math.max(...domain);\n    return [min, max];\n  }\n\n  getXScale() {\n    let spacing = 0.1;\n    return d3.scaleBand()\n      .rangeRound([0, this.dims.width])\n      .paddingInner(spacing)\n      .domain(this.groupDomain);\n  }\n\n  getYScale() {\n    return d3.scaleLinear()\n      .range([this.dims.height, 0])\n      .domain(this.valueDomain);\n\n  }\n\n  groupTransform(group) {\n    return `translate(${this.xScale(group.name)}, 0)`;\n  }\n\n  click(data) {\n    this.clickHandler.emit(data);\n  }\n\n  setColors() {\n    this.colors = colorHelper(this.scheme, 'ordinal', this.innerDomain, this.customColors);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// node_modules/tslint-loader!./src/bar-chart/bar-vertical-stacked.component.ts","import { Component, Input, Output, EventEmitter, OnInit, OnChanges } from '@angular/core';\nimport { calculateViewDimensions, ViewDimensions } from '../common/view-dimensions.helper';\nimport { colorHelper } from '../utils/color-sets';\nimport { BaseChart } from '../common/base-chart.component';\nimport { tickFormat } from '../common/tick-format.helper';\nimport d3 from '../d3';\n\n@Component({\n  selector: 'bar-vertical',\n  template: `\n    <chart\n      [legend]=\"legend\"\n      [view]=\"view\"\n      [colors]=\"colors\"\n      [legendData]=\"xDomain\">\n      <svg:g [attr.transform]=\"transform\" class=\"bar chart\">\n        <svg:g xAxis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [tickFormatting]=\"xAxisTickFormatting()\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\">\n        </svg:g>\n\n        <svg:g yAxis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"true\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\">\n        </svg:g>\n\n        <svg:g seriesVertical\n          [xScale]=\"xScale\"\n          [yScale]=\"yScale\"\n          [colors]=\"colors\"\n          [series]=\"results\"\n          [dims]=\"dims\"\n          [gradient]=\"gradient\"\n          (clickHandler)=\"click($event)\">\n        </svg:g>\n      </svg:g>\n    </chart>\n  `\n})\nexport class BarVertical extends BaseChart implements OnInit, OnChanges {\n  dims: ViewDimensions;\n  xScale: any;\n  yScale: any;\n  xDomain: any;\n  yDomain: any;\n  transform: string;\n  colors: Function;\n\n  @Input() view;\n  @Input() results;\n  @Input() margin = [10, 20, 70, 100];\n  @Input() scheme;\n  @Input() customColors;\n  @Input() legend = false;\n  @Input() xAxis;\n  @Input() yAxis;\n  @Input() showXAxisLabel;\n  @Input() showYAxisLabel;\n  @Input() xAxisLabel;\n  @Input() yAxisLabel;\n  @Input() gradient: boolean;\n\n  @Output() clickHandler = new EventEmitter();\n\n  ngOnInit() {\n    this.update();\n  }\n\n  ngOnChanges() {\n    this.update();\n  }\n\n  update() {\n    super.update();\n    this.dims = calculateViewDimensions(this.view, this.margin, this.showXAxisLabel, this.showYAxisLabel, this.legend, 9);\n\n    this.xScale = this.getXScale();\n    this.yScale = this.getYScale();\n\n    this.setColors();\n\n    this.transform = `translate(${ this.dims.xOffset } , ${ this.margin[0] })`;\n  }\n\n  getXScale() {\n    const spacing = 0.2;\n    this.xDomain = this.getXDomain();\n    return d3.scaleBand()\n      .rangeRound([0, this.dims.width])\n      .paddingInner(spacing)\n      .domain(this.xDomain);\n  }\n\n  getYScale() {\n    this.yDomain = this.getYDomain();\n    return d3.scaleLinear()\n      .range([this.dims.height, 0])\n      .domain(this.yDomain);\n  }\n\n  getXDomain() {\n    return this.results.map(d => d.name);\n  }\n\n  getYDomain() {\n    let values = this.results.map(d => d.value);\n    let min = Math.min(0, ...values);\n    let max = Math.max(...values);\n    return [min, max];\n  }\n\n  xAxisTickFormatting() {\n    let tickFormatting;\n    if(this.results.query && this.results.query.dimensions.length) {\n      tickFormatting = tickFormat(this.results.query.dimensions[0].field.fieldType, this.results.query.dimensions[0].groupByType.value);\n    }\n    return tickFormatting;\n  }\n\n  click(data) {\n    this.clickHandler.emit(data);\n  }\n\n  setColors() {\n    this.colors = colorHelper(this.scheme, 'ordinal', this.xDomain, this.customColors);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// node_modules/tslint-loader!./src/bar-chart/bar-vertical.component.ts","import { Component, Input, Output, EventEmitter, ElementRef, OnInit, OnChanges } from '@angular/core';\nimport ObjectId from '../utils/object-id';\nimport d3 from '../d3';\n\n@Component({\n  selector: 'g[bar]',\n  template: `\n    <svg:defs *ngIf=\"gradient\">\n      <svg:g svgLinearGradient\n        [color]=\"fill\"\n        [orientation]=\"orientation\"\n        [name]=\"gradientId\"\n        [startOpacity]=\"startOpacity\"\n      />\n    </svg:defs>\n    <svg:path\n      class=\"bar\"\n      stroke=\"none\"\n      [attr.d]=\"path\"\n      [attr.fill]=\"gradient ? gradientFill : fill\"\n      [style.cursor]=\"'pointer'\"\n      (click)=\"click()\"\n    />\n  `\n})\nexport class Bar implements OnInit, OnChanges {\n  @Input() fill;\n  @Input() data;\n  @Input() width;\n  @Input() height;\n  @Input() x;\n  @Input() y;\n  @Input() orientation;\n  @Input() roundEdges: boolean = true;\n  @Input() gradient: boolean = false;\n  @Input() offset = 0;\n\n  @Output() clickHandler = new EventEmitter();\n\n  element: any;\n  path: any;\n  gradientId: any;\n  gradientFill: any;\n  startOpacity: any;\n\n  constructor(element: ElementRef) {\n    this.element = element.nativeElement;\n  }\n\n  ngOnInit() {\n    let pageUrl = window.location.href;\n    this.gradientId = 'grad' + ObjectId().toString();\n    this.gradientFill = `url(${pageUrl}#${this.gradientId})`;\n    this.startOpacity = this.getStartOpacity();\n\n    this.loadAnimation();\n  }\n\n  ngOnChanges() {\n    this.update();\n  }\n\n  update() {\n    this.animateToCurrentForm();\n  }\n\n  loadAnimation() {\n    let node = d3.select(this.element).select('.bar');\n    let startingPath = this.getStartingPath();\n    node.attr('d', startingPath);\n\n    this.animateToCurrentForm();\n  }\n\n  animateToCurrentForm() {\n    let node = d3.select(this.element).select('.bar');\n    this.path = this.getPath(); // todo check if defining this.path or local variable path to use below\n\n    node.transition().duration(750)\n      .attr('d', this.path); // todo check if use this.path or use path defined above\n  }\n\n  getStartingPath() {\n    let radius = this.getRadius();\n    let path;\n\n    if (this.roundEdges) {\n      if (this.orientation === 'vertical') {\n        path = this.roundedRect(this.x, this.y + this.height, this.width, 0, radius, true, true, false, false);\n      } else if (this.orientation === 'horizontal') {\n        path = this.roundedRect(this.x, this.y, 0, this.height, radius, false, true, false, true);\n      }\n    } else {\n      if (this.orientation === 'vertical') {\n        path = this.roundedRect(this.x, this.y + this.height, this.width, 0, radius, false, false, false, false);\n      } else if (this.orientation === 'horizontal') {\n        path = this.roundedRect(this.x, this.y, 0, this.height, radius, false, false, false, false);\n      }\n    }\n\n    return path;\n  }\n\n  getPath() {\n    let radius = this.getRadius();\n    let path;\n\n    if (this.roundEdges) {\n      if (this.orientation === 'vertical') {\n        path = this.roundedRect(this.x, this.y, this.width, this.height, radius, true, true, false, false);\n      } else if (this.orientation === 'horizontal') {\n        path = this.roundedRect(this.x, this.y, this.width, this.height, radius, false, true, false, true);\n      }\n    } else {\n      path = this.roundedRect(this.x, this.y, this.width, this.height, radius, false, false, false, false);\n    }\n\n    return path;\n  }\n\n  getRadius() {\n    let radius = 0;\n    if (this.roundEdges && this.height > radius && this.width > radius) {\n      radius = 5;\n    }\n    return radius;\n  }\n\n  getStartOpacity() {\n    if (this.roundEdges) {\n      return 0;\n    } else {\n      return 0.5;\n    }\n  }\n\n  roundedRect(x, y, w, h, r, tl, tr, bl, br) {\n    var retval;\n    retval = \"M\" + (x + r) + \",\" + y;\n    retval += \"h\" + (w - 2 * r);\n    if (tr) {\n      retval += \"a\" + r + \",\" + r + \" 0 0 1 \" + r + \",\" + r;\n    } else {\n      retval += \"h\" + r;\n      retval += \"v\" + r;\n    }\n    retval += \"v\" + (h - 2 * r);\n    if (br) {\n      retval += \"a\" + r + \",\" + r + \" 0 0 1 \" + -r + \",\" + r;\n    } else {\n      retval += \"v\" + r;\n      retval += \"h\" + -r;\n    }\n    retval += \"h\" + (2 * r - w);\n    if (bl) {\n      retval += \"a\" + r + \",\" + r + \" 0 0 1 \" + -r + \",\" + -r;\n    } else {\n      retval += \"h\" + -r;\n      retval += \"v\" + -r;\n    }\n    retval += \"v\" + (2 * r - h);\n    if (tl) {\n      retval += \"a\" + r + \",\" + r + \" 0 0 1 \" + r + \",\" + -r;\n    } else {\n      retval += \"v\" + -r;\n      retval += \"h\" + r;\n    }\n    retval += \"z\";\n    return retval;\n  }\n\n  click() {\n    this.clickHandler.emit(this.data);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// node_modules/tslint-loader!./src/bar-chart/bar.component.ts","import { Component, Input, Output, EventEmitter, OnInit } from '@angular/core';\nimport { calculateViewDimensions, ViewDimensions } from '../common/view-dimensions.helper';\nimport { colorHelper } from '../utils/color-sets';\nimport { BaseChart } from '../common/base-chart.component';\nimport d3 from '../d3';\n\n@Component({\n  selector: 'date-bar',\n  template: `\n    <chart\n      [legend]=\"legend\"\n      [view]=\"view\"\n      [colors]=\"colors\"\n      [legendData]=\"results.series[0]\">\n      <svg:g [attr.transform]=\"transform\" class=\"bar chart\">\n        <svg:g xAxis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [xAxisTickInterval]=\"{unit: 'hour', interval: 2}\">\n        </svg:g>\n\n        <svg:g yAxis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"true\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\">\n        </svg:g>\n\n        <svg:g seriesVertical\n          [xScale]=\"xScale\"\n          [yScale]=\"yScale\"\n          scaleType=\"time\"\n          [colors]=\"colors\"\n          [series]=\"results.series[0]\"\n          [dims]=\"dims\"\n          [gradient]=\"gradient\"\n          (clickHandler)=\"click($event)\"\n        />\n      </svg:g>\n    </chart>\n  `\n})\nexport class DateBar extends BaseChart implements OnInit {\n  dims: ViewDimensions;\n  xScale: any;\n  yScale: any;\n  transform: string;\n  colors: Function;\n\n  @Input() view;\n  @Input() results;\n  @Input() margin = [10, 20, 70, 100];\n  @Input() scheme;\n  @Input() customColors;\n  @Input() legend = false;\n  @Input() xAxis;\n  @Input() yAxis;\n  @Input() showXAxisLabel;\n  @Input() showYAxisLabel;\n  @Input() xAxisLabel;\n  @Input() yAxisLabel;\n  @Input() gradient: boolean;\n\n  @Output() clickHandler = new EventEmitter();\n\n  ngOnInit() {\n    let groupSpacing = 0.2;\n    this.dims = calculateViewDimensions(this.view, this.margin, this.showXAxisLabel, this.showYAxisLabel, this.legend, 9);\n    this.yScale = d3.scaleLinear()\n      .range([this.dims.height, 0])\n      .domain([0, this.results.m0Domain[1]]);\n\n    this.xScale = d3.scaleBand()\n      .rangeRound([0, this.dims.width], groupSpacing)\n      .domain(this.results.d0Domain);\n\n    this.setColors();\n\n    this.transform = `translate(${ this.dims.xOffset } , ${ this.margin[0] })`;\n  }\n\n  click(data) {\n    this.clickHandler.emit(data);\n  }\n\n  setColors() {\n    this.colors = colorHelper(this.scheme, 'ordinal', this.results.d0Domain, this.customColors);\n  }\n\n  update() {\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// node_modules/tslint-loader!./src/bar-chart/date-bar.component.ts","import { Component, Input, Output, EventEmitter, OnInit, OnChanges } from '@angular/core';\n\n@Component({\n  selector: 'g[seriesHorizontal]',\n  template: `\n    <svg:g bar *ngFor=\"let bar of bars\"\n      [width]=\"bar.width\"\n      [height]=\"bar.height\"\n      [x]=\"bar.x\"\n      [y]=\"bar.y\"\n      [fill]=\"bar.color\"\n      [data]=\"bar.data\"\n      [orientation]=\"'horizontal'\"\n      [roundEdges]=\"bar.roundEdges\"\n      (clickHandler)=\"click($event)\"\n      [gradient]=\"gradient\"\n\n      sw-popover\n      [popoverSpacing]=\"15\"\n      [popoverText]=\"bar.tooltipText\"\n      [popoverGroup]=\"'charts'\">\n    </svg:g>\n  `\n})\nexport class SeriesHorizontal implements OnInit, OnChanges {\n  bars: any;\n  x: any;\n  y: any;\n\n  @Input() dims;\n  @Input() type = 'standard';\n  @Input() series;\n  @Input() xScale;\n  @Input() yScale;\n  @Input() colors;\n  @Input() gradient: boolean;\n\n  @Output() clickHandler = new EventEmitter();\n\n  ngOnInit() {\n    this.update();\n  }\n\n  ngOnChanges(changes) {\n    this.update();\n  }\n\n  update() {\n    let d0 = 0;\n    let total;\n    if (this.type === 'normalized') {\n      total = this.series.map(d => d.value).reduce((sum, d) => sum + d);\n    }\n\n    this.bars = this.series.map((d, index) => {\n      let value = d.value;\n      let label = d.name;\n      let roundEdges = this.type === 'standard';\n\n      let bar: any = {\n        value: value,\n        label: label,\n        color: this.colors(label),\n        roundEdges: roundEdges,\n        data: d,\n        tooltipText: `${label}: ${value}`\n      };\n\n      bar.height = this.yScale.bandwidth();\n\n      if (this.type === 'standard') {\n        bar.width = this.xScale(value);\n        bar.x = 0;\n        bar.y = this.yScale(label);\n      } else if (this.type === 'stacked') {\n        let offset0 = d0;\n        let offset1 = offset0 + value;\n        d0 += value;\n\n        bar.width = this.xScale(offset1) - this.xScale(offset0);\n        bar.x = this.xScale(offset0);\n        bar.y = 0;\n      } else if (this.type === 'normalized') {\n        let offset0 = d0;\n        let offset1 = offset0 + value;\n        d0 += value;\n\n        if (total > 0) {\n          offset0 = (offset0 * 100) / total;\n          offset1 = (offset1 * 100) /total;\n        } else {\n          offset0 = 0;\n          offset1 = 0;\n        }\n\n        bar.width = this.xScale(offset1) - this.xScale(offset0);\n        bar.x = this.xScale(offset0);\n        bar.y = 0;\n      }\n\n      return bar;\n    });\n  }\n\n  click(data) {\n    this.clickHandler.emit(data);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// node_modules/tslint-loader!./src/bar-chart/series-horizontal.component.ts","import { Component, Input, Output, EventEmitter, OnInit, OnChanges } from '@angular/core';\nimport * as moment from 'moment';\n\n@Component({\n  selector: 'g[seriesVertical]',\n  template: `\n    <svg:g bar *ngFor=\"let bar of bars\"\n      [width]=\"bar.width\"\n      [height]=\"bar.height\"\n      [x]=\"bar.x\"\n      [y]=\"bar.y\"\n      [fill]=\"bar.color\"\n      [data]=\"bar.data\"\n      [orientation]=\"'vertical'\"\n      [roundEdges]=\"bar.roundEdges\"\n      (clickHandler)=\"click($event)\"\n      [gradient]=\"gradient\"\n\n      sw-popover\n      [popoverSpacing]=\"15\"\n      [popoverText]=\"bar.tooltipText\"\n      [popoverGroup]=\"'charts'\">\n    </svg:g>\n  `\n})\nexport class SeriesVertical implements OnInit, OnChanges {\n  bars: any;\n  x: any;\n  y: any;\n\n  @Input() dims;\n  @Input() type = 'standard';\n  @Input() series;\n  @Input() xScale;\n  @Input() yScale;\n  @Input() colors;\n  @Input() scaleType = 'ordinal';\n  @Input() gradient: boolean;\n\n  @Output() clickHandler = new EventEmitter();\n\n  ngOnInit() {\n    this.update();\n  }\n\n  ngOnChanges(changes) {\n    this.update();\n  }\n\n  update() {\n    let width;\n    if (this.series.length) {\n      if (this.scaleType === 'time') {\n        let count = this.series.array[0].vals[0].label[0].length;\n        let firstDate = this.series.array[0].vals[0].label[0][count - 1];\n        let secondDate = moment(firstDate).add(1, 'hours');\n        width = Math.abs(this.xScale(secondDate) - this.xScale(firstDate)) * 0.8;\n      } else {\n        width = this.xScale.bandwidth();\n      }\n    }\n\n    let d0 = 0;\n    let total;\n    if (this.type === 'normalized') {\n      total = this.series.map(d => d.value).reduce((sum, d) => sum + d);\n    }\n\n    this.bars = this.series.map((d, index) => {\n      let value = d.value;\n      let label = d.name;\n      let roundEdges = this.type === 'standard';\n\n      let bar: any = {\n        value: value,\n        label: label,\n        color: this.colors(label),\n        roundEdges: roundEdges,\n        data: d,\n        width: width,\n        tooltipText: `${label}: ${value}`,\n        height: 0,\n        x: 0,\n        y: 0\n      };\n\n      if (this.type === 'standard') {\n        bar.height = this.dims.height - this.yScale(value);\n        bar.x = this.xScale(label);\n        bar.y = this.yScale(value);\n      } else if (this.type === 'stacked') {\n        let offset0 = d0;\n        let offset1 = offset0 + value;\n        d0 += value;\n\n        bar.height = this.yScale(offset0) - this.yScale(offset1);\n        bar.x = 0;\n        bar.y = this.yScale(offset1);\n      } else if (this.type === 'normalized') {\n        let offset0 = d0;\n        let offset1 = offset0 + value;\n        d0 += value;\n\n        if (total > 0) {\n          offset0 = (offset0 * 100) / total;\n          offset1 = (offset1 * 100) /total;\n        } else {\n          offset0 = 0;\n          offset1 = 0;\n        }\n\n        bar.height = this.yScale(offset0) - this.yScale(offset1);\n        bar.x = 0;\n        bar.y = this.yScale(offset1);\n      }\n\n      return bar;\n    });\n  }\n\n  click(data) {\n    this.clickHandler.emit(data);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// node_modules/tslint-loader!./src/bar-chart/series-vertical.component.ts","import { Component, Input, Output, EventEmitter, ElementRef, OnInit, OnChanges } from '@angular/core';\nimport ObjectId from \"../utils/object-id\";\nimport d3 from '../d3';\n\n@Component({\n  selector: 'g[area]',\n  template: `\n    <svg:defs *ngIf=\"gradient\">\n      <svg:g svgLinearGradient\n        [color]=\"fill\"\n        orientation=\"vertical\"\n        [name]=\"gradientId\"\n        [startOpacity]=\"startOpacity\"\n        [endOpacity]=\"endOpacity\"\n      />\n    </svg:defs>\n    <svg:path\n      class=\"area\"\n      [attr.d]=\"path\"\n      [attr.fill]=\"gradient ? gradientFill : fill\"\n      [attr.opacity]=\"opacity\"\n    />\n  `\n})\nexport class Area implements OnInit, OnChanges {\n  element: HTMLElement;\n  gradientId: string;\n  gradientFill: string;\n\n  @Input() data;\n  @Input() path;\n  @Input() startingPath;\n  @Input() fill;\n  @Input() opacity = 1;\n  @Input() startOpacity = 0.5;\n  @Input() endOpacity = 1;\n  @Input() activeLabel;\n  @Input() gradient: boolean = false;\n\n  @Output() clickHandler = new EventEmitter();\n\n  constructor(element: ElementRef) {\n    this.element = element.nativeElement;\n  }\n\n  ngOnInit() {\n    this.update();\n  }\n\n  ngOnChanges() {\n    this.update();\n  }\n\n  update() {\n\n        let pageUrl = window.location.href;\n        this.gradientId = 'grad' + ObjectId().toString();\n        this.gradientFill = `url(${pageUrl}#${this.gradientId})`;\n\n        this.loadAnimation();\n  }\n\n  loadAnimation() {\n    let node = d3.select(this.element).select('.area');\n\n    node\n      .attr('d', this.startingPath);\n\n    this.animateToCurrentForm();\n  }\n\n  animateToCurrentForm() {\n    let node = d3.select(this.element).select('.area');\n\n    node.transition().duration(750)\n      .attr('d', this.path);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// node_modules/tslint-loader!./src/common/area.component.ts","import {NgModule} from \"@angular/core\";\nimport {AxisLabel} from \"./axis-label.component\";\nimport {XAxis} from \"./x-axis.component\";\nimport {XAxisTicks} from \"./x-axis-ticks.component\";\nimport {YAxis} from \"./y-axis.component\";\nimport {YAxisTicks} from \"./y-axis-ticks.component\";\nimport {BrowserModule} from \"@angular/platform-browser\";\n\n@NgModule({\n  imports: [BrowserModule],\n  declarations: [AxisLabel, XAxis, XAxisTicks, YAxis, YAxisTicks],\n  exports: [AxisLabel, XAxis, XAxisTicks, YAxis, YAxisTicks]\n})\nexport class AxesModule {}\n\n\n\n// WEBPACK FOOTER //\n// node_modules/tslint-loader!./src/common/axes/axes-module.component.ts","import { Component, Input, OnInit, OnChanges } from '@angular/core';\n\n@Component({\n  selector: 'g[axisLabel]',\n  template: `\n    <svg:text\n      [attr.stroke-width]=\"strokeWidth\"\n      [attr.text-anchor]=\"textAnchor\"\n      [attr.x]=\"x\"\n      [attr.y]=\"y\"\n      [attr.text-anchor]=\"textAnchor\"\n      [attr.transform]=\"transform\">\n      {{label}}\n    </svg:text>\n  `\n})\nexport class AxisLabel implements OnInit, OnChanges {\n  @Input() orient;\n  @Input() label;\n  @Input() offset;\n  @Input() width;\n  @Input() height;\n\n  x: any;\n  y: any;\n  transform: any;\n  strokeWidth: any;\n  textAnchor: any;\n\n  ngOnInit() {\n    this.update();\n  }\n\n  ngOnChanges() {\n    this.update();\n  }\n\n  update() {\n    this.strokeWidth = '0.01';\n    this.textAnchor = 'middle';\n    this.transform = '';\n\n    switch (this.orient) {\n      case 'top':\n        this.y = this.offset;\n        this.x = this.width / 2;\n        break;\n      case 'bottom':\n        this.y = this.offset;\n        this.x = this.width / 2;\n        break;\n      case 'left':\n        this.y = -this.offset;\n        this.x = -this.height / 2;\n        this.transform = \"rotate(270)\";\n        break;\n      case 'right':\n        this.y = this.offset;\n        this.x = -this.height / 2;\n        this.transform = \"rotate(270)\";\n        break;\n    }\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// node_modules/tslint-loader!./src/common/axes/axis-label.component.ts","import { Component, Input, OnInit, OnChanges } from '@angular/core';\nimport { trimLabel } from '../trim-label.helper';\n\n@Component({\n  selector: 'g[xAxisTicks]',\n  template: `\n    <svg:g *ngFor=\"let tick of getTicks()\" class=\"tick\"\n      [attr.transform]=\"tickTransform(tick)\">\n      <title>{{tickFormat(tick)}}</title>\n      <svg:text\n        stroke-width=\"0.01\"\n        [attr.text-anchor]=\"textAnchor\"\n        [attr.transform]=\"textTransform\"\n        [style.font-size]=\"'12px'\">\n        {{trimLabel(tickFormat(tick))}}\n      </svg:text>\n\n      <svg:g\n        *ngIf=\"showGridLines\"\n        [attr.transform]=\"gridLineTransform()\">\n\n        <svg:line\n          class=\"gridline-path gridline-path-vertical gridline-path-shadow\"\n          [attr.y1]=\"-gridLineHeight\"\n          y2=\"0\" />\n        <svg:line\n          class=\"gridline-path gridline-path-vertical\"\n          x1=\"1\"\n          x2=\"1\"\n          [attr.y1]=\"-gridLineHeight\"\n          y2=\"0\" />\n      </svg:g>\n    </svg:g>\n  `\n})\nexport class XAxisTicks implements OnInit, OnChanges {\n  @Input() scale;\n  @Input() orient;\n  @Input() tickArguments = [5];\n  @Input() tickStroke = '#ccc';\n  @Input() tickFormatting;\n  @Input() showGridLines = false;\n  @Input() gridLineHeight;\n\n  verticalSpacing: any;\n  rotateLabels: any;\n  innerTickSize: any;\n  outerTickSize: any;\n  tickPadding: any;\n  textAnchor: any;\n  maxTicksLength: any;\n  trimLabel: any;\n  adjustedScale: any;\n  tickValues: any;\n  textTransform: any;\n  ticks: any;\n  tickFormat: any;\n\n  constructor() {\n    Object.assign(this, {\n      innerTickSize: 6,\n      outerTickSize: 6,\n      tickPadding: 3,\n      rotateLabels: false,\n      verticalSpacing: 20,\n      textAnchor: 'middle',\n      maxTicksLength: 0,\n      trimLabel: trimLabel\n    });\n  }\n\n  ngOnInit() {\n    this.update();\n  }\n\n  ngOnChanges() {\n    this.update();\n  }\n\n  update() {\n    var scale = this.scale;\n    this.ticks = this.getTicks();\n\n    if (this.tickFormatting) {\n      this.tickFormat = this.tickFormatting;\n    } else if (scale.tickFormat) {\n      this.tickFormat = scale.tickFormat.apply(scale, this.tickArguments);\n    } else {\n      this.tickFormat = function(d) {\n        return d;\n      };\n    }\n\n    for (var i = 0; i < this.ticks.length; i++) {\n      if (typeof this.getTicks()[i] === 'string' && this.getTicks()[i].length > this.maxTicksLength) {\n        this.maxTicksLength = this.getTicks()[i].length;\n      }\n    }\n\n    this.adjustedScale = scale.bandwidth ? function(d) {\n      return scale(d) + scale.bandwidth() * 0.5;\n    } : scale;\n\n    this.textTransform = '';\n    if (this.rotateLabels) {\n      this.textTransform = 'rotate(-30)';\n      this.textAnchor = 'end';\n      this.verticalSpacing = 10;\n    }\n  }\n\n  getTicks() {\n    let ticks;\n\n    if (this.tickValues) {\n      ticks = this.tickValues;\n    } else if (this.scale.ticks) {\n      ticks = this.scale.ticks.apply(this.scale, this.tickArguments);\n    } else {\n      ticks = this.scale.domain();\n    }\n    return ticks;\n  }\n\n  tickTransform(tick) {\n    return 'translate(' + this.adjustedScale(tick) + ',' + this.verticalSpacing + ')';\n  }\n\n  gridLineTransform() {\n    return `translate(0,${-this.verticalSpacing - 5})`;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// node_modules/tslint-loader!./src/common/axes/x-axis-ticks.component.ts","import { Component, Input, OnInit, OnChanges } from '@angular/core';\n// import d3 from '../../d3';\n\n@Component({\n  selector: 'g[xAxis]',\n  template: `\n    <svg:g\n      [attr.class]=\"xAxisClassName\"\n      [attr.transform]=\"transform\">\n      <svg:g xAxisTicks\n        [tickFormatting]=\"tickFormatting\"\n        [tickArguments]=\"tickArguments\"\n        [tickStroke]=\"tickStroke\"\n        [scale]=\"xScale\"\n        [orient]=\"xOrient\"\n        [showGridLines]=\"showGridLines\"\n        [gridLineHeight]=\"dims.height\"\n      />\n\n      <svg:g axisLabel\n        *ngIf=\"showLabel\"\n        [label]=\"labelText\"\n        [offset]=\"80\"\n        [orient]=\"'bottom'\"\n        [height]=\"dims.height\"\n        [width]=\"dims.width\">\n      </svg:g>\n    </svg:g>\n  `\n})\nexport class XAxis implements OnInit, OnChanges {\n  @Input() xScale;\n  @Input() dims;\n  @Input() tickFormatting;\n  @Input() showGridLines = false;\n  @Input() showLabel;\n  @Input() labelText;\n  @Input() xAxisTickInterval;\n\n  xAxisTickCount: any;\n  xAxisClassName: any;\n  xOrient: any;\n  tickArguments: any;\n  xAxisOffset: any;\n  transform: any;\n\n  constructor() {\n    Object.assign(this, {\n      xAxisClassName: 'x axis',\n      xOrient: 'bottom',\n      fill: 'none',\n      stroke: 'none',\n      tickStroke: '#ccc',\n      strokeWidth: 'none',\n      xAxisOffset: 5,\n    });\n  }\n\n  ngOnInit() {\n    this.update();\n  }\n\n  ngOnChanges() {\n    this.update();\n  }\n\n  update() {\n    this.transform = `translate(0,${this.xAxisOffset + this.dims.height})`;\n\n    if (typeof this.xAxisTickCount !== 'undefined') {\n      this.tickArguments = [this.xAxisTickCount];\n    }\n\n    if (typeof this.xAxisTickInterval !== 'undefined') {\n      // todo we need to change this, because the function names have changed: https://github.com/d3/d3/blob/master/CHANGES.md#time-intervals-d3-time\n      // this.tickArguments = [d3.time[this.xAxisTickInterval.unit], this.xAxisTickInterval.interval];\n    }\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// node_modules/tslint-loader!./src/common/axes/x-axis.component.ts","import { Component, Input, OnInit, OnChanges } from '@angular/core';\nimport { trimLabel } from '../trim-label.helper';\n\n@Component({\n  selector: 'g[yAxisTicks]',\n  template: `\n    <svg:g *ngFor=\"let tick of ticks\" class=\"tick\"\n      [attr.transform]=\"transform(tick)\" >\n      <title>{{tickFormat(tick)}}</title>\n      <svg:text\n        stroke-width=\"0.01\"\n        [attr.dy]=\"dy\"\n        [attr.x]=\"x1\"\n        [attr.y]=\"y1\"\n        [attr.text-anchor]=\"textAnchor\"\n\n        [style.font-size]=\"'12px'\">\n        {{trimLabel(tickFormat(tick))}}\n      </svg:text>\n\n      <svg:g\n        *ngIf=\"showGridLines\"\n        [attr.transform]=\"gridLineTransform()\">\n\n        <svg:line\n          class=\"gridline-path gridline-path-horizontal gridline-path-shadow\"\n          x1=\"0\"\n          [attr.x2]=\"gridLineWidth\" />\n        <svg:line\n          class=\"gridline-path gridline-path-horizontal\"\n          x1=\"0\"\n          [attr.x2]=\"gridLineWidth\"\n          y1=\"1\"\n          y2=\"1\" />\n      </svg:g>\n    </svg:g>\n  `\n})\nexport class YAxisTicks implements OnInit, OnChanges {\n  @Input() scale;\n  @Input() orient;\n  @Input() tickArguments = [5];\n  @Input() tickValues;\n  @Input() tickStroke = '#ccc';\n  @Input() tickFormatting;\n  @Input() showGridLines = false;\n  @Input() gridLineHeight;\n\n  innerTickSize: any;\n  tickPadding: any;\n  tickSpacing: any;\n  verticalSpacing: any;\n  textAnchor: any;\n  dy: any;\n  x1: any;\n  x2: any;\n  y1: any;\n  y2: any;\n  adjustedScale: any;\n  transform: any;\n  tickFormat: any;\n  ticks: any;\n\n  constructor() {\n    Object.assign(this, {\n      innerTickSize: 6,\n      outerTickSize: 6,\n      tickPadding: 3,\n      rotateLabels: false,\n      verticalSpacing: 20,\n      textAnchor: 'middle',\n      trimLabel: trimLabel\n    });\n  }\n\n  ngOnInit() {\n    this.update();\n  }\n\n  ngOnChanges() {\n    this.update();\n  }\n\n  update() {\n    var scale;\n\n    var sign = this.orient === 'top' || this.orient === 'right' ? -1 : 1;\n    this.tickSpacing = Math.max(this.innerTickSize, 0) + this.tickPadding;\n\n    scale = this.scale;\n    this.ticks = this.getTicks();\n\n    if (this.tickFormatting) {\n      this.tickFormat = this.tickFormatting;\n    } else if (scale.tickFormat) {\n      this.tickFormat = scale.tickFormat.apply(scale, this.tickArguments);\n    } else {\n      this.tickFormat = function(d) {\n        return d;\n      };\n    }\n\n    this.adjustedScale = scale.bandwidth ? function(d) {\n      return scale(d) + scale.bandwidth() * 0.5;\n    } : scale;\n\n    switch (this.orient) {\n      case \"top\":\n        this.transform = function(tick) {\n          return \"translate(\" + this.adjustedScale(tick) + \",0)\";\n        };\n        this.textAnchor = \"middle\";\n        this.y2 = this.innerTickSize * sign;\n        this.y1 = this.tickSpacing * sign;\n        this.dy = sign < 0 ? \"0em\" : \".71em\";\n        break;\n      case \"bottom\":\n        this.transform = function(tick) {\n          return \"translate(\" + this.adjustedScale(tick) + \",0)\";\n        };\n        this.textAnchor = \"middle\";\n        this.y2 = this.innerTickSize * sign;\n        this.y1 = this.tickSpacing * sign;\n        this.dy = sign < 0 ? \"0em\" : \".71em\";\n        break;\n      case \"left\":\n        this.transform = function(tick) {\n          return \"translate(0,\" + this.adjustedScale(tick) + \")\";\n        };\n        this.textAnchor = \"end\";\n        this.x2 = this.innerTickSize * -sign;\n        this.x1 = this.tickSpacing * -sign;\n        this.dy = \".32em\";\n        break;\n      case \"right\":\n        this.transform = function(tick) {\n          return \"translate(0,\" + this.adjustedScale(tick) + \")\";\n        };\n        this.textAnchor = \"start\";\n        this.x2 = this.innerTickSize * -sign;\n        this.x1 = this.tickSpacing * -sign;\n        this.dy = \".32em\";\n        break;\n    }\n  }\n\n  getTicks() {\n    let ticks;\n\n    if (this.tickValues) {\n      ticks = this.tickValues;\n    } else if (this.scale.ticks) {\n      ticks = this.scale.ticks.apply(this.scale, this.tickArguments);\n    } else {\n      ticks = this.scale.domain();\n    }\n    return ticks;\n  }\n\n  tickTransform(tick) {\n    return 'translate(' + this.adjustedScale(tick) + ',' + this.verticalSpacing + ')';\n  }\n\n  gridLineTransform() {\n    return `translate(0,${this.verticalSpacing})`;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// node_modules/tslint-loader!./src/common/axes/y-axis-ticks.component.ts","import { Component, Input, OnInit, OnChanges } from '@angular/core';\n// import d3 from '../../d3';\n\n@Component({\n  selector: 'g[yAxis]',\n  template: `\n    <svg:g\n      [attr.class]=\"yAxisClassName\"\n      [attr.transform]=\"transform\">\n      <svg:g yAxisTicks\n        [tickFormatting]=\"tickFormatting\"\n        [tickArguments]=\"tickArguments\"\n        [tickStroke]=\"tickStroke\"\n        [scale]=\"yScale\"\n        [orient]=\"yOrient\"\n        [showGridLines]=\"showGridLines\"\n        [gridLineHeight]=\"dims.height\"\n      />\n\n      <svg:g axisLabel\n        *ngIf=\"showLabel\"\n        [label]=\"labelText\"\n        [offset]=\"80\"\n        [orient]=\"'left'\"\n        [height]=\"dims.height\"\n        [width]=\"dims.width\">\n      </svg:g>\n    </svg:g>\n  `\n})\nexport class YAxis implements OnInit, OnChanges {\n  @Input() yScale;\n  @Input() dims;\n  @Input() tickFormatting;\n  @Input() showGridLines = false;\n  @Input() showLabel;\n  @Input() labelText;\n  @Input() yAxisTickInterval;\n\n  yAxisTickCount: any;\n  tickArguments: any;\n  offset: any;\n  transform: any;\n  yAxisOffset: any;\n  yOrient: any;\n\n  constructor() {\n    Object.assign(this, {\n      yAxisClassName: 'y axis',\n      yOrient: 'left',\n      fill: 'none',\n      stroke: '#ccc',\n      tickStroke: '#ccc',\n      strokeWidth: '1',\n      yAxisOffset: -5,\n    });\n  }\n\n  ngOnInit() {\n    this.update();\n  }\n\n  ngOnChanges() {\n    this.update();\n  }\n\n  update() {\n    this.offset = this.yAxisOffset;\n    if (this.yOrient === 'right') {\n      this.transform = `translate(${this.offset + this.dims.width} , 0)`;\n    } else {\n      this.transform = `translate(${this.offset} , 0)`;\n    }\n\n    if (typeof this.yAxisTickCount !== 'undefined') {\n      this.tickArguments = [this.yAxisTickCount];\n    }\n\n    if (typeof this.yAxisTickInterval !== 'undefined') {\n      // todo we need to change this, because the function names have changed: https://github.com/d3/d3/blob/master/CHANGES.md#time-intervals-d3-time\n      // this.tickArguments = [d3.time[this.yAxisTickInterval.unit], this.yAxisTickInterval.interval];\n    }\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// node_modules/tslint-loader!./src/common/axes/y-axis.component.ts","import { Component, Input, OnInit, OnChanges } from '@angular/core';\n\n@Component({\n  selector: 'chart',\n  template: `\n    <svg\n      class=\"a2d3\"\n      [attr.width]=\"view[0] * chartWidth / 12.0\"\n      [attr.height]=\"view[1]\">\n\n      <ng-content></ng-content>\n    </svg>\n\n    <scale-legend\n      *ngIf=\"legend && legendType === 'scaleLegend'\"\n      class=\"legend\"\n      [valueRange]=\"data\"\n      [colors]=\"legendData\"\n      [height]=\"view[1]\">\n    </scale-legend>\n\n    <legend\n      *ngIf=\"legend && legendType === 'legend'\"\n      class=\"legend\"\n      [data]=\"legendData\"\n      [title]=\"legendTitle\"\n      [colors]=\"colors\"\n      [height]=\"view[1]\">\n    </legend>\n`\n})\nexport class Chart implements OnInit, OnChanges {\n  @Input() view;\n  @Input() legend = false;\n  @Input() data;\n  @Input() legendData;\n  @Input() legendTitle = 'Legend';\n  @Input() colors;\n\n  chartWidth: any;\n  title: any;\n  legendWidth: any;\n  legendType: any;\n\n  ngOnInit() {\n    this.update();\n  }\n\n  ngOnChanges() {\n    this.update();\n  }\n\n  update() {\n    this.legendWidth = 0;\n\n    if (this.legend) {\n      this.legendType = this.getLegendType();\n\n      if (this.legendType === 'scaleLegend') {\n        this.legendWidth = 1;\n      } else {\n        this.legendWidth = 3;\n      }\n    }\n\n    this.chartWidth = 12 - this.legendWidth;\n  }\n\n  getLegendType() {\n    if (typeof this.legendData === 'function') {\n      return 'scaleLegend';\n    } else {\n      return 'legend';\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// node_modules/tslint-loader!./src/common/charts/chart.component.ts","import { Component, Input, Output, EventEmitter, OnInit, OnChanges } from '@angular/core';\nimport moment = require(\"moment\");\nimport ObjectId from \"../utils/object-id\";\n\n@Component({\n  selector: 'g[circleSeries]',\n  template: `\n    <svg:g *ngFor=\"let circle of circles\">\n      <svg:rect\n        [attr.x]=\"circle.cx - circle.radius\"\n        [attr.y]=\"circle.cy\"\n        [attr.width]=\"circle.radius * 2\"\n        [attr.height]=\"circle.height\"\n        [attr.fill]=\"color\"\n        class=\"tooltip-bar\"\n        style=\"pointerEvents: 'none'; opacity: 0;\"\n      />\n\n      <svg:g circle\n        [attr.class]=\"className\"\n        [cx]=\"circle.cx\"\n        [cy]=\"circle.cy\"\n        [r]=\"circle.radius\"\n        [fill]=\"color\"\n        [stroke]=\"strokeColor\"\n        [pointerEvents]=\"circle.value.value === 0 ? 'none': 'all'\"\n        [data]=\"circle.value\"\n        [classNames]=\"circle.classNames\"\n        (clickHandler)=\"click($event)\"\n      />\n    </svg:g>\n  `\n})\nexport class CircleSeries implements OnInit, OnChanges {\n  areaPath: any;\n  circles: any[];\n\n  @Input() data;\n  @Input() type = 'standard';\n  @Input() xScale;\n  @Input() yScale;\n  @Input() color;\n  @Input() strokeColor;\n  @Input() scaleType;\n\n  @Output() clickHandler = new EventEmitter();\n\n  ngOnInit() {\n    this.update();\n  }\n\n  ngOnChanges() {\n    this.update();\n  }\n\n  update() {\n    // TODO: do this filtering before passing the data down here\n    // if (this.scaleType === 'time') {\n    //   this.data = this.data.filter(d => {\n    //     return d.vals[0].label[0][0] !== 'No Value' && d.vals[0].label[0][0] !== 'Other'\n    //       && d.vals[0].label[0][1] !== 'No Value' && d.vals[0].label[0][1] !== 'Other';\n    //   });\n    // }\n\n    this.circles = this.getCircles();\n  }\n\n  getCircles() {\n    return this.data.series.map((d, i) => {\n      let value = d.value;\n      let label = d.name;\n\n\n      if (value) {\n        let cx;\n        if (this.scaleType === 'time') {\n          cx = this.xScale(moment(label).toDate());\n        } else if (this.scaleType === 'linear') {\n          cx = this.xScale(Number(label));\n        } else {\n          cx = this.xScale(label);\n        }\n\n        let cy = this.yScale(this.type === 'standard' ? value : d.d1);\n        let radius = 5;\n        let height = this.yScale.range()[0] - cy;\n\n        // TODO: figure out if this is needed here\n        let gradientIdRect = 'grad' + ObjectId().toString();\n\n        return {\n          classNames: [`circle-data-${i}`],\n          value: value,\n          label: label,\n          cx: cx,\n          cy: cy,\n          radius: radius,\n          height: height,\n          gradientIdRect: gradientIdRect\n        };\n      }\n    }).filter((circle) => circle !== undefined);\n  }\n\n  click(data) {\n    this.clickHandler.emit(data);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// node_modules/tslint-loader!./src/common/circle-series.component.ts","import { Component, Input, Output, EventEmitter, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'g[circle]',\n  template: `\n    <svg:circle\n      [attr.cx]=\"cx\"\n      [attr.cy]=\"cy\"\n      [attr.r]=\"r\"\n      [attr.fill]=\"fill\"\n      [attr.stroke]=\"stroke\"\n      [attr.opacity]=\"circleOpacity\"\n      [attr.class]=\"classNames\"\n      [attr.pointer-events]=\"pointerEvents\"\n      (click)=\"click()\"\n    />\n  `\n})\nexport class Circle implements OnInit {\n  @Input() cx;\n  @Input() cy;\n  @Input() r;\n  @Input() fill;\n  @Input() stroke;\n  @Input() data;\n  @Input() classNames;\n  @Input() circleOpacity;\n  @Input() pointerEvents;\n\n  @Output() clickHandler = new EventEmitter();\n\n  ngOnInit() {\n    this.classNames = this.classNames.join(' ') + 'circle';\n  }\n\n  click() {\n    this.clickHandler.emit(this.data);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// node_modules/tslint-loader!./src/common/circle.component.ts","import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'g[gridPanelSeries]',\n  template: `\n    <svg:g gridPanel *ngFor=\"let gridPanel of gridPanels\"\n      [height]=\"gridPanel.height\"\n      [width]=\"gridPanel.width\"\n      [x]=\"gridPanel.x\"\n      [y]=\"gridPanel.y\"\n      [fill]=\"gridPanel.color\">\n    </svg:g>\n  `\n})\nexport class GridPanelSeries implements OnInit {\n  gridPanels: any[];\n\n  @Input() data;\n  @Input() dims;\n  @Input() xScale;\n  @Input() yScale;\n  @Input() orient;\n\n  ngOnInit() {\n    this.gridPanels = this.getGridPanels();\n  }\n\n  getGridPanels() {\n    return this.data.map((d, i) => {\n      let color = 'rgba(255,255,255,0.02)';\n      let offset, width, height, x, y;\n\n      if (this.orient === 'vertical') {\n        let position = this.xScale(d.name);\n        let positionIndex = this.xScale.range().indexOf(position);\n        if (positionIndex % 2 === 1) {\n          color = 'rgba(255,255,255,0)';\n        }\n        offset = this.xScale.range()[0] / 2;\n        width = this.xScale.bandwidth() + 2 * offset;\n        height = this.dims.height;\n        x = this.xScale(d.name) - offset;\n        y = 0;\n      } else if (this.orient === 'horizontal') {\n        let position = this.yScale(d.name);\n        let positionIndex = this.yScale.range().indexOf(position);\n        if (positionIndex % 2 === 1) {\n          color = 'rgba(255,255,255,0)';\n        }\n        offset = this.yScale.range()[0] / 2;\n        width = this.dims.width;\n        height = this.yScale.bandwidth() + 2 * offset;\n        x = 0;\n        y = this.yScale(d.name) - offset;\n      }\n\n      return {\n        name: d.name,\n        color: color,\n        offset: offset,\n        height: height,\n        width: width,\n        x: x,\n        y: y\n      };\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// node_modules/tslint-loader!./src/common/grid-panel-series.component.ts","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'g[gridPanel]',\n  template: `\n    <svg:rect\n      [attr.height]=\"height\"\n      [attr.width]=\"width\"\n      [attr.x]=\"x\"\n      [attr.y]=\"y\"\n      stroke=\"none\"\n      [attr.fill]=\"fill\"\n      class=\"gridpanel\"\n    />\n  `\n})\nexport class GridPanel {\n  @Input() path;\n  @Input() fill;\n  @Input() width;\n  @Input() height;\n  @Input() x;\n  @Input() y;\n}\n\n\n\n// WEBPACK FOOTER //\n// node_modules/tslint-loader!./src/common/grid-panel.component.ts","import { Component, Input, OnInit, OnChanges } from '@angular/core';\nimport { trimLabel } from './trim-label.helper';\n\n@Component({\n  selector: 'legend',\n  template: `\n    <div >\n      <header class=\"legend-title\"\n        style=\"white-space: nowrap; overflow: hidden;\">\n        <span class=\"legend-icon incon-eye-1\"></span>\n        <span class=\"legend-title-text\">{{title}}</span>\n      </header>\n\n      <div class=\"legend-wrap\">\n        <ul class=\"legend-labels\" style=\"white-space: nowrap;\">\n          <li *ngFor=\"let legendItem of legendItems\" [class]=\"legendItem.className\">\n            <span\n              [title]=\"legendItem.label\"\n              class=\"legend-label-color\"\n              [style.background-color]=\"colors(legendItem.label)\">\n            </span>\n\n            <span [title]=\"legendItem.label\" class=\"legend-label-text\">\n              {{legendItem.trimmedLabel}}\n            </span>\n\n          </li>\n        </ul>\n      </div>\n    </div>\n  `\n})\nexport class Legend implements OnInit, OnChanges {\n  @Input() data;\n  @Input() title;\n  @Input() colors;\n  @Input() height;\n\n  legendItems: any;\n\n  ngOnInit() {\n    this.update();\n  }\n\n  ngOnChanges() {\n    this.update();\n  }\n\n  update() {\n    this.legendItems = this.getLegendItems();\n  }\n\n  getLegendItems() {\n    return this.data.map((label, index) => {\n      return {\n        className: 'legend-label',\n        label: label,\n        trimmedLabel: trimLabel(label) || '(empty)',\n        backgroundColor: this.colors(label)\n      };\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// node_modules/tslint-loader!./src/common/legend.component.ts","/**\n * Registering to deal with popovers\n */\nexport class PopoverRegistry {\n  private static _instance: PopoverRegistry = new PopoverRegistry();\n\n  popovers: any;\n  instance: any;\n\n  constructor() {\n    \"ngInject\";\n\n    if (PopoverRegistry._instance) {\n      throw new Error(\"Error: Instantiation failed: Use PopoverRegistry.getInstance() instead of new.\");\n    }\n    PopoverRegistry._instance = this;\n\n    this.popovers = {};\n\n    setInterval(this.cleanUp.bind(this), 1000);\n  }\n\n  public static getInstance() {\n    return PopoverRegistry._instance;\n  }\n\n  add(id, object) {\n    this.popovers[id] = object;\n  }\n\n  find(id) {\n    return this.popovers[id];\n  }\n\n  remove(id) {\n    if (!this.popovers[id]) {\n      return;\n    }\n\n    if (this.popovers[id].popoverScope) {\n      this.popovers[id].popoverScope.$destroy();\n    }\n\n    if (this.popovers[id].popover) {\n      this.popovers[id].popover.remove();\n    }\n\n    delete this.popovers[id];\n  }\n\n  removeGroup(group, currentId) {\n    let ids = Object.keys(this.popovers);\n    for (let id of ids) {\n\n      let popoverOb = this.popovers[id];\n      if (!popoverOb) {\n        continue;\n      }\n\n      if (id === currentId) {\n        return;\n      }\n\n      if (popoverOb.group && popoverOb.group === group) {\n        popoverOb.popover.removeClass('sw-popover-animation');\n        setTimeout(() => {\n          popoverOb.popover.remove();\n          if (popoverOb.popoverScope) {\n            popoverOb.popoverScope.$destroy();\n          }\n          delete this.popovers[id];\n        }, 50);\n      }\n    }\n  }\n\n  /**\n   * Deletes orphan popovers whose elements are no longer present\n   * in the document\n   */\n  cleanUp() {\n    let ids = Object.keys(this.popovers);\n    for (let id of ids) {\n      let element = this.popovers[id].element;\n      if (element && element[0]) {\n        element = element[0];\n      }\n      if (element && !document.contains(element)) {\n        this.remove(id);\n      }\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// node_modules/tslint-loader!./src/common/popover/popover-registry.service.ts","let caretOffset = 6;\n\nfunction verticalPosition(elDimensions, popoverDimensions, alignment) {\n  let result;\n  if (alignment === 'top') {\n    result = elDimensions.top - caretOffset;\n  }\n  if (alignment === 'bottom') {\n    result = elDimensions.top + elDimensions.height - popoverDimensions.height + caretOffset;\n  }\n  if (alignment === 'center') {\n    result = elDimensions.top + elDimensions.height / 2 - popoverDimensions.height / 2;\n  }\n  return result;\n}\n\nfunction horizontalPosition(elDimensions, popoverDimensions, alignment) {\n  let result;\n  if (alignment === 'left') {\n    return elDimensions.left - caretOffset;\n  }\n  if (alignment === 'right') {\n    return elDimensions.left + elDimensions.width - popoverDimensions.width + caretOffset;\n  }\n  if (alignment === 'center') {\n    return elDimensions.left + elDimensions.width / 2 - popoverDimensions.width / 2;\n  }\n  return result;\n}\n\n/**\n * Position helper for the popover directive.\n */\nexport class PositionHelper {\n  static calculateVerticalAlignment(elDimensions, popoverDimensions, alignment) {\n    let result = verticalPosition(elDimensions, popoverDimensions, alignment);\n\n    if (result + popoverDimensions.height > window.innerHeight) {\n      result = window.innerHeight - popoverDimensions.height;\n    }\n\n    return result;\n  }\n\n  static calculateVerticalCaret(elDimensions, popoverDimensions, caretDimensions, alignment) {\n    let result;\n    if (alignment === 'top') {\n      result = elDimensions.height / 2 - caretDimensions.height / 2 - 1 + caretOffset;\n    }\n    if (alignment === 'bottom') {\n      result = popoverDimensions.height - elDimensions.height / 2 - caretDimensions.height / 2 - 1 - caretOffset;\n    }\n    if (alignment === 'center') {\n      result = popoverDimensions.height / 2 - caretDimensions.height / 2 - 1;\n    }\n\n    let popoverPosition = verticalPosition(elDimensions, popoverDimensions, alignment);\n    if (popoverPosition + popoverDimensions.height > window.innerHeight) {\n      result += (popoverPosition + popoverDimensions.height - window.innerHeight);\n    }\n\n    return result;\n  }\n\n  static calculateHorizontalAlignment(elDimensions, popoverDimensions, alignment) {\n    let result = horizontalPosition(elDimensions, popoverDimensions, alignment);\n\n    if (result + popoverDimensions.width > window.innerWidth) {\n      result = window.innerWidth - popoverDimensions.width;\n    }\n\n    return result;\n  }\n\n  static calculateHorizontalCaret(elDimensions, popoverDimensions, caretDimensions, alignment) {\n    let result;\n    if (alignment === 'left') {\n      result = elDimensions.width / 2 - caretDimensions.width / 2 - 1 + caretOffset;\n    }\n    if (alignment === 'right') {\n      result = popoverDimensions.width - elDimensions.width / 2 - caretDimensions.width / 2 - 1 - caretOffset;\n    }\n    if (alignment === 'center') {\n      result = popoverDimensions.width / 2 - caretDimensions.width / 2 - 1;\n    }\n\n    let popoverPosition = horizontalPosition(elDimensions, popoverDimensions, alignment);\n    if (popoverPosition + popoverDimensions.width > window.innerWidth) {\n      result += (popoverPosition + popoverDimensions.width - window.innerWidth);\n    }\n\n    return result;\n  }\n\n  /**\n   * Checks if the element's position should be flipped\n   */\n  static shouldFlip(elDimensions, popoverDimensions, placement, alignment, spacing) {\n    let flip = false;\n    if (placement === 'right') {\n      let popoverPosition = horizontalPosition(elDimensions, popoverDimensions, alignment);\n      if (popoverPosition + popoverDimensions.width + spacing > window.innerWidth) {\n        flip = true;\n      }\n    }\n\n    if (placement === 'left') {\n      let popoverPosition = horizontalPosition(elDimensions, popoverDimensions, alignment);\n      if (popoverPosition - spacing < 0) {\n        flip = true;\n      }\n    }\n\n    if (placement === 'top') {\n      let popoverPosition = verticalPosition(elDimensions, popoverDimensions, alignment);\n      if (popoverPosition - spacing < 0) {\n        flip = true;\n      }\n    }\n\n    if (placement === 'bottom') {\n      let popoverPosition = verticalPosition(elDimensions, popoverDimensions, alignment);\n      if (popoverPosition + popoverDimensions.height + spacing > window.innerHeight) {\n        flip = true;\n      }\n    }\n\n    return flip;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// node_modules/tslint-loader!./src/common/popover/position.helper.ts","import { Directive, Input, ElementRef, Renderer, ViewChild, ViewContainerRef, OnInit, OnDestroy } from '@angular/core';\nimport { PositionHelper } from './position.helper';\nimport { PopoverRegistry } from './popover-registry.service';\nimport './popover.scss';\n\n@Directive({\n  selector: '[sw-popover]'\n})\nexport class Popover implements OnInit, OnDestroy {\n  element: ElementRef;\n  renderer: Renderer;\n  mouseEnterListener: Function;\n  mouseLeaveListener: Function;\n  exitTimeout: any;\n  options: any;\n  popoverCssClass: any;\n  popoverPlain: any;\n  popoverId: any;\n  popover: any;\n  popoverRegistry: PopoverRegistry;\n\n  @ViewChild('parent', {read: ViewContainerRef})\n  parent: ViewContainerRef;\n\n  @Input() popoverText;\n  @Input() popoverTemplate;\n  @Input() popoverPlacement = 'top';\n  @Input() popoverAlignment = 'center';\n  @Input() popoverGroup;\n  @Input() popoverSpacing = 0;\n  @Input() showCaret = true;\n\n  constructor(element: ElementRef, renderer: Renderer) {\n    this.element = element.nativeElement;\n    this.renderer = renderer;\n\n    // attach exit and enter events to element\n    if (this.mouseEnterListener) {\n      this.mouseEnterListener();\n    }\n    this.mouseEnterListener = this.renderer.listen(this.element, 'mouseenter', this.display.bind(this));\n\n    if (this.mouseLeaveListener) {\n      this.mouseLeaveListener();\n    }\n    this.mouseLeaveListener = this.renderer.listen(this.element, 'mouseleave', this.mouseOut.bind(this));\n  }\n\n  ngOnInit() {\n    this.popoverRegistry = PopoverRegistry.getInstance();\n  }\n\n  mouseOut() {\n    this.exitTimeout = setTimeout(this.remove.bind(this), 200);\n  };\n\n  /**\n   * Displays the popover on the page\n   */\n  display() {\n    // TODO: Do not use angular.element\n\n    // this.options = {\n    //   text: this.popoverText,\n    //   cssClass: this.popoverCssClass,\n    //   template: this.popoverTemplate,\n    //   plain: this.toBoolean(this.popoverPlain || false),\n    //   placement: this.popoverPlacement || 'right',\n    //   alignment: this.popoverAlignment  || 'center',\n    //   group: this.popoverGroup,\n    //   spacing: parseInt(this.popoverSpacing.toString()) || 0,\n    //   showCaret: this.toBoolean(this.popoverPlain || true)\n    // };\n    //\n    // // Cancel exit timeout\n    // clearTimeout(this.exitTimeout);\n    // if (this.popoverId){\n    //   var elm = angular.element(`#sw-${this.popoverId}`);\n    //   if (this.popover && elm.length) return;\n    // }\n    //\n    // // remove other popovers from the same group\n    // if (this.options.group){\n    //   this.popoverRegistry.removeGroup(this.options.group, this.popoverId);\n    // }\n    //\n    // if (this.options.text && !this.options.template){\n    //   this.popoverId = Date.now();\n    //   this.popover = angular.element(`\n    //     <div\n    //       class=\"sw-popover sw-popover-text sw-popover-${this.options.placement} ${this.options.cssClass}\"\n    //       id=\"sw-${this.popoverId}\">\n    //     </div>\n    //   `);\n    //\n    //   this.popover.html(this.options.text);\n    //   angular.element(document.body).append(this.popover);\n    //   this.checkFlip(this.element, this.popover, this.options);\n    //   this.positionPopover(this.element, this.popover, this.options);\n    //   this.popoverRegistry.add(this.popoverId, {element: this.element, popover: this.popover, group: this.options.group});\n    //\n    // }\n  };\n\n  /**\n   * Removes the popover from the registry and page\n   */\n  remove() {\n    if (this.popover) {\n      this.popover.remove();\n    }\n\n    this.popoverRegistry.remove(this.popoverId);\n    this.popover = undefined;\n  };\n\n  /**\n   * Checks if the popover's position should be flipped on the other side of\n   * the element and flips it\n   */\n  checkFlip(triggerElement, popover, options) {\n    var elDimensions = triggerElement.getBoundingClientRect(),\n        popoverDimensions = popover[0].getBoundingClientRect();\n\n    if (PositionHelper.shouldFlip(elDimensions, popoverDimensions, options.placement, options.alignment, options.spacing)) {\n      if (options.placement === 'right') {\n        options.placement = 'left';\n      } else if (options.placement === 'left') {\n        options.placement = 'right';\n      } else if (options.placement === 'top') {\n        options.placement = 'bottom';\n      } else if (options.placement === 'bottom') {\n        options.placement = 'top';\n      }\n    }\n  };\n\n  /**\n   * Positions the popover\n   * @param  {object} triggerElement\n   * @param  {object} popover\n   * @param  {object} options\n   */\n  positionPopover(triggerElement, popover, options) {\n    var elDimensions = triggerElement.getBoundingClientRect(),\n        popoverDimensions = popover[0].getBoundingClientRect(),\n        top, left;\n\n    if (options.placement === 'right') {\n      left = elDimensions.left + elDimensions.width + options.spacing;\n      top = PositionHelper.calculateVerticalAlignment(elDimensions,\n        popoverDimensions, options.alignment);\n    }\n    if (options.placement === 'left') {\n      left = elDimensions.left - popoverDimensions.width - options.spacing;\n      top = PositionHelper.calculateVerticalAlignment(elDimensions,\n        popoverDimensions, options.alignment);\n    }\n    if (options.placement === 'top') {\n      top = elDimensions.top - popoverDimensions.height - options.spacing;\n      left = PositionHelper.calculateHorizontalAlignment(elDimensions,\n        popoverDimensions, options.alignment);\n    }\n    if (options.placement === 'bottom') {\n      top = elDimensions.top + elDimensions.height + options.spacing;\n      left = PositionHelper.calculateHorizontalAlignment(elDimensions,\n        popoverDimensions, options.alignment);\n    }\n\n    popover.css({\n      top: top + 'px',\n      left: left + 'px'\n    });\n\n    if(this.options.showCaret) {\n      this.addCaret(this.popover, elDimensions, popoverDimensions);\n    }\n\n    this.popover.addClass('sw-popover-animation');\n  };\n\n  /**\n   * Adds a caret and positions it relatively to the popover\n   * @param {object} popoverEl\n   * @param {object} elDimensions\n   * @param {object} popoverDimensions\n   */\n  addCaret(popoverEl, elDimensions, popoverDimensions) {\n    // TODO: do not use angular.element\n    // if (!popoverEl){\n    //   return;\n    // }\n    // var caret = angular.element(`<span class=\"popover-caret caret-${this.options.placement}\"></span>`);\n    // popoverEl.append(caret);\n    // var caretDimensions = caret[0].getBoundingClientRect();\n    //\n    // var left, top;\n    // if (this.options.placement === 'right'){\n    //   left = -6;\n    //   top =PositionHelper.calculateVerticalCaret(elDimensions,\n    //     popoverDimensions, caretDimensions, this.options.alignment);\n    // }\n    // if (this.options.placement === 'left'){\n    //   left = popoverDimensions.width - 2;\n    //   top = PositionHelper.calculateVerticalCaret(elDimensions,\n    //     popoverDimensions, caretDimensions, this.options.alignment);\n    // }\n    // if (this.options.placement === 'top'){\n    //   top = popoverDimensions.height - 5;\n    //   left = PositionHelper.calculateHorizontalCaret(elDimensions,\n    //     popoverDimensions, caretDimensions, this.options.alignment);\n    // }\n    //\n    // if (this.options.placement === 'bottom'){\n    //   top = -8;\n    //   left = PositionHelper.calculateHorizontalCaret(elDimensions,\n    //     popoverDimensions, caretDimensions, this.options.alignment);\n    // }\n    //\n    // caret.css({\n    //   top: top + 'px',\n    //   left: left + 'px'\n    // });\n  };\n\n  /**\n   * Determines a boolean given a value\n   * @param  {object} value\n   * @return {boolean}\n   */\n  toBoolean(value) {\n    if (value && value.length !== 0) {\n      var v = (\"\" + value).toLowerCase();\n      value = (v === 'true');\n    } else {\n      value = false;\n    }\n    return value;\n  };\n\n  ngOnDestroy() {\n    if (this.mouseEnterListener) {\n      this.mouseEnterListener();\n    }\n\n    if (this.mouseLeaveListener) {\n      this.mouseLeaveListener();\n    }\n\n    this.remove();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// node_modules/tslint-loader!./src/common/popover/sw-popover.component.ts","import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'scale-legend',\n  template: `\n    <div>\n      <div\n        style=\"padding: 10px 0px; width: 30px; text-align: center;\"\n        [style.height]=\"(height - 40) + 'px'\">\n\n        <div>\n          <span>{{valueRange[0]}}</span>\n        </div>\n\n        <div class=\"legend-wrap\"\n          style=\"height: 100%; width: 100%; border-radius: 5px;\"\n          [style.background]=\"gradient\">\n        </div>\n\n        <div>\n          <span>{{valueRange[1].toFixed()}}</span>\n        </div>\n      </div>\n    </div>\n  `\n})\nexport class ScaleLegend implements OnInit {\n  @Input() valueRange;\n  @Input() colors;\n  @Input() height;\n\n  gradient: any;\n\n  ngOnInit() {\n    let gradientValues = this.gradientString(this.colors.range(), this.colors.domain());\n    this.gradient = `linear-gradient(to bottom, ${gradientValues})`;\n  }\n\n  /**\n   * Generates the string used in the gradient stylesheet properties\n   * @param  {array} colors array of colors\n   * @param  {array} splits array of splits on a scale of (0, 1)\n   * @return {string}\n   */\n  gradientString(colors, splits) {\n    // add the 100%\n    splits.push(1);\n    let pairs = [];\n    colors.forEach((c, i) => {\n      pairs.push(`${c} ${Math.round(splits[i] * 100)}%`);\n    });\n\n    return pairs.join(', ');\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// node_modules/tslint-loader!./src/common/scale-legend.component.ts","import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'g[svgLinearGradient]',\n  template: `\n    <svg:linearGradient\n      [id]=\"name\"\n      [attr.x1]=\"x1\"\n      [attr.y1]=\"y1\"\n      [attr.x2]=\"x2\"\n      [attr.y2]=\"y2\">\n      <svg:stop\n        [attr.offset]=\"'0%'\"\n        [style.stop-color]=\"color\"\n        [style.stop-opacity]=\"startOpacity\"\n      />\n      <svg:stop\n        [attr.offset]=\"'100%'\"\n        [style.stop-color]=\"color\"\n        [style.stop-opacity]=\"endOpacity\"\n      />\n    </svg:linearGradient>\n  `\n})\nexport class SvgLinearGradient implements OnInit {\n  @Input() orientation = 'vertical';\n  @Input() color;\n  @Input() name;\n  @Input() startOpacity;\n  @Input() endOpacity = 1;\n\n  x1: any;\n  x2: any;\n  y1: any;\n  y2: any;\n\n  ngOnInit() {\n    this.x1 = '0%';\n    this.x2 = '0%';\n    this.y1 = '0%';\n    this.y2 = '0%';\n\n    // unused variables\n    // let startOpacity = this.startOpacity;\n    // let endOpacity = this.endOpacity;\n\n    if (this.orientation === 'horizontal') {\n      this.x2 = '100%';\n    } else if (this.orientation === 'vertical') {\n      this.y1 = '100%';\n    }\n\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// node_modules/tslint-loader!./src/common/svg-linear-gradient.component.ts","import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'g[svgRadialGradient]',\n  template: `\n    <svg:radialGradient\n      [id]=\"name\"\n      [attr.cx]=\"cx\"\n      [attr.cy]=\"cy\"\n      [attr.r]=\"r\"\n      gradient-units=\"userSpaceOnUse\">\n      <svg:stop\n        offset=\"0%\"\n        [style.stop-color]=\"color\"\n        [style.stop-opacity]=\"startOpacity\"\n      />\n      <svg:stop\n        offset=\"100%\"\n        [style.stop-color]=\"color\"\n        [style.stop-opacity]=\"endOpacity\"\n      />\n    </svg:radialGradient>\n  `\n})\nexport class SvgRadialGradient implements OnInit {\n  cx: number;\n  cy: number;\n  r: string;\n\n  @Input() color;\n  @Input() name;\n  @Input() startOpacity;\n  @Input() endOpacity = 1;\n\n  ngOnInit() {\n    this.cx = 0;\n    this.cy = 0;\n    this.r = \"30%\";\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// node_modules/tslint-loader!./src/common/svg-radial-gradient.component.ts","import { Component, Input, Output, EventEmitter, ElementRef, OnInit } from '@angular/core';\nimport moment = require(\"moment\");\nimport { throttle } from \"../utils/throttle\";\nimport d3 from '../d3';\n\n@Component({\n  selector: 'g[timeline]',\n  template: `\n    <svg:g\n      [attr.transform]=\"transform\">\n\n      <svg:g xAxis\n        [xScale]=\"xScale\"\n        [dims]=\"dims\"\n        [showGridLines]=\"showGridLines\"\n      />\n\n      <svg:g class=\"x brush\">\n      </svg:g>\n\n    </svg:g>\n  `\n})\nexport class Timeline implements OnInit {\n  element: HTMLElement;\n  dims: any;\n  xScale: any;\n  brush: any;\n  transform: string;\n\n  @Input() view;\n  @Input() state;\n  @Input() results;\n  @Input() scheme;\n  @Input() margin = [10, 20, 70, 20];\n  @Input() customColors;\n  @Input() legend;\n  @Input() miniChart;\n  @Input() autoScale;\n\n  @Output() clickHandler = new EventEmitter();\n  @Output() updateXDomain = new EventEmitter();\n\n  constructor(element: ElementRef) {\n    this.element = element.nativeElement;\n  }\n\n  ngOnInit() {\n    this.dims = this.calculateDims();\n    let offsetY = this.view[1] - 150;\n    let results = this.results;\n\n    results.series[0] = results.series[0].sort((a, b) => {\n      return results.d0Domain.indexOf(a.vals[0].label[0][0]) - results.d0Domain.indexOf(b.vals[0].label[0][0]);\n    });\n\n    let yScale = d3.scaleLinear()\n      .range([this.dims.height, 0])\n      .domain(results.m0Domain);\n\n    if (!this.autoScale) {\n      yScale.domain([0, results.m0Domain[1]]);\n    }\n\n    this.xScale = this.calculateXScale();\n    this.transform = `translate(${ this.margin[3] } , ${ this.margin[0] + offsetY })`;\n\n    this.addBrush();\n  }\n\n  addBrush() {\n    if (this.state.brush) {\n      this.brush = this.state.brush;\n    } else {\n      this.brush = d3.brushX(this.state.xScale) // todo need to check if it's working, haven't used brush with d3 v4 yet\n        .on(\"brush\", throttle(() => {\n          var newDomain = this.brush.empty() ? this.state.xScale.domain() : this.brush.extent();\n          this.updateXDomain.emit(newDomain);\n        }, 100));\n\n      // todo fix missing function\n      // this.setState({\n      //   brush: this.brush\n      // });\n    }\n\n    let height = 150 - this.margin[0] - this.margin[2];\n    let width = this.view[0];\n    if (this.legend) {\n      width = width * 9 / 12.0;\n    }\n    width = width - this.margin[1] - this.margin[3];\n\n    d3.select(this.element)\n      .select('.brush')\n      .call(this.brush)\n      .selectAll(\"rect\")\n      .attr(\"y\", 0)\n      .attr(\"height\", height);\n\n    d3.select(this.element)\n      .selectAll('.background')\n      .attr('width', width);\n  }\n\n  calculateXScale() {\n    let xScale;\n    let domain = d3.extent(this.results.d0Domain, function(d) {\n      return moment(d).toDate();\n    });\n    if (this.state.xScale) {\n      xScale = this.state.xScale;\n\n    } else {\n      xScale = d3.scaleTime()\n        .range([0, this.dims.width])\n        .domain(domain);\n    }\n\n    if (xScale.domain() !== domain) {\n      xScale.domain(domain);\n    }\n\n    return xScale;\n  }\n\n  calculateDims() {\n    let width = this.view[0];\n    let height = 150;\n\n    if (this.legend) {\n      width = width * 9 / 12.0;\n    }\n\n    let dims = {\n      width: width - this.margin[1] - this.margin[3],\n      height: height - this.margin[0] - this.margin[2]\n    };\n    return dims;\n  }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// node_modules/tslint-loader!./src/common/timeline.component.ts","import { Component, Input, Output, EventEmitter, OnInit, OnChanges } from '@angular/core';\n\n@Component({\n  selector: 'g[heatMapCellSeries]',\n  template: `\n    <svg:g heatMapCell *ngFor=\"let c of cells\"\n      [x]=\"c.x\"\n      [y]=\"c.y\"\n      [width]=\"c.width\"\n      [height]=\"c.height\"\n      [fill]=\"c.fill\"\n      [data]=\"c.data\"\n      (clickHandler)=\"click($event)\"\n      sw-popover\n      [popoverSpacing]=\"15\"\n      [popoverText]=\"c.tooltipText\"\n      [popoverGroup]=\"'charts'\"\n      [gradient]=\"gradient\"\n    />\n  `\n})\nexport class HeatCellSeries implements OnInit, OnChanges {\n  cells: any[];\n\n  @Input() data;\n  @Input() colors;\n  @Input() xScale;\n  @Input() yScale;\n  @Input() gradient: boolean;\n\n  @Output() clickHandler = new EventEmitter();\n\n  ngOnInit() {\n    this.update();\n  }\n\n  ngOnChanges() {\n    this.update();\n  }\n\n  update() {\n    this.cells = this.getCells();\n  }\n\n  getCells() {\n    let cells = [];\n    this.data.map((row) => {\n      row.series.map((cell) => {\n        let value = cell.value;\n        let label = cell.name;\n        cells.push({\n          x: this.xScale(row.name),\n          y: this.yScale(cell.name),\n          width: this.xScale.bandwidth(),\n          height: this.yScale.bandwidth(),\n          fill: this.colors(value),\n          data: value,\n          tooltipText: `${label}: ${value}`\n        });\n      });\n    });\n\n    return cells;\n  }\n\n  click(data) {\n    this.clickHandler.emit(data);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// node_modules/tslint-loader!./src/heat-map/heat-map-cell-series.component.ts","import { Component, Input, Output, EventEmitter, ElementRef, OnInit } from '@angular/core';\nimport ObjectId from \"../utils/object-id\";\nimport d3 from '../d3';\n\n@Component({\n  selector: 'g[heatMapCell]',\n  template: `\n    <svg:g [attr.transform]=\"transform\" class=\"cell\">\n      <defs *ngIf=\"gradient\">\n        <svg:g svgLinearGradient\n          [color]=\"fill\"\n          orientation=\"vertical\"\n          [name]=\"gradientId\"\n          [startOpacity]=\"startOpacity\"\n        />\n      </defs>\n\n      <svg:rect\n        [attr.fill]=\"gradient ? gradientUrl : fill\"\n        rx=\"3\"\n        [attr.width]=\"width\"\n        [attr.height]=\"height\"\n        class=\"cell\"\n        style=\"cursor: pointer\"\n        (click)=\"click()\"\n      />\n\n    </svg:g>\n  `\n})\nexport class HeatMapCell implements OnInit {\n  element: HTMLElement;\n  transform: string;\n  activeRange: any[];\n  startOpacity: number;\n  gradientId: string;\n  gradientUrl: string;\n\n  @Input() fill;\n  @Input() x;\n  @Input() y;\n  @Input() width;\n  @Input() height;\n  @Input() data;\n  @Input() label;\n  @Input() gradient: boolean = false;\n\n  @Output() clickHandler = new EventEmitter();\n\n  constructor(element: ElementRef) {\n    this.element = element.nativeElement;\n  }\n\n  ngOnInit() {\n    this.transform = `translate(${this.x} , ${this.y})`;\n\n    // let value = this.data.value; // unused variable\n    // let range = this.activeRange; // unused variable\n\n    let pageUrl = window.location.href;\n    this.startOpacity = 0.3;\n    this.gradientId = 'grad' + ObjectId().toString();\n    this.gradientUrl = `url(${pageUrl}#${this.gradientId})`;\n\n    this.loadAnimation();\n  }\n\n  loadAnimation() {\n    let node = d3.select(this.element).select('.cell');\n\n    node\n      .attr('opacity', 0);\n\n    this.animateToCurrentForm();\n  }\n\n  animateToCurrentForm() {\n    let node = d3.select(this.element).select('.cell');\n\n    node.transition().duration(750)\n      .attr('opacity', 1);\n  }\n\n  click() {\n    this.clickHandler.emit(this.data);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// node_modules/tslint-loader!./src/heat-map/heat-map-cell.component.ts","import { Component, Input, Output, EventEmitter, OnInit, OnChanges } from '@angular/core';\nimport d3 from '../d3';\nimport { BaseChart } from '../common/base-chart.component';\nimport { calculateViewDimensions, ViewDimensions } from '../common/view-dimensions.helper';\nimport { generateColorScale, colorHelper } from '../utils/color-sets';\n\n@Component({\n  selector: 'heat-map',\n  template: `\n    <chart\n      [legend]=\"false\"\n      [legendData]=\"colorScale\"\n      [data]=\"results.m0Domain\"\n      [view]=\"view\">\n      <svg:g [attr.transform]=\"transform\" class=\"numbercard\">\n\n        <svg:g xAxis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\">\n        </svg:g>\n\n        <svg:g yAxis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\">\n        </svg:g>\n\n        <svg:rect *ngFor=\"let rect of rects\"\n          [attr.x]=\"rect.x\"\n          [attr.y]=\"rect.y\"\n          [attr.rx]=\"rect.rx\"\n          [attr.width]=\"rect.width\"\n          [attr.height]=\"rect.height\"\n          [attr.fill]=\"rect.fill\"\n        />\n\n        <svg:g heatMapCellSeries\n          [xScale]=\"xScale\"\n          [yScale]=\"yScale\"\n          [colors]=\"colors\"\n          [data]=\"results\"\n          [gradient]=\"gradient\"\n          (clickHandler)=\"click($event)\"\n        />\n      </svg:g>\n    </chart>\n  `\n})\nexport class HeatMap extends BaseChart implements OnInit, OnChanges {\n  dims: ViewDimensions;\n  xDomain: any[];\n  yDomain: any[];\n  valueDomain: any[];\n  xScale: any;\n  yScale: any;\n  color: any;\n  colors: Function;\n  colorScale: any;\n  transform: string;\n  rects: any[];\n\n  @Input() view;\n  @Input() results;\n  @Input() margin = [10, 20, 70, 100];\n  @Input() scheme;\n  @Input() customColors;\n  @Input() legend;\n  @Input() xAxis;\n  @Input() yAxis;\n  @Input() showXAxisLabel;\n  @Input() showYAxisLabel;\n  @Input() xAxisLabel;\n  @Input() yAxisLabel;\n  @Input() gradient: boolean;\n\n  @Output() clickHandler = new EventEmitter();\n\n  ngOnInit() {\n    this.update();\n  }\n\n  ngOnChanges() {\n    this.update();\n  }\n\n  update() {\n    super.update();\n    this.dims = calculateViewDimensions(this.view, this.margin, this.showXAxisLabel, this.showYAxisLabel, this.legend, 11);\n\n    this.xDomain = this.getXDomain();\n    this.yDomain = this.getYDomain();\n    this.valueDomain = this.getValueDomain();\n\n    this.xScale = this.getXScale();\n    this.yScale = this.getYScale();\n\n    this.setColors();\n    this.transform = `translate(${ this.dims.xOffset } , ${ this.margin[0] })`;\n\n    this.rects = this.getRects();\n  }\n\n  getXDomain() {\n    let domain = [];\n    for (let group of this.results) {\n      if (!domain.includes(group.name)) {\n        domain.push(group.name);\n      }\n    }\n\n    return domain;\n  }\n\n  getYDomain() {\n    let domain = [];\n    for (let group of this.results) {\n      for (let d of group.series) {\n        if (!domain.includes(d.name)) {\n          domain.push(d.name);\n        }\n      }\n    }\n\n    return domain;\n  }\n\n  getValueDomain() {\n    let domain = [];\n    for (let group of this.results) {\n      for (let d of group.series) {\n        if (!domain.includes(d.value)) {\n          domain.push(d.value);\n        }\n      }\n    }\n\n    let min = Math.min(0, ...domain);\n    let max = Math.max(...domain);\n    return [min, max];\n  }\n\n  getXScale() {\n    return d3.scaleBand()\n      .rangeRound([0, this.dims.width])\n      .paddingInner(0.1)\n      .domain(this.xDomain);\n  }\n\n  getYScale() {\n    return d3.scaleBand()\n      .rangeRound([this.dims.height, 0])\n      .paddingInner(0.1)\n      .domain(this.yDomain);\n  }\n\n  getRects() {\n    let rects = [];\n\n    this.xDomain.map((xVal) => {\n      this.yDomain.map((yVal) => {\n        rects.push({\n          x: this.xScale(xVal),\n          y: this.yScale(yVal),\n          rx: 3,\n          width: this.xScale.bandwidth(),\n          height: this.yScale.bandwidth(),\n          fill: 'rgba(200,200,200,0.03)'\n        });\n      });\n    });\n\n    return rects;\n  }\n\n  click(data) {\n    this.clickHandler.emit(data);\n  }\n\n  setColors() {\n    this.colors = colorHelper(this.scheme, 'linear', this.valueDomain);\n    this.colorScale = generateColorScale(this.scheme, 'linear', this.valueDomain);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// node_modules/tslint-loader!./src/heat-map/heat-map.component.ts","import {NgModule} from \"@angular/core\";\nimport {CommonModule} from \"../common/common.module\";\nimport {HeatMapCell} from \"./heat-map-cell.component\";\nimport {HeatCellSeries} from \"./heat-map-cell-series.component\";\nimport {HeatMap} from \"./heat-map.component\";\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [\n    HeatMapCell,\n    HeatCellSeries,\n    HeatMap\n  ],\n  exports: [\n    HeatMapCell,\n    HeatCellSeries,\n    HeatMap\n  ]\n})\nexport class HeatMapModule {}\n\n\n\n// WEBPACK FOOTER //\n// node_modules/tslint-loader!./src/heat-map/heat-map.module.ts","import { Component, Input, Output, EventEmitter, OnInit } from '@angular/core';\nimport { calculateViewDimensions, ViewDimensions } from '../common/view-dimensions.helper';\nimport { colorHelper } from '../utils/color-sets';\nimport { BaseChart } from '../common/base-chart.component';\nimport moment = require(\"moment\");\nimport ObjectId from \"../utils/object-id\";\nimport d3 from '../d3';\n\n@Component({\n  selector: 'line-chart-2d',\n  template: `\n    <chart\n      [legend]=\"legend\"\n      [view]=\"view\"\n      [colors]=\"colors\"\n      [legendData]=\"results.legend\">\n\n      <svg:defs>\n        <svg:clipPath id=\"clipPathId\">\n          <svg:rect\n            [attr.width]=\"dims.width + 10\"\n            [attr.height]=\"dims.height + 10\"\n            [attr.transform]=\"'translate(-5, -5)'\"/>\n        </svg:clipPath>\n      </svg:defs>\n\n      <svg:g [attr.transform]=\"transform\" class=\"line chart\">\n        <svg:g xAxis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"true\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\">\n        </svg:g>\n\n        <svg:g yAxis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"true\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\">\n        </svg:g>\n\n        <svg:g [attr.clip-path]=\"clipPath\">\n\n          <svg:g *ngFor=\"let series of results.series\">\n            <svg:g lineSeries\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [color]=\"colors(series.name)\"\n              [data]=\"series.array\"\n              [scaleType]=\"scaleType\"\n            />\n          </svg:g>\n\n          <svg:rect\n            class=\"tooltip-area\"\n            [attr.width]=\"dims.width + 10\"\n            [attr.height]=\"dims.height + 10\"\n            x=\"-5\"\n            y=\"-5\"\n            style=\"fill: rgb(255, 0, 0); opacity: 0; cursor: 'auto';\"\n          />\n\n          <svg:g *ngFor=\"let series of results.series\">\n            <svg:g circleSeries\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [color]=\"colors(series.name)\"\n              [strokeColor]=\"colors(series.name)\"\n              [data]=\"series.array\"\n              [scaleType]=\"scaleType\"\n              (clickHandler)=\"click($event)\"\n            />\n          </svg:g>\n\n        </svg:g>\n      </svg:g>\n\n      <svg:g timeline\n        *ngIf=\"timeline && scaleType === 'time'\"\n        [results]=\"results\"\n        [view]=\"view\"\n        [scheme]=\"scheme\"\n        [customColors]=\"customColors\"\n        [legend]=\"legend\">\n      </svg:g>\n    </chart>\n  `\n})\nexport class LineChart2D extends BaseChart implements OnInit {\n  dims: ViewDimensions;\n  scaleType: string;\n  xScale: any;\n  yScale: any;\n  transform: string;\n  clipPath: string;\n  colors: Function;\n\n  @Input() view;\n  @Input() xDomain;\n  @Input() results;\n  @Input() margin = [10, 20, 70, 70];\n  @Input() scheme;\n  @Input() customColors;\n  @Input() legend = false;\n  @Input() xAxis;\n  @Input() yAxis;\n  @Input() showXAxisLabel;\n  @Input() showYAxisLabel;\n  @Input() xAxisLabel;\n  @Input() yAxisLabel;\n  @Input() autoScale;\n  @Input() timeline;\n\n  @Output() clickHandler = new EventEmitter();\n\n  ngOnInit() {\n    this.dims = calculateViewDimensions(this.view, this.margin, this.showXAxisLabel, this.showYAxisLabel, this.legend, 9);\n\n    if (this.timeline) {\n      this.dims.height -= 150;\n    }\n\n    if (this.results.query && this.results.query.dimensions[0].field.fieldType === 'date' && this.results.query.dimensions[0].groupByType.value === 'groupBy') {\n      let domain;\n      if (this.xDomain) {\n        domain = this.xDomain;\n      } else {\n        domain = d3.extent(this.results.d0Domain, function(d) {\n          return moment(d).toDate();\n        });\n      }\n      this.scaleType = 'time';\n      this.xScale = d3.scaleTime()\n        .range([0, this.dims.width])\n        .domain(domain);\n    } else {\n      this.scaleType = 'ordinal';\n      this.xScale = d3.scalePoint()\n        .range([0, this.dims.width], 0.1)\n        .domain(this.results.d0Domain);\n    }\n\n    this.yScale = d3.scaleLinear()\n      .range([this.dims.height, 0])\n      .domain(this.results.m0Domain);\n\n    if (!this.autoScale) {\n      this.yScale.domain([0, this.results.m0Domain[1]]);\n    }\n\n    this.setColors();\n\n    this.transform = `translate(${ this.dims.xOffset } , ${ this.margin[0] })`;\n    let pageUrl = window.location.href;\n    let clipPathId = 'clip' + ObjectId().toString();\n    this.clipPath = `url(${pageUrl}#${clipPathId})`;\n  }\n\n  click(data) {\n    this.clickHandler.emit(data);\n  }\n\n  setColors() {\n    this.colors = colorHelper(this.scheme, 'ordinal', this.results.d1Domain, this.customColors);\n  }\n\n  update() {\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// node_modules/tslint-loader!./src/line-chart/line-chart-2d.component.ts","import { Component, Input, Output, EventEmitter, OnInit, OnChanges } from '@angular/core';\nimport { calculateViewDimensions, ViewDimensions } from '../common/view-dimensions.helper';\nimport { colorHelper } from '../utils/color-sets';\nimport { BaseChart } from '../common/base-chart.component';\nimport ObjectId from \"../utils/object-id\";\nimport d3 from '../d3';\nimport moment from 'moment';\n\n@Component({\n  selector: 'line-chart',\n  template: `\n    <chart\n      [legend]=\"legend\"\n      [view]=\"view\"\n      [colors]=\"colors\"\n      [legendData]=\"seriesDomain\">\n\n      <svg:defs>\n        <svg:clipPath id=\"clipPathId\">\n          <svg:rect\n            [attr.width]=\"dims.width + 10\"\n            [attr.height]=\"dims.height + 10\"\n            transform=\"translate(-5, -5)\"/>\n        </svg:clipPath>\n      </svg:defs>\n\n      <svg:g [attr.transform]=\"transform\" class=\"line chart\">\n        <svg:g xAxis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"true\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\">\n        </svg:g>\n\n        <svg:g yAxis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"true\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\">\n        </svg:g>\n\n        <svg:g [attr.clip-path]=\"clipPath\">\n        <!--\n          <svg:g area\n            *ngIf=\"gradient\"\n            [fill]=\"colors('Line')\"\n            [path]=\"areaPath\"\n            [startingPath]=\"areaPath\"\n            [data]=\"series\"\n            startOpacity=\"0\"\n            endOpacity=\"0.2\"\n            [gradient]=\"gradient\"\n          />\n          -->\n\n          <svg:g *ngFor=\"let series of results\">\n            <svg:g lineSeries\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [color]=\"colors(series.name)\"\n              [data]=\"series\"\n              [scaleType]=\"scaleType\"\n            />\n          </svg:g>\n\n          <svg:rect\n            class=\"tooltip-area\"\n            [attr.width]=\"dims.width + 10\"\n            [attr.height]=\"dims.height + 10\"\n            x=\"-5\"\n            y=\"-5\"\n            style=\"fill: rgb(255, 0, 0); opacity: 0; cursor: 'auto';\"\n          />\n\n          <svg:g *ngFor=\"let series of results\">\n            <svg:g circleSeries\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [color]=\"colors(series.name)\"\n              [strokeColor]=\"colors(series.name)\"\n              [data]=\"series\"\n              [scaleType]=\"scaleType\"\n              (clickHandler)=\"click($event)\"\n            />\n          </svg:g>\n\n        </svg:g>\n      </svg:g>\n\n      <svg:g timeline\n        *ngIf=\"timeline && scaleType === 'time'\"\n        [results]=\"results\"\n        [view]=\"view\"\n        [scheme]=\"scheme\"\n        [customColors]=\"customColors\"\n        [legend]=\"legend\">\n      </svg:g>\n    </chart>\n  `\n})\nexport class LineChart extends BaseChart implements OnInit, OnChanges {\n  dims: ViewDimensions;\n  xDomain: any;\n  yDomain: any;\n  seriesDomain: any;\n  yScale: any;\n  xScale: any;\n  colors: Function;\n  scaleType: string;\n  transform: string;\n  clipPath: string;\n  series: any;\n  areaPath: any;\n\n  @Input() view;\n  @Input() results;\n  @Input() margin = [10, 20, 70, 70];\n  @Input() scheme;\n  @Input() legend;\n  @Input() customColors;\n  @Input() xAxis;\n  @Input() yAxis;\n  @Input() showXAxisLabel;\n  @Input() showYAxisLabel;\n  @Input() xAxisLabel;\n  @Input() yAxisLabel;\n  @Input() autoScale;\n  @Input() timeline;\n  @Input() gradient: boolean;\n\n  @Output() clickHandler = new EventEmitter();\n\n  ngOnInit() {\n    this.update();\n  }\n\n  ngOnChanges() {\n    this.update();\n  }\n\n  update() {\n    super.update();\n    this.dims = calculateViewDimensions(this.view, this.margin, this.showXAxisLabel, this.showYAxisLabel, this.legend, 9);\n\n    if (this.timeline) {\n      this.dims.height -= 150;\n    }\n\n    this.xDomain = this.getXDomain();\n    this.yDomain = this.getYDomain();\n    this.seriesDomain = this.getSeriesDomain();\n\n    // TODO: should sorting happen here?\n    // this.series = this.results.series[0].array.sort((a, b) => {\n    //   return this.results.d0Domain.indexOf(a.vals[0].label[0][0]) - this.results.d0Domain.indexOf(b.vals[0].label[0][0]);\n    // });\n\n    this.xScale = this.getXScale();\n    this.yScale = this.getYScale();\n\n    this.setColors();\n\n    // let xProperty = (d) => {\n    //   let label = d.vals[0].label[0][0];\n    //   if (this.scaleType === 'time') {\n    //     return this.xScale(moment(label).toDate());\n    //   } else {\n    //     return this.xScale(label) + this.xScale.bandwidth() / 2;\n    //   }\n    // };\n    //\n    // let area = d3.area()\n    //   .x(xProperty)\n    //   .y0(() => this.yScale.range()[0])\n    //   .y1(d => this.yScale(d.vals[0].value));\n    //\n    // this.areaPath = area(this.series);\n\n    this.transform = `translate(${ this.dims.xOffset } , ${ this.margin[0] })`;\n    let pageUrl = window.location.href;\n    let clipPathId = 'clip' + ObjectId().toString();\n    this.clipPath = `url(${pageUrl}#${clipPathId})`;\n  }\n\n  getXDomain() {\n    let values = [];\n    for (let results of this.results) {\n      for (let d of results.series){\n        if (!values.includes(d.name)) {\n          values.push(d.name);\n        }\n      }\n    }\n\n    this.scaleType = this.getScaleType(values);\n    let domain = [];\n    if (this.scaleType === 'time') {\n      values = values.map(v => moment(v).toDate());\n      let min = Math.min(...values);\n      let max = Math.max(...values);\n      domain = [min, max];\n    } else if (this.scaleType === 'linear') {\n      values = values.map(v => Number(v));\n      let min = Math.min(...values);\n      let max = Math.max(...values);\n      domain = [min, max];\n    } else {\n      domain = values;\n    }\n    return domain;\n  }\n\n  getYDomain() {\n    let domain = [];\n    for (let results of this.results) {\n      for (let d of results.series){\n        if (!domain.includes(d.value)) {\n          domain.push(d.value);\n        }\n      }\n    }\n\n    let min = Math.min(...domain);\n    let max = Math.max(...domain);\n    if (!this.autoScale) {\n      min = Math.min(0, min);\n    }\n    return [min, max];\n  }\n\n  getSeriesDomain() {\n    return this.results.map(d => d.name);\n  }\n\n  getXScale() {\n    let scale;\n    if (this.scaleType === 'time') {\n      scale = d3.scaleTime()\n        .range([0, this.dims.width])\n        .domain(this.xDomain);\n    } else if (this.scaleType === 'linear') {\n      scale = d3.scaleLinear()\n        .range([0, this.dims.width])\n        .domain(this.xDomain);\n    } else if (this.scaleType === 'ordinal') {\n      scale = d3.scalePoint()\n        .range([0, this.dims.width])\n        .padding(0.1)\n        .domain(this.xDomain);\n    }\n\n    return scale;\n  }\n\n  getYScale() {\n    return d3.scaleLinear()\n      .range([this.dims.height, 0])\n      .domain(this.yDomain);\n  }\n\n  getScaleType(values) {\n    let date = true;\n    let number = true;\n    for (let value of values) {\n      if (!this.isDate(value)) {\n        date = false;\n      }\n      if (typeof value !== 'number') {\n        number = false;\n      }\n    }\n\n    if (date) {\n      return 'time';\n    }\n    if (number) {\n      return 'linear';\n    }\n    return 'ordinal';\n  }\n\n  isDate(value) {\n    if (value instanceof Date) {\n      return true;\n    }\n\n    return false;\n  }\n\n  click(data) {\n    this.clickHandler.emit(data);\n  }\n\n  setColors() {\n    this.colors = colorHelper(this.scheme, 'ordinal', this.seriesDomain, this.customColors);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// node_modules/tslint-loader!./src/line-chart/line-chart.component.ts","import {NgModule} from \"@angular/core\";\nimport {CommonModule} from \"../common/common.module\";\nimport {Line} from \"./line.component\";\nimport {LineChart} from \"./line-chart.component\";\nimport {LineChart2D} from \"./line-chart-2d.component\";\nimport {LineSeries} from \"./line-series.component\";\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [\n    Line,\n    LineChart,\n    LineChart2D,\n    LineSeries\n  ],\n  exports: [\n    Line,\n    LineChart,\n    LineChart2D,\n    LineSeries\n  ]\n})\nexport class LineChartModule {}\n\n\n\n// WEBPACK FOOTER //\n// node_modules/tslint-loader!./src/line-chart/line-chart.module.ts","import { Component, Input, OnInit, OnChanges } from '@angular/core';\nimport d3 from '../d3';\nimport moment from 'moment';\n\n@Component({\n  selector: 'g[lineSeries]',\n  template: `\n    <svg:g line\n      [data]=\"data\"\n      [path]=\"path\"\n      [stroke]=\"color\"\n    />\n  `\n})\nexport class LineSeries implements OnInit, OnChanges {\n\n  path: string;\n\n  @Input() data;\n  @Input() xScale;\n  @Input() yScale;\n  @Input() color;\n  @Input() scaleType;\n\n  ngOnInit() {\n    this.update();\n  }\n\n  ngOnChanges() {\n    this.update();\n  }\n\n  update() {\n    let line = d3.line()\n      .x(d => {\n        let label = d.name;\n        let value;\n        if (this.scaleType === 'time') {\n          value = this.xScale(moment(label).toDate());\n        } else if (this.scaleType === 'linear') {\n          value = this.xScale(Number(label));\n        } else {\n          value = this.xScale(label);\n        }\n        return value;\n      })\n      .y(d => this.yScale(d.value));\n\n    let data = this.data.series;\n\n    this.path = line(data) || '';\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// node_modules/tslint-loader!./src/line-chart/line-series.component.ts","import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'g[line]',\n  template: `\n    <svg:path\n      class=\"line\"\n      [attr.d]=\"path\"\n      fill=\"none\"\n      [attr.stroke]=\"stroke\"\n      stroke-width=\"1.5px\"\n      style=\"strokeDasharray: 2000; strokeDashoffset: 0\"\n    />\n  `\n})\nexport class Line {\n  @Input() path;\n  @Input() stroke;\n  @Input() data;\n\n  @Output() clickHandler = new EventEmitter();\n}\n\n\n\n// WEBPACK FOOTER //\n// node_modules/tslint-loader!./src/line-chart/line.component.ts","import { Component, Input, Output, EventEmitter, OnInit, OnChanges } from '@angular/core';\n\nexport interface CardModel {\n  x;\n  y;\n  width: number;\n  height: number;\n  color: string;\n  label: string;\n  data;\n  tooltipText: string;\n}\n\n@Component({\n  selector: 'g[cardSeries]',\n  template: `\n    <svg:g card *ngFor=\"let c of cards\"\n      [x]=\"c.x\"\n      [y]=\"c.y\"\n      [width]=\"c.width\"\n      [height]=\"c.height\"\n      [color]=\"c.color\"\n      [data]=\"c.data\"\n      (clickHandler)=\"click($event)\"\n      sw-popover\n      [popoverSpacing]=\"15\"\n      [popoverText]=\"c.tooltipText\"\n      [popoverGroup]=\"'charts'\"\n    />\n  `\n})\nexport class CardSeries implements OnInit, OnChanges {\n  cards: CardModel[];\n\n  @Input() data;\n  @Input() dims;\n  @Input() colors;\n\n  @Output() clickHandler = new EventEmitter();\n\n  ngOnInit() {\n    this.update();\n  }\n\n  ngOnChanges() {\n    this.update();\n  }\n\n  update() {\n    this.cards = this.getCards();\n  }\n\n  getCards() {\n    return this.data\n      .map((d, index) => {\n        let label = d.data.name;\n\n        let value = d.data.value;\n        return {\n          x: d.x,\n          y: d.y,\n          width: d.width,\n          height: d.height,\n          color: this.colors(label),\n          label: d.data.label,\n          data: d.data,\n          tooltipText: `${label}: ${value}`\n        };\n      });\n  }\n\n  click(data) {\n    this.clickHandler.emit(data);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// node_modules/tslint-loader!./src/number-card/card-series.component.ts","import { Component, Input, Output, EventEmitter, ElementRef, OnInit } from '@angular/core';\nimport { trimLabel } from '../common/trim-label.helper';\nimport d3 from '../d3';\n\n@Component({\n  selector: 'g[card]',\n  template: `\n    <svg:g [attr.transform]=\"transform\" class=\"cell\"\n      (click)=\"click()\">\n      <svg:rect\n        class=\"card\"\n        [style.fill]=\"color\"\n        [style.opacity]=\"0.3\"\n        style=\"cursor: pointer; stroke-width: 2px; stroke: #192024;\"\n        [attr.width]=\"cardWidth\"\n        [attr.height]=\"cardHeight\"\n        rx=\"3\"\n        ry=\"3\"\n      />\n      <title>{{label}}</title>\n      <svg:foreignObject\n        x=\"5\"\n        [attr.y]=\"height * 0.7\"\n        [attr.width]=\"textWidth\"\n        [attr.height]=\"height * 0.3\"\n        style=\"fill: #fff; font-size: 12px; pointer-events: none; text-transform: uppercase; overflow: hidden; text-align: center;\">\n        <xhtml:p>\n          {{trimmedLabel}}\n        </xhtml:p>\n      </svg:foreignObject>\n\n      <svg:text\n        [attr.x]=\"width / 2\"\n        [attr.y]=\"height * 0.30\"\n        dy='.35em'\n        class=\"value-text\"\n        [style.fill]=\"color\"\n        text-anchor=\"middle\"\n        style=\"font-size: 46px; pointer-events: none;\">\n        {{value}}\n      </svg:text>\n    </svg:g>\n  `\n})\nexport class Card implements OnInit {\n  element: HTMLElement;\n  transform: string;\n  trimmedLabel: string;\n  value: string;\n  cardWidth: number;\n  cardHeight: number;\n  textWidth: number;\n\n  @Input() color;\n  @Input() x;\n  @Input() y;\n  @Input() width;\n  @Input() height;\n  @Input() label;\n  @Input() data;\n\n  @Output() clickHandler = new EventEmitter();\n\n  constructor(element: ElementRef) {\n    this.element = element.nativeElement;\n  }\n\n  ngOnInit() {\n    this.update();\n  }\n\n  update() {\n    this.transform = `translate(${this.x} , ${this.y})`;\n\n    this.label = this.data.name;\n    this.trimmedLabel = trimLabel(this.label, 55);\n    this.value = d3.format(\",.0f\")(this.data.value);\n\n    this.cardWidth = Math.max(0, this.width - 5);\n    this.cardHeight = Math.max(0, this.height - 5);\n    this.textWidth = Math.max(0, this.width - 15);\n\n    this.loadAnimation();\n  }\n\n  loadAnimation() {\n    // TODO: replace countup animation\n    // let node = d3.select(this.element).selectAll('.value-text');\n    //\n    // node.text('0');\n\n    this.animateToCurrentForm();\n  }\n\n  animateToCurrentForm() {\n    var options = {\n      useEasing: true,\n      useGrouping: true,\n      separator: ',',\n      decimal: '.',\n      prefix: '',\n      suffix: ''\n    };\n\n    var endValue = this.data.value;\n    if (this.data.valueType === 'currency') {\n      options.prefix = '$';\n    } else if (this.data.valueType === 'duration') {\n      if (endValue < 60) {\n        options.suffix = ' sec';\n      } else if (endValue < 3600) {\n        endValue = endValue / 60;\n        options.suffix = ' min';\n      } else {\n        endValue = endValue / 3600;\n        options.suffix = ' hours';\n      }\n    }\n\n    // TODO: replace countup animation\n    // let node = d3.select(this.element).selectAll('.value-text');\n    // var counter = new CountUp(node[0][0], 0, endValue, 0, 2.5, options);\n    // counter.start();\n  }\n\n  click() {\n    this.clickHandler.emit(this.data);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// node_modules/tslint-loader!./src/number-card/card.component.ts","import { Component, Input, Output, EventEmitter, OnInit, OnChanges } from '@angular/core';\nimport { BaseChart } from '../common/base-chart.component';\nimport { calculateViewDimensions, ViewDimensions } from '../common/view-dimensions.helper';\nimport { colorHelper } from '../utils/color-sets';\nimport { gridLayout } from '../common/grid-layout.helper';\n\n@Component({\n  selector: 'number-card',\n  template: `\n    <chart\n      [legend]=\"false\"\n      [view]=\"view\">\n      <svg:g [attr.transform]=\"transform\" class=\"numbercard\">\n        <svg:g cardSeries\n          [colors]=\"colors\"\n          [data]=\"data\"\n          [dims]=\"dims\"\n          (clickHandler)=\"click($event)\"\n        />\n      </svg:g>\n    </chart>\n  `\n})\nexport class NumberCard extends BaseChart implements OnInit, OnChanges {\n  dims: ViewDimensions;\n  data: any[];\n  colors: Function;\n  transform: string;\n  domain: any[];\n\n  @Input() view;\n  @Input() results;\n  @Input() margin = [10, 10, 10, 10];\n  @Input() scheme;\n  @Input() customColors;\n\n  @Output() clickHandler = new EventEmitter();\n\n  ngOnInit() {\n    this.update();\n  }\n\n  ngOnChanges() {\n    this.update();\n  }\n\n  update() {\n    super.update();\n    this.dims = calculateViewDimensions(this.view, this.margin, false, false, false);\n\n    this.domain = this.getDomain();\n\n    // let sortedData = this.results;\n    // sortedData.array = sortedData.sort((a, b) => {\n    //   return this.results.d0Domain.indexOf(a.vals[0].label[1]) - this.results.d0Domain.indexOf(b.vals[0].label[1]);\n    // });\n\n    this.data = gridLayout(this.dims, this.results, 150);\n\n    this.setColors();\n    this.transform = `translate(${ this.dims.xOffset } , ${ this.margin[0] })`;\n  }\n\n  getDomain() {\n    return this.results.map(d => d.name);\n  }\n\n  click(data) {\n    this.clickHandler.emit(data);\n  }\n\n  setColors() {\n    this.colors = colorHelper(this.scheme, 'ordinal', this.domain, this.customColors);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// node_modules/tslint-loader!./src/number-card/number-card.component.ts","import {NgModule} from \"@angular/core\";\nimport {CommonModule} from \"../common/common.module\";\nimport {Card} from \"./card.component\";\nimport {CardSeries} from \"./card-series.component\";\nimport {NumberCard} from \"./number-card.component\";\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [\n    Card,\n    CardSeries,\n    NumberCard\n  ],\n  exports: [\n    Card,\n    CardSeries,\n    NumberCard\n  ]\n})\nexport class NumberCardModule {}\n\n\n\n// WEBPACK FOOTER //\n// node_modules/tslint-loader!./src/number-card/number-card.module.ts","import { Component, Input, Output, EventEmitter, OnInit, OnChanges } from '@angular/core';\nimport { calculateViewDimensions, ViewDimensions } from '../common/view-dimensions.helper';\nimport { colorHelper } from '../utils/color-sets';\nimport { BaseChart } from '../common/base-chart.component';\nimport { trimLabel } from '../common/trim-label.helper';\n\nexport interface LegendItem {\n  value: number;\n  label: string;\n  percentage: number;\n}\n\n@Component({\n  selector: 'advanced-pie-chart',\n  template: `\n    <div class=\"advanced-pie\"\n      [style.width]=\"dims.width\"\n      [style.height]=\"view[1]\">\n\n      <chart\n        [colors]=\"colors\"\n        [view]=\"[dims.width, dims.height]\">\n\n        <svg:g\n          [attr.transform]=\"transform\"\n          class=\"pie chart\">\n          <svg:g pieSeries\n            [colors]=\"colors\"\n            [showLabels]=\"labels\"\n            [series]=\"results\"\n            [innerRadius]=\"innerRadius\"\n            [outerRadius]=\"outerRadius\"\n            [gradient]=\"gradient\"\n            (clickHandler)=\"click($event)\">\n          </svg:g>\n        </svg:g>\n      </chart>\n    </div>\n\n    <div [style.width]=\"view[0] - dims.width\">\n      <div class=\"advanced-pie-legend\"\n        [style.margin-top]=\"(view[1] - 215)/2\">\n\n        <div class=\"total-value\">\n          {{roundedTotal}}\n        </div>\n        <div class=\"total-label\">\n          {{totalLabel}}\n        </div>\n\n        <div class=\"legend-items-container\">\n          <div class=\"legend-items\">\n            <div *ngFor=\"let legendItem of legendItems\" class=\"legend-item\">\n              <div class=\"item-color\"\n                [style.background]=\"colors(legendItem.label)\">\n              </div>\n              <div class=\"item-value\">{{legendItem.value}}</div>\n              <div class=\"item-label\">{{legendItem.label}}</div>\n              <div class=\"item-percent\">{{legendItem.percentage}}%</div>\n            </div>\n          </div>\n        </div>\n\n      </div>\n    </div>\n  `\n})\nexport class AdvancedPieChart extends BaseChart implements OnInit, OnChanges {\n  data: any;\n  dims: ViewDimensions;\n  domain: any[];\n  outerRadius: number;\n  innerRadius: number;\n  transform: string;\n  total: number;\n  roundedTotal: number;\n  totalLabel: string;\n  legendItems: LegendItem;\n  colors: Function;\n\n  @Input() view;\n  @Input() results;\n  @Input() margin = [20, 20, 20, 20];\n  @Input() scheme;\n  @Input() customColors;\n  @Input() gradient: boolean;\n\n  @Output() clickHandler = new EventEmitter();\n\n  ngOnInit() {\n    this.update();\n  }\n\n  ngOnChanges() {\n    this.update();\n  }\n\n  update() {\n    super.update();\n    this.dims = calculateViewDimensions([this.view[0] * 4 / 12.0, this.view[1]], this.margin, false, false, false);\n    this.domain = this.getDomain();\n    this.setColors();\n\n    // TODO\n    // sort data according to domain\n    // this.data = this.results.series[0];\n    // this.data.array = this.data.array.sort((a, b) => {\n    //   return this.results.d0Domain.indexOf(a.vals[0].label[1]) - this.results.d0Domain.indexOf(b.vals[0].label[1]);\n    // });\n\n    let xOffset = this.margin[3] + this.dims.width / 2;\n    let yOffset = this.margin[0] + this.dims.height / 2;\n\n    this.outerRadius = Math.min(this.dims.width, this.dims.height) / 2.5;\n    this.innerRadius = this.outerRadius * 0.75;\n\n    this.transform = `translate(${xOffset} , ${yOffset})`;\n\n    this.total = this.getTotal();\n    this.roundedTotal = Math.round(this.total);\n\n    this.totalLabel = 'total';\n\n    this.legendItems = this.getLegendItems();\n  }\n\n  getTotal() {\n    return this.results\n      .map(d => d.value)\n      .reduce((sum, d) => sum + d);\n  }\n\n  getDomain() {\n    return this.results.map(d => d.name);\n  }\n\n  getLegendItems(): LegendItem {\n    return this.results.map((d, index) => {\n      let label = d.name;\n      let value = d.value;\n      let percentage = Math.round(value / this.total * 100);\n      return {\n        value: Math.round(value),\n        label: trimLabel(label, 20),\n        percentage: percentage\n      };\n    });\n  }\n\n  click(data) {\n    this.clickHandler.emit(data);\n  }\n\n  setColors() {\n    this.colors = colorHelper(this.scheme, 'ordinal', this.domain, this.customColors);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// node_modules/tslint-loader!./src/pie-chart/advanced-pie-chart.component.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { ListWrapper, StringMapWrapper } from '../facade/collection';\nimport { hasConstructor, isBlank, isPresent, looseIdentical } from '../facade/lang';\nimport { Validators } from '../validators';\nimport { CheckboxControlValueAccessor } from './checkbox_value_accessor';\nimport { DefaultValueAccessor } from './default_value_accessor';\nimport { normalizeAsyncValidator, normalizeValidator } from './normalize_validator';\nimport { NumberValueAccessor } from './number_value_accessor';\nimport { RadioControlValueAccessor } from './radio_control_value_accessor';\nimport { SelectControlValueAccessor } from './select_control_value_accessor';\nimport { SelectMultipleControlValueAccessor } from './select_multiple_control_value_accessor';\nexport function controlPath(name, parent) {\n    var p = ListWrapper.clone(parent.path);\n    p.push(name);\n    return p;\n}\nexport function setUpControl(control, dir) {\n    if (isBlank(control))\n        _throwError(dir, 'Cannot find control with');\n    if (isBlank(dir.valueAccessor))\n        _throwError(dir, 'No value accessor for form control with');\n    control.validator = Validators.compose([control.validator, dir.validator]);\n    control.asyncValidator = Validators.composeAsync([control.asyncValidator, dir.asyncValidator]);\n    dir.valueAccessor.writeValue(control.value);\n    // view -> model\n    dir.valueAccessor.registerOnChange(function (newValue) {\n        dir.viewToModelUpdate(newValue);\n        control.markAsDirty();\n        control.setValue(newValue, { emitModelToViewChange: false });\n    });\n    // touched\n    dir.valueAccessor.registerOnTouched(function () { return control.markAsTouched(); });\n    control.registerOnChange(function (newValue, emitModelEvent) {\n        // control -> view\n        dir.valueAccessor.writeValue(newValue);\n        // control -> ngModel\n        if (emitModelEvent)\n            dir.viewToModelUpdate(newValue);\n    });\n    if (dir.valueAccessor.setDisabledState) {\n        control.registerOnDisabledChange(function (isDisabled) { dir.valueAccessor.setDisabledState(isDisabled); });\n    }\n    // re-run validation when validator binding changes, e.g. minlength=3 -> minlength=4\n    dir._rawValidators.forEach(function (validator) {\n        if (validator.registerOnChange)\n            validator.registerOnChange(function () { return control.updateValueAndValidity(); });\n    });\n    dir._rawAsyncValidators.forEach(function (validator) {\n        if (validator.registerOnChange)\n            validator.registerOnChange(function () { return control.updateValueAndValidity(); });\n    });\n}\nexport function cleanUpControl(control, dir) {\n    dir.valueAccessor.registerOnChange(function () { return _noControlError(dir); });\n    dir.valueAccessor.registerOnTouched(function () { return _noControlError(dir); });\n    dir._rawValidators.forEach(function (validator) { return validator.registerOnChange(null); });\n    dir._rawAsyncValidators.forEach(function (validator) { return validator.registerOnChange(null); });\n    if (control)\n        control._clearChangeFns();\n}\nexport function setUpFormContainer(control, dir) {\n    if (isBlank(control))\n        _throwError(dir, 'Cannot find control with');\n    control.validator = Validators.compose([control.validator, dir.validator]);\n    control.asyncValidator = Validators.composeAsync([control.asyncValidator, dir.asyncValidator]);\n}\nfunction _noControlError(dir) {\n    return _throwError(dir, 'There is no FormControl instance attached to form control element with');\n}\nfunction _throwError(dir, message) {\n    var messageEnd;\n    if (dir.path.length > 1) {\n        messageEnd = \"path: '\" + dir.path.join(' -> ') + \"'\";\n    }\n    else if (dir.path[0]) {\n        messageEnd = \"name: '\" + dir.path + \"'\";\n    }\n    else {\n        messageEnd = 'unspecified name attribute';\n    }\n    throw new Error(message + \" \" + messageEnd);\n}\nexport function composeValidators(validators) {\n    return isPresent(validators) ? Validators.compose(validators.map(normalizeValidator)) : null;\n}\nexport function composeAsyncValidators(validators) {\n    return isPresent(validators) ? Validators.composeAsync(validators.map(normalizeAsyncValidator)) :\n        null;\n}\nexport function isPropertyUpdated(changes, viewModel) {\n    if (!StringMapWrapper.contains(changes, 'model'))\n        return false;\n    var change = changes['model'];\n    if (change.isFirstChange())\n        return true;\n    return !looseIdentical(viewModel, change.currentValue);\n}\nexport function isBuiltInAccessor(valueAccessor) {\n    return (hasConstructor(valueAccessor, CheckboxControlValueAccessor) ||\n        hasConstructor(valueAccessor, NumberValueAccessor) ||\n        hasConstructor(valueAccessor, SelectControlValueAccessor) ||\n        hasConstructor(valueAccessor, SelectMultipleControlValueAccessor) ||\n        hasConstructor(valueAccessor, RadioControlValueAccessor));\n}\n// TODO: vsavkin remove it once https://github.com/angular/angular/issues/3011 is implemented\nexport function selectValueAccessor(dir, valueAccessors) {\n    if (isBlank(valueAccessors))\n        return null;\n    var defaultAccessor;\n    var builtinAccessor;\n    var customAccessor;\n    valueAccessors.forEach(function (v) {\n        if (hasConstructor(v, DefaultValueAccessor)) {\n            defaultAccessor = v;\n        }\n        else if (isBuiltInAccessor(v)) {\n            if (isPresent(builtinAccessor))\n                _throwError(dir, 'More than one built-in value accessor matches form control with');\n            builtinAccessor = v;\n        }\n        else {\n            if (isPresent(customAccessor))\n                _throwError(dir, 'More than one custom value accessor matches form control with');\n            customAccessor = v;\n        }\n    });\n    if (isPresent(customAccessor))\n        return customAccessor;\n    if (isPresent(builtinAccessor))\n        return builtinAccessor;\n    if (isPresent(defaultAccessor))\n        return defaultAccessor;\n    _throwError(dir, 'No valid value accessor for form control with');\n    return null;\n}\n//# sourceMappingURL=shared.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@angular/forms/src/directives/shared.js\n// module id = 70\n// module chunks = 1","import { Component, Input, Output, EventEmitter, ElementRef, OnInit } from '@angular/core';\nimport d3 from '../d3';\nimport ObjectId from \"../utils/object-id\";\n\n@Component({\n  selector: 'g[pieArc]',\n  template: `\n    <svg:g class=\"arc-group\">\n      <svg:defs *ngIf=\"gradient\">\n        <svg:g svgLinearGradient\n          [color]=\"fill\"\n          orientation=\"vertical\"\n          [name]=\"linearGradientId\"\n          [startOpacity]=\"startOpacity\"\n        />\n        <svg:g svgRadialGradient\n          [color]=\"fill\"\n          orientation=\"vertical\"\n          [name]=\"radialGradientId\"\n          [startOpacity]=\"startOpacity\"\n        />\n      </svg:defs>\n      <svg:path\n        [attr.d]=\"path\"\n        class=\"arc\"\n        [style.cursor]=\"'pointer'\"\n        [attr.fill]=\"gradient ? gradientFill : fill\"\n        (click)=\"click()\"\n      />\n    </svg:g>\n  `\n})\nexport class PieArc implements OnInit {\n  element: HTMLElement;\n  path: any;\n  startOpacity: number;\n  radialGradientId: string;\n  linearGradientId: string;\n  gradientFill: string;\n\n  @Input() fill;\n  @Input() startAngle;\n  @Input() endAngle;\n  @Input() innerRadius;\n  @Input() outerRadius;\n  @Input() value;\n  @Input() total;\n  @Input() max;\n  @Input() explodeSlices;\n  @Input() gradient: boolean = false;\n\n  @Output() clickHandler = new EventEmitter();\n\n  constructor(element: ElementRef) {\n    this.element = element.nativeElement;\n  }\n\n  ngOnInit() {\n    var arc = this.calculateArc();\n    this.path = arc.startAngle(this.startAngle).endAngle(this.endAngle)();\n    this.startOpacity = 0.3;\n\n    let pageUrl = window.location.href;\n    this.radialGradientId = 'linearGrad' + ObjectId().toString();\n    this.linearGradientId = 'radialGrad' + ObjectId().toString();\n\n    if (this.innerRadius !== 0) {\n      this.gradientFill = `url(${pageUrl}#${this.radialGradientId})`;\n    } else {\n      this.gradientFill = `url(${pageUrl}#${this.linearGradientId})`;\n    }\n\n    this.loadAnimation();\n  }\n\n  calculateArc() {\n    let outerRadius = this.outerRadius;\n    if (this.explodeSlices && this.innerRadius === 0) {\n      outerRadius = this.outerRadius * this.value / this.max;\n    }\n\n    return d3.arc()\n      .innerRadius(this.innerRadius).outerRadius(outerRadius);\n  }\n\n  loadAnimation() {\n    let node = d3.select(this.element).selectAll('.arc').data([{startAngle: this.startAngle, endAngle: this.endAngle}]);\n    var arc = this.calculateArc();\n\n    node\n      .transition()\n      .attrTween(\"d\", function(d) {\n        this._current = this._current || d;\n        var copyOfD = Object.assign({}, d);\n        copyOfD.endAngle = copyOfD.startAngle;\n        var interpolate = d3.interpolate(copyOfD, copyOfD);\n        this._current = interpolate(0);\n        return function(t) {\n          return arc(interpolate(t));\n        };\n      })\n      .transition().duration(750)\n      .attrTween(\"d\", function(d) {\n        this._current = this._current || d;\n        var interpolate = d3.interpolate(this._current, d);\n        this._current = interpolate(0);\n        return function(t) {\n          return arc(interpolate(t));\n        };\n      });\n  }\n\n  click(data) {\n    this.clickHandler.emit(data);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// node_modules/tslint-loader!./src/pie-chart/pie-arc.component.ts","import { Component, Input, Output, EventEmitter, OnInit, OnChanges } from '@angular/core';\nimport { calculateViewDimensions } from '../common/view-dimensions.helper';\nimport { colorHelper } from '../utils/color-sets';\nimport { BaseChart } from '../common/base-chart.component';\n\n@Component({\n  selector: 'pie-chart',\n  template: `\n    <chart\n      [colors]=\"colors\"\n      [legend]=\"legend\"\n      [view]=\"view\"\n      [legendData]=\"domain\">\n      <svg:g [attr.transform]=\"translation\" class=\"pie chart\">\n        <svg:g pieSeries\n          [colors]=\"colors\"\n          [showLabels]=\"labels\"\n          [series]=\"data\"\n          [innerRadius]=\"innerRadius\"\n          [outerRadius]=\"outerRadius\"\n          [explodeSlices]=\"explodeSlices\"\n          [gradient]=\"gradient\"\n          (clickHandler)=\"click($event)\"\n        />\n      </svg:g>\n    </chart>\n  `\n})\nexport class PieChart extends BaseChart implements OnInit, OnChanges {\n  outerRadius: number;\n  innerRadius: number;\n  data: any;\n  colors: Function;\n  domain: any;\n\n  @Input() view;\n  @Input() results;\n  @Input() margin = [20, 20, 20, 20];\n  @Input() scheme;\n  @Input() customColors;\n  @Input() labels = false;\n  @Input() legend = false;\n  @Input() explodeSlices = false;\n  @Input() doughnut = false;\n  @Input() gradient: boolean;\n\n  @Output() clickHandler = new EventEmitter();\n\n  translation: string;\n\n  ngOnInit() {\n    this.update();\n  }\n\n  ngOnChanges() {\n    this.update();\n  }\n\n  update() {\n    super.update();\n    let dims = calculateViewDimensions(this.view, this.margin, false, false, this.legend, 9);\n    let xOffset = this.margin[3] + dims.width / 2;\n    let yOffset = this.margin[0] + dims.height / 2;\n    this.translation = `translate(${xOffset}, ${yOffset})`;\n    this.outerRadius = Math.min(dims.width, dims.height);\n    if (this.labels) {\n      // make room for labels\n      this.outerRadius /= 3;\n    } else {\n      this.outerRadius /= 2;\n    }\n    this.innerRadius = 0;\n    if (this.doughnut) {\n      this.innerRadius = this.outerRadius * 0.75;\n    }\n\n    this.domain = this.getDomain();\n\n    // sort data according to domain\n    this.data = this.results.sort((a, b) => {\n      return this.domain.indexOf(a.name) - this.domain.indexOf(b.name);\n    });\n\n    this.setColors();\n  }\n\n  getDomain() {\n    return this.results.map(d => d.name);\n  }\n\n  click(data) {\n    this.clickHandler.emit(data);\n  }\n\n  setColors() {\n    this.colors = colorHelper(this.scheme, 'ordinal', this.domain, this.customColors);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// node_modules/tslint-loader!./src/pie-chart/pie-chart.component.ts","import {NgModule} from \"@angular/core\";\nimport {CommonModule} from \"../common/common.module\";\nimport {AdvancedPieChart} from \"./advanced-pie-chart.component\";\nimport {PieLabel} from \"./pie-label.component\";\nimport {PieArc} from \"./pie-arc.component\";\nimport {PieChart} from \"./pie-chart.component\";\nimport {PieGrid} from \"./pie-grid.component\";\nimport {PieGridSeries} from \"./pie-grid-series.component\";\nimport {PieSeries} from \"./pie-series.component\";\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [\n    AdvancedPieChart,\n    PieLabel,\n    PieArc,\n    PieChart,\n    PieGrid,\n    PieGridSeries,\n    PieSeries\n  ],\n  exports: [\n    AdvancedPieChart,\n    PieLabel,\n    PieArc,\n    PieChart,\n    PieGrid,\n    PieGridSeries,\n    PieSeries\n  ]\n})\nexport class PieChartModule {}\n\n\n\n// WEBPACK FOOTER //\n// node_modules/tslint-loader!./src/pie-chart/pie-chart.module.ts","import { Component, Input, Output, EventEmitter, ElementRef, OnInit, OnChanges } from '@angular/core';\nimport d3 from '../d3';\n\n@Component({\n  selector: 'g[pieGridSeries]',\n  template: `\n    <svg:g class=\"pie-grid-arcs\">\n      <svg:path *ngFor=\"let arc of arcs\"\n        [attr.class]=\"arc.class\"\n        [attr.d]=\"arc.d\"\n        [style.cursor]=\"arc.cursor\"\n        [style.opacity]=\"arc.opacity\"\n        [attr.fill]=\"arc.fill\"\n        (clickHandler)=\"click($event)\"\n      />\n    </svg:g>\n  `\n})\nexport class PieGridSeries implements OnInit, OnChanges {\n  element: HTMLElement;\n  layout: any;\n  arcs: any;\n\n  @Input() colors;\n  @Input() data;\n  @Input() innerRadius = 60;\n  @Input() outerRadius = 80;\n\n  @Output() clickHandler = new EventEmitter();\n\n  constructor(element: ElementRef) {\n    this.element = element.nativeElement;\n  }\n\n  ngOnInit() {\n    this.update();\n  }\n\n  ngOnChanges() {\n    this.update();\n  }\n\n  update() {\n    this.layout = d3.pie()\n      .value((d) => d.data.value).sort(null);\n\n    this.arcs = this.getArcs();\n    this.loadAnimation();\n  }\n\n  getArcs() {\n    return this.layout(this.data).map((arc, index) => {\n      let label = arc.data.data.name;\n      let other = arc.data.data.other;\n\n      if (index === 0) {\n        arc.startAngle = 0;\n      }\n      let genArcPath: any = d3.arc()\n        .innerRadius(this.innerRadius).outerRadius(this.outerRadius)\n        .startAngle(arc.startAngle).endAngle(arc.endAngle);\n\n      return {\n        class: 'arc ' + 'arc' + index,\n        d: genArcPath(), // todo check need arguments ?\n        cursor: other ? 'auto' : 'pointer',\n        fill: this.colors(label),\n        opacity: other ? 0.4 : 1\n      };\n    });\n  }\n\n  loadAnimation() {\n    let layout = d3.pie()\n      .value((d) => d.data.value).sort(null);\n    let data = layout(this.data);\n\n    let node = d3.select(this.element).selectAll('.arc1').data([{\n      startAngle: data[0].startAngle,\n      endAngle: data[0].endAngle\n    }]);\n    var arc = this.calculateArc(this.innerRadius, this.outerRadius);\n\n    node\n      .transition()\n      .attrTween(\"d\", function(d) {\n        this._current = this._current || d;\n        var copyOfD = Object.assign({}, d);\n        copyOfD.endAngle = copyOfD.startAngle;\n        var interpolate = d3.interpolate(copyOfD, copyOfD);\n        this._current = interpolate(0);\n        return function(t) {\n          return arc(interpolate(t));\n        };\n      })\n      .transition().duration(750)\n      .attrTween(\"d\", function(d) {\n        this._current = this._current || d;\n        var interpolate = d3.interpolate(this._current, d);\n        this._current = interpolate(0);\n        return function(t) {\n          return arc(interpolate(t));\n        };\n      });\n  }\n\n  calculateArc(innerRadius, outerRadius) {\n    return d3.arc()\n      .innerRadius(innerRadius).outerRadius(outerRadius);\n  }\n\n  click(data) {\n    this.clickHandler.emit(data);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// node_modules/tslint-loader!./src/pie-chart/pie-grid-series.component.ts","import { Component, Input, Output, EventEmitter, OnInit, OnChanges } from '@angular/core';\nimport { calculateViewDimensions, ViewDimensions } from '../common/view-dimensions.helper';\nimport { colorHelper } from '../utils/color-sets';\nimport { BaseChart } from '../common/base-chart.component';\nimport { trimLabel } from '../common/trim-label.helper';\nimport { gridLayout } from '../common/grid-layout.helper';\nimport d3 from '../d3';\n\n@Component({\n  selector: 'pie-grid',\n  template: `\n    <chart\n      [legend]=\"false\"\n      [view]=\"view\" >\n      <svg:g [attr.transform]=\"transform\" class=\"pie-grid-chart\">\n        <svg:g\n          *ngFor=\"let series of series\"\n          class=\"pie-grid-item\"\n          [attr.transform]=\"series.transform\">\n\n          <svg:g pieGridSeries\n            [colors]=\"series.colors\"\n            [data]=\"series.data\"\n            [innerRadius]=\"series.innerRadius\"\n            [outerRadius]=\"series.outerRadius\"\n            (clickHandler)=\"click($event)\"\n          />\n\n          <svg:text\n            class=\"label\"\n            dy=\"-0.5em\"\n            x=\"0\"\n            y=\"5\"\n            text-anchor=\"middle\">\n            {{series.percent}}\n          </svg:text>\n\n          <svg:text\n            class=\"label\"\n            dy=\"0.5em\"\n            x=\"0\"\n            y=\"5\"\n            text-anchor=\"middle\">\n            {{series.label}}\n          </svg:text>\n\n          <svg:text\n            class=\"label\"\n            dy=\"1.23em\"\n            x=\"0\"\n            [attr.y]=\"series.outerRadius\"\n            text-anchor=\"middle\">\n            {{series.total}}\n          </svg:text>\n\n        </svg:g>\n      </svg:g>\n    </chart>\n  `\n})\nexport class PieGrid extends BaseChart implements OnInit, OnChanges {\n  dims: ViewDimensions;\n  data: any[];\n  transform: string;\n  series: any[];\n  domain: any[];\n  colorScale: Function;\n\n  @Input() view;\n  @Input() results;\n  @Input() margin = [20, 20, 20, 20];\n  @Input() scheme;\n  @Input() customColors;\n\n  @Output() clickHandler = new EventEmitter();\n\n  ngOnInit() {\n    this.update();\n  }\n\n  ngOnChanges() {\n    this.update();\n  }\n\n  update() {\n    super.update();\n    this.dims = calculateViewDimensions(this.view, this.margin, false, false, false);\n    this.domain = this.getDomain();\n\n    // TODO\n    // sort data according to domain\n    // let sortedData = this.results.series[0];\n    // sortedData.array = sortedData.array.sort((a, b) => {\n    //   return this.results.d0Domain.indexOf(a.vals[0].label[1]) - this.results.d0Domain.indexOf(b.vals[0].label[1]);\n    // });\n\n    this.data = gridLayout(this.dims, this.results, 150);\n    this.transform = `translate(${this.margin[3]} , ${this.margin[0]})`;\n\n    this.series = this.getSeries();\n    this.setColors();\n  }\n\n  getDomain() {\n    return this.results.map(d => d.name);\n  }\n\n  getSeries() {\n    let total = this.getTotal();\n    return this.data.map((d) => {\n      let label = d.data.name;\n      let value = d.data.value;\n      let radius = d3.min([d.width, d.height]) / 2.1;\n      let innerRadius = radius * 0.75;\n\n      let count = 0;\n\n      let colors = () => {\n        count += 1;\n        if (count === 1) {\n          return 'rgba(100,100,100,0.3)';\n        } else {\n          return this.colorScale(label);\n        }\n      };\n\n      return {\n        transform: `translate(${d.x + d.width / 2} , ${d.y + d.height / 2})`,\n        colors: colors,\n        innerRadius: innerRadius,\n        outerRadius: radius,\n        label: trimLabel(label),\n        total: `Total: ${d3.format(\".2f\")(value)}`,\n        percent: d3.format(\".1p\")(d.data.percent),\n        data: [d, {\n          data: {\n            other: true,\n            value: total - value,\n            name: 'other'\n          }\n        }]\n      };\n    });\n  }\n\n  getTotal() {\n    return this.results\n      .map(d => d.value)\n      .reduce((sum, d) => sum + d);\n  }\n\n  click(data) {\n    this.clickHandler.emit(data);\n  }\n\n  setColors() {\n    this.colorScale = colorHelper(this.scheme, 'ordinal', this.domain, this.customColors);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// node_modules/tslint-loader!./src/pie-chart/pie-grid.component.ts","import { Component, Input, ElementRef, OnInit, OnChanges } from '@angular/core';\nimport { trimLabel } from '../common/trim-label.helper';\nimport d3 from '../d3';\n\n@Component({\n  selector: 'g[pieLabel]',\n  template: `\n    <title>{{label}}</title>\n    <svg:text\n      class=\"label\"\n      [attr.transform]=\"transform\"\n      dy=\".35em\"\n      [style.textAnchor]=\"textAnchor()\"\n      [style.shapeRendering]=\"'crispEdges'\"\n      [style.textTransform]=\"'uppercase'\">\n      {{trimLabel(label)}}\n    </svg:text>\n    <svg:path\n      [attr.d]=\"line\"\n      [attr.stroke]=\"color\"\n      fill=\"none\"\n      class=\"line\"\n      [style.strokeDasharray]=\"2000\"\n      [style.strokeDashoffset]=\"0\">\n    </svg:path>\n  `\n})\nexport class PieLabel implements OnInit, OnChanges {\n  element: HTMLElement;\n  trimLabel: Function;\n  labelXY: any;\n  transform: string;\n  line: string;\n\n  @Input() data;\n  @Input() radius;\n  @Input() label;\n  @Input() color;\n  @Input() max;\n  @Input() value;\n  @Input() explodeSlices;\n\n  constructor(element: ElementRef) {\n    this.element = element.nativeElement;\n    this.trimLabel = trimLabel;\n  }\n\n  ngOnInit() {\n    this.update();\n  }\n\n  ngOnChanges() {\n    this.update();\n  }\n\n  update() {\n    let factor = 1.5;\n\n    let outerArc = d3.arc()\n      .innerRadius(this.radius * factor)\n      .outerRadius(this.radius * factor);\n\n    let startRadius = this.radius;\n    if (this.explodeSlices) {\n      startRadius = this.radius * this.value / this.max;\n    }\n\n    let innerArc = d3.arc()\n      .innerRadius(startRadius)\n      .outerRadius(startRadius);\n\n    this.labelXY = outerArc.centroid(this.data);\n    this.labelXY[0] = this.radius * factor * (this.midAngle(this.data) < Math.PI ? 1 : -1);\n    this.labelXY[1] = this.data.pos[1];\n\n    this.line = `M${innerArc.centroid(this.data)}L${outerArc.centroid(this.data)}L${this.labelXY}`;\n    this.transform = `translate(${this.labelXY})`;\n\n    this.loadAnimation();\n  }\n\n  textAnchor() {\n    return this.midAngle(this.data) < Math.PI ? \"start\" : \"end\";\n  }\n\n  midAngle(d) {\n    return d.startAngle + (d.endAngle - d.startAngle) / 2;\n  }\n\n  loadAnimation() {\n    let label = d3.select(this.element).select('.label');\n    let line = d3.select(this.element).select('.line');\n\n    label\n      .attr('opacity', 0)\n      .transition().delay(750).duration(750)\n      .attr('opacity', 1);\n\n    line\n      .style('stroke-dashoffset', 2000)\n      .transition().delay(750).duration(750)\n      .style('stroke-dashoffset', '0')\n      .transition()\n      .style('stroke-dasharray', 'none');\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// node_modules/tslint-loader!./src/pie-chart/pie-label.component.ts","import { Component, Input, Output, EventEmitter, OnInit, OnChanges } from '@angular/core';\nimport d3 from '../d3';\n\n@Component({\n  selector: 'g[pieSeries]',\n  template: `\n    <svg:g *ngFor=\"let arc of data\">\n      <svg:g pieLabel\n        *ngIf=\"labelVisible(arc)\"\n        [data]=\"arc\"\n        [radius]=\"outerRadius\"\n        [color]=\"color(arc)\"\n        [label]=\"label(arc)\"\n        [max]=\"max\"\n        [value]=\"arc.value\"\n        [explodeSlices]=\"explodeSlices\">\n      </svg:g>\n\n      <svg:g pieArc\n        [startAngle]=\"arc.startAngle\"\n        [endAngle]=\"arc.endAngle\"\n        [innerRadius]=\"innerRadius\"\n        [outerRadius]=\"outerRadius\"\n        [fill]=\"color(arc)\"\n        [total]=\"total\"\n        [value]=\"arc.data.value\"\n        [max]=\"max\"\n        [explodeSlices]=\"explodeSlices\"\n        (clickHandler)=\"click($event)\"\n        sw-popover\n        [popoverSpacing]=\"15\"\n        [popoverText]=\"tooltipText(arc)\"\n        [popoverGroup]=\"'charts'\"\n        [gradient]=\"gradient\"\n      ></svg:g>\n\n    </svg:g>\n  `\n})\nexport class PieSeries implements OnInit, OnChanges {\n  total: number;\n  max: number;\n  data: any;\n\n  @Input() colors;\n  @Input() series: any = [];\n  @Input() dims;\n  @Input() innerRadius = 60;\n  @Input() outerRadius = 80;\n  @Input() explodeSlices;\n  @Input() showLabels;\n  @Input() gradient: boolean;\n\n  @Output() clickHandler = new EventEmitter();\n\n  ngOnInit() {\n    this.update();\n  }\n\n  ngOnChanges() {\n    this.update();\n  }\n\n  update() {\n    let pie: any = d3.pie()\n      .value((d) => d.value)\n      .sort(null);\n\n    this.total = this.getTotal();\n\n    let arcData = pie(this.series);\n\n    this.max = d3.max(arcData, (d) => {\n      return d.value;\n    });\n\n    this.data = this.calculateLabelPositions(arcData);\n  }\n\n  getTotal() {\n    return this.series\n      .map(d => d.value)\n      .reduce((sum, val) => { return sum + val; } );\n  }\n\n  midAngle(d) {\n    return d.startAngle + (d.endAngle - d.startAngle) / 2;\n  }\n\n  outerArc() {\n    let factor = 1.5;\n    return d3.arc()\n      .innerRadius(this.outerRadius * factor)\n      .outerRadius(this.outerRadius * factor);\n  }\n\n  calculateLabelPositions(pieData) {\n    var minDistance = 10;\n    var chart = this;\n    var labelPositions = pieData;\n\n    labelPositions.forEach(function(d) {\n      d.pos = chart.outerArc().centroid(d);\n      d.pos[0] = chart.outerRadius * (chart.midAngle(d) < Math.PI ? 1 : -1);\n    });\n\n    for (var i = 0; i < labelPositions.length - 1; i++) {\n      var a = labelPositions[i];\n\n      for (var j = i + 1; j < labelPositions.length; j++) {\n        var b = labelPositions[j];\n        // if they're on the same side\n        if (b.pos[0] * a.pos[0] > 0) {\n          // if they're overlapping\n          if (Math.abs(b.pos[1] - a.pos[1]) <= minDistance) {\n            // push the second one down\n            labelPositions[j].pos[1] = b.pos[1] + minDistance;\n            j--;\n          }\n        }\n      }\n    }\n\n    return labelPositions;\n  }\n\n  labelVisible(arc) {\n    return this.showLabels && (arc.endAngle - arc.startAngle > Math.PI / 30);\n  }\n\n  label(arc) {\n    return arc.data.name;\n  }\n\n  tooltipText(arc) {\n    return `${this.label(arc)}: ${arc.data.value}`;\n  }\n\n  color(arc) {\n    return this.colors(this.label(arc));\n  }\n\n  click(data) {\n    this.clickHandler.emit(data);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// node_modules/tslint-loader!./src/pie-chart/pie-series.component.ts","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'g[treeMapCellSeries]',\n  template: `\n    <svg:g treeMapCell *ngFor=\"let c of cells\"\n      [x]=\"c.x\"\n      [y]=\"c.y\"\n      [width]=\"c.width\"\n      [height]=\"c.height\"\n      [fill]=\"c.fill\"\n      [label]=\"c.label\"\n      [value]=\"c.value\"\n      [valueType]=\"c.valueType\"\n      (clickHandler)=\"click($event)\"\n    />\n  `\n})\nexport class TreeMapCellSeries implements OnInit {\n  cells: any[];\n  @Input() data;\n  @Input() dims;\n  @Input() colors;\n\n  @Output() clickHandler = new EventEmitter();\n\n  ngOnInit() {\n    this.cells = this.getCells();\n  }\n\n  getCells() {\n    return this.data\n      .filter((d) => {\n        return d.depth === 1;\n      })\n      .map((d, index) => {\n        return {\n          x: d.x,\n          y: d.y,\n          width: d.dx,\n          height: d.dy,\n          fill: this.colors(d.label),\n          label: d.label,\n          value: d.value,\n          valueType: d.valueType\n        };\n      });\n  }\n\n  click(data) {\n    this.clickHandler.emit(data);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// node_modules/tslint-loader!./src/tree-map/tree-map-cell-series.component.ts","import { Component, Input, Output, EventEmitter, ElementRef, OnInit } from '@angular/core';\n// import { formatNumber } from 'common/utils/format';\n// todo fix missing \"props\"\nimport d3 from '../d3';\n\n@Component({\n  selector: 'g[treeMapCell]',\n  template: `\n    <svg:g [attr.transform]=\"transform\" class=\"cell\">\n      <svg:rect\n        [attr.fill]=\"fill\"\n        [attr.width]=\"width\"\n        [attr.height]=\"height\"\n        class=\"cell\"\n        (click)=\"click()\"\n      />\n\n      <svg:foreignObject\n        *ngIf=\"width >= 70 && height >= 35\"\n        x=\"0\"\n        [attr.y]=\"height/2 - 15\"\n        [attr.width]=\"width\"\n        height=\"40\">\n        <xhtml:p>\n          <xhtml:b>{{label}}</xhtml:b>\n          <xhtml:br/>\n          {{formattedValue}}\n        </xhtml:p>\n      </svg:foreignObject>\n    </svg:g>\n  `\n})\nexport class TreeMapCell implements OnInit {\n  element: HTMLElement;\n  transform: string;\n  formattedValue: string; // todo check string or number ?\n  @Input() fill;\n  @Input() x;\n  @Input() y;\n  @Input() width;\n  @Input() height;\n  @Input() label;\n  @Input() value;\n  @Input() valueType;\n\n  @Output() clickHandler = new EventEmitter();\n\n  constructor(element: ElementRef) {\n    this.element = element.nativeElement;\n  }\n\n  ngOnInit() {\n    this.transform = `translate(${this.x} , ${this.y})`;\n    // todo fix this by adding props\n    // this.formattedValue = formatNumber(props.value, props.valueType);\n\n    this.loadAnimation();\n  }\n\n  loadAnimation() {\n    let node = d3.select(this.element).select('.cell');\n\n    node\n      .attr('opacity', 0);\n\n    this.animateToCurrentForm();\n  }\n\n  animateToCurrentForm() {\n    let node = d3.select(this.element).select('.cell');\n\n    node.transition().duration(750)\n      .attr('opacity', 1);\n  }\n\n  click() {\n    this.clickHandler.emit(this.label);\n  }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// node_modules/tslint-loader!./src/tree-map/tree-map-cell.component.ts","import { Component, Input, Output, EventEmitter, OnInit } from '@angular/core';\nimport d3 from '../d3';\nimport { BaseChart } from '../common/base-chart.component';\nimport { calculateViewDimensions } from '../common/view-dimensions.helper';\nimport { colorHelper } from '../utils/color-sets';\n\n@Component({\n  selector: 'tree-map',\n  template: `\n    <chart\n      legend=\"false\"\n      [view]=\"view\">\n      <svg:g [attr.transform]=\"transform\" class=\"treemap\">\n        <svg:g treeMapCellSeries\n          [colors]=\"colors\"\n          [data]=\"data\"\n          [dims]=\"dims\"\n          (clickHandler)=\"click($event)\"\n        />\n      </svg:g>\n    </chart>\n  `\n})\nexport class TreeMap extends BaseChart implements OnInit {\n  @Input() view;\n  @Input() results;\n  @Input() margin = [10, 10, 10, 10];\n  @Input() scheme;\n  @Input() customColors;\n\n  @Output() clickHandler = new EventEmitter();\n\n  dims: any;\n  transform: any;\n  colors: any;\n  treemap: any;\n  data: any;\n\n\n  ngOnInit() {\n    this.dims = calculateViewDimensions(this.view, this.margin, false, false, false, 12);\n\n    let data = [];\n\n    for (var i = 0; i < this.results.data.length; i++) {\n      data[i] = {};\n      data[i].value = this.results.data[i].value;\n      data[i].valueType = this.results.data[i].valueType;\n      data[i].label = this.results.data[i].label;\n    }\n\n    this.treemap = d3.treemap()\n      .children(d => d)\n      .size([this.dims.width, this.dims.height])\n      .sticky(true)\n      .value(d => d.value); // todo check if value method exists ?\n\n    this.data = this.treemap(data);\n\n    this.colors = colorHelper(this.scheme, 'ordinal', this.results.d0Domain, this.customColors);\n\n    this.transform = `translate(${ this.dims.xOffset } , ${ this.margin[0] })`;\n  }\n\n  click(data) {\n    this.clickHandler.emit(data);\n  }\n\n  setColors() {\n  }\n\n  update() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// node_modules/tslint-loader!./src/tree-map/tree-map.component.ts","import { NgModule } from \"@angular/core\";\nimport { Chart } from \"./charts/chart.component\";\nimport { Legend } from \"./legend.component\";\nimport { ScaleLegend } from \"./scale-legend.component\";\nimport { AxesModule } from \"./axes/axes-module.component\";\nimport { Popover } from \"./popover/sw-popover.component\";\nimport { CircleSeries } from \"./circle-series.component\";\nimport { Circle } from \"./circle.component\";\nimport { GridPanel } from \"./grid-panel.component\";\nimport { GridPanelSeries } from \"./grid-panel-series.component\";\nimport { SvgLinearGradient } from \"./svg-linear-gradient.component\";\nimport { SvgRadialGradient } from \"./svg-radial-gradient.component\";\nimport { Timeline } from \"./timeline.component\";\nimport { BrowserModule } from \"@angular/platform-browser\";\nimport { Area } from \"./area.component\";\n\nconst COMPONENTS = [\n  Area,\n  Chart,\n  Legend,\n  ScaleLegend,\n  Circle,\n  Popover,\n  CircleSeries,\n  GridPanel,\n  GridPanelSeries,\n  SvgLinearGradient,\n  SvgRadialGradient,\n  Timeline\n];\n\n@NgModule({\n  imports: [\n    BrowserModule,\n    AxesModule\n  ],\n  declarations: [\n    ...COMPONENTS\n  ],\n  exports: [\n    BrowserModule,\n    AxesModule,\n    ...COMPONENTS\n  ]\n})\nexport class CommonModule {\n}\n\n\n\n// WEBPACK FOOTER //\n// node_modules/tslint-loader!./src/common/common.module.ts","import {NgModule} from \"@angular/core\";\nimport {CommonModule} from \"../common/common.module\";\nimport {TreeMapCell} from \"./tree-map-cell.component\";\nimport {TreeMapCellSeries} from \"./tree-map-cell-series.component\";\nimport {TreeMap} from \"./tree-map.component\";\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [\n    TreeMapCell,\n    TreeMapCellSeries,\n    TreeMap\n  ],\n  exports: [\n    TreeMapCell,\n    TreeMapCellSeries,\n    TreeMap\n  ]\n})\nexport class TreeMapModule {}\n\n\n\n// WEBPACK FOOTER //\n// node_modules/tslint-loader!./src/tree-map/tree-map.module.ts","export function debounce(func, wait, immediate) {\n  var timeout, args, context, timestamp, result;\n  return function() {\n    context = this;\n    args = arguments;\n    timestamp = new Date();\n    var later = function() {\n      var last: any = new Date().getTime() - timestamp;\n      if (last < wait) {\n        timeout = setTimeout(later, wait - last);\n      } else {\n        timeout = null;\n        if (!immediate) {\n          result = func.apply(context, args);\n        }\n      }\n    };\n    var callNow = immediate && !timeout;\n    if (!timeout) {\n      timeout = setTimeout(later, wait);\n    }\n    if (callNow) {\n      result = func.apply(context, args);\n    }\n    return result;\n  };\n}\n\n/**\n * Debounce decorator\n *\n *  class MyClass {\n *    debounceable(10)\n *    myFn() { ... }\n *  }\n */\nexport function debounceable(duration, immediate) {\n  return function innerDecorator(target, key, descriptor) {\n    return {\n      configurable: true,\n      enumerable: descriptor.enumerable,\n      get: function getter() {\n        Object.defineProperty(this, key, {\n          configurable: true,\n          enumerable: descriptor.enumerable,\n          value: debounce(descriptor.value, duration, immediate)\n        });\n\n        return this[key];\n      }\n    };\n  };\n}\n\nexport function throttle(func, wait, options: any = {}) {\n  var context, args, result;\n  var timeout = null;\n  var previous: any = 0;\n  var later = function() {\n    previous = options.leading === false ? 0 : new Date();\n    timeout = null;\n    result = func.apply(context, args);\n  };\n  return function() {\n    var now = new Date();\n    if (!previous && options.leading === false) {\n      previous = now;\n    }\n    var remaining: any = wait - (now.getTime() - previous);\n    context = this;\n    args = arguments;\n    if (remaining <= 0) {\n      clearTimeout(timeout);\n      timeout = null;\n      previous = now;\n      result = func.apply(context, args);\n    } else if (!timeout && options.trailing !== false) {\n      timeout = setTimeout(later, remaining);\n    }\n    return result;\n  };\n}\n\n/**\n * Throttle decorator\n *\n *  class MyClass {\n *    throttleable(10)\n *    myFn() { ... }\n *  }\n */\nexport function throttleable(duration, options) {\n  return function innerDecorator(target, key, descriptor) {\n    return {\n      configurable: true,\n      enumerable: descriptor.enumerable,\n      get: function getter() {\n        Object.defineProperty(this, key, {\n          configurable: true,\n          enumerable: descriptor.enumerable,\n          value: throttle(descriptor.value, duration, options)\n        });\n\n        return this[key];\n      }\n    };\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// node_modules/tslint-loader!./src/utils/throttle.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { AbstractControlDirective } from './abstract_control_directive';\nfunction unimplemented() {\n    throw new Error('unimplemented');\n}\n/**\n * A base class that all control directive extend.\n * It binds a {@link FormControl} object to a DOM element.\n *\n * Used internally by Angular forms.\n *\n * @stable\n */\nexport var NgControl = (function (_super) {\n    __extends(NgControl, _super);\n    function NgControl() {\n        _super.apply(this, arguments);\n        /** @internal */\n        this._parent = null;\n        this.name = null;\n        this.valueAccessor = null;\n        /** @internal */\n        this._rawValidators = [];\n        /** @internal */\n        this._rawAsyncValidators = [];\n    }\n    Object.defineProperty(NgControl.prototype, \"validator\", {\n        get: function () { return unimplemented(); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgControl.prototype, \"asyncValidator\", {\n        get: function () { return unimplemented(); },\n        enumerable: true,\n        configurable: true\n    });\n    return NgControl;\n}(AbstractControlDirective));\n//# sourceMappingURL=ng_control.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@angular/forms/src/directives/ng_control.js\n// module id = 77\n// module chunks = 1","export function trimLabel(s, max = 16): string {\n  if(typeof s !== 'string') {\n    if(typeof s === 'number') {\n      return s + '';\n    } else {\n      return '';\n    }\n  }\n\n  if(s.length <= max) {\n    return s;\n  } else {\n    return `${s.slice(0, max).trim()}...`;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// node_modules/tslint-loader!./src/common/trim-label.helper.ts","exports = module.exports = require(\"./../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"body {\\n  margin: 0;\\n  padding: 0;\\n  font-family: 'RobotoDraft', 'Roboto', 'Helvetica Neue, Helvetica, Arial', sans-serif;\\n  font-style: normal;\\n  font-weight: 300;\\n  font-size: 1.4rem;\\n  line-height: 2rem;\\n  letter-spacing: 0.01rem;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n  text-rendering: optimizeLegibility;\\n  display: -ms-flexbox;\\n  display: flex;\\n  min-height: 100vh;\\n  -ms-flex-direction: column;\\n      flex-direction: column;\\n  overflow: hidden; }\\n\\nmain {\\n  display: -ms-flexbox;\\n  display: flex;\\n  -ms-flex: 1;\\n      flex: 1;\\n  -ms-flex-align: center;\\n      align-items: center;\\n  -ms-flex-pack: center;\\n      justify-content: center; }\\n  main .chart-col {\\n    -ms-flex: 2;\\n        flex: 2;\\n    text-align: center; }\\n    main .chart-col .chart-view {\\n      margin: 20px auto; }\\n  main .sidebar {\\n    overflow-y: auto;\\n    height: 100vh;\\n    padding: 0 20px 20px 20px;\\n    background: #2f3646;\\n    color: #fff;\\n    font-size: .6em;\\n    min-width: 280px; }\\n    main .sidebar h1 {\\n      color: #1f89ff;\\n      font-weight: 100;\\n      text-transform: uppercase; }\\n      main .sidebar h1 strong {\\n        font-weight: 700; }\\n      main .sidebar h1 small {\\n        display: block;\\n        font-size: .4em;\\n        line-height: 1.3em;\\n        color: white; }\\n    main .sidebar input[type=text],\\n    main .sidebar select {\\n      width: 100%; }\\n    main .sidebar h3 {\\n      padding: 0;\\n      margin: 10px 0 0 0;\\n      text-transform: uppercase;\\n      color: #a8b2c7; }\\n    main .sidebar pre {\\n      background: #1b1e27;\\n      font-size: 12px;\\n      line-height: 1em;\\n      max-height: 400px;\\n      overflow: auto;\\n      padding: 15px; }\\n\", \"\", {\"version\":3,\"sources\":[\"/./demo/demo/demo.scss\"],\"names\":[],\"mappings\":\"AAAA;EAEE,UAAS;EACT,WAAW;EAEX,qFAAqF;EACrF,mBAAmB;EACnB,iBAAiB;EACjB,kBAAkB;EAClB,kBAAkB;EAClB,wBAAwB;EACxB,oCAAoC;EACpC,mCAAmC;EACnC,mCAAmC;EAEnC,qBAAc;EAAd,cAAc;EACd,kBAAkB;EAClB,2BAAuB;MAAvB,uBAAuB;EACnB,iBAAiB,EACtB;;AAED;EACE,qBAAc;EAAd,cAAc;EACd,YAAQ;MAAR,QAAQ;EACR,uBAAoB;MAApB,oBAAoB;EACpB,sBAAwB;MAAxB,wBAAwB,EA2DzB;EA/DD;IAOI,YAAQ;QAAR,QAAQ;IACR,mBAAmB,EAKpB;IAbH;MAWM,kBAAkB,EACnB;EAZL;IAgBI,iBAAiB;IACjB,cAAc;IAEd,0BAA0B;IAC1B,oBAAoB;IACpB,YAAY;IACZ,gBAAgB;IAChB,iBAAiB,EAuClB;IA9DH;MA0BM,eAAe;MACf,iBAAiB;MACjB,0BAA0B,EAY3B;MAxCL;QA+BQ,iBAAiB,EAClB;MAhCP;QAmCQ,eAAe;QACf,gBAAgB;QAChB,mBAAmB;QACnB,aAAa,EACd;IAvCP;;MA4CM,YAAY,EACb;IA7CL;MAgDM,WAAW;MACX,mBAAmB;MACnB,0BAA0B;MAC1B,eAAe,EAChB;IApDL;MAuDM,oBAAoB;MACpB,gBAAgB;MAChB,iBAAiB;MACjB,kBAAkB;MAClB,eAAe;MACf,cAAc,EACf\",\"file\":\"demo.scss\",\"sourcesContent\":[\"body {\\n  // background: #1b1e27;\\n  margin:0;\\n  padding: 0;\\n\\n  font-family: 'RobotoDraft', 'Roboto', 'Helvetica Neue, Helvetica, Arial', sans-serif;\\n  font-style: normal;\\n  font-weight: 300;\\n  font-size: 1.4rem;\\n  line-height: 2rem;\\n  letter-spacing: 0.01rem;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n  text-rendering: optimizeLegibility;\\n\\n  display: flex;\\n  min-height: 100vh;\\n  flex-direction: column;\\n      overflow: hidden;\\n}\\n\\nmain {\\n  display: flex;\\n  flex: 1;\\n  align-items: center;\\n  justify-content: center;\\n\\n  .chart-col {\\n    flex: 2;\\n    text-align: center;\\n\\n    .chart-view {\\n      margin: 20px auto;\\n    }\\n  }\\n\\n  .sidebar {\\n    overflow-y: auto;\\n    height: 100vh;\\n\\n    padding: 0 20px 20px 20px;\\n    background: #2f3646;\\n    color: #fff;\\n    font-size: .6em;\\n    min-width: 280px;\\n\\n    h1 {\\n      color: #1f89ff;\\n      font-weight: 100;\\n      text-transform: uppercase;\\n\\n      strong {\\n        font-weight: 700;\\n      }\\n\\n      small {\\n        display: block;\\n        font-size: .4em;\\n        line-height: 1.3em;\\n        color: white;\\n      }\\n    }\\n\\n    input[type=text],\\n    select {\\n      width: 100%;\\n    }\\n\\n    h3 {\\n      padding: 0;\\n      margin: 10px 0 0 0;\\n      text-transform: uppercase;\\n      color: #a8b2c7;\\n    }\\n\\n    pre {\\n      background: #1b1e27;\\n      font-size: 12px;\\n      line-height: 1em;\\n      max-height: 400px;\\n      overflow: auto;\\n      padding: 15px;\\n    }\\n  }\\n}\\n\"],\"sourceRoot\":\"webpack://\"}]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader?sourceMap!./~/postcss-loader?sourceMap!./~/sass-loader?sourceMap!./demo/demo.scss\n// module id = 899\n// module chunks = 1","exports = module.exports = require(\"./../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".a2d3 {\\n  float: left; }\\n  .a2d3.bar:hover, .a2d3.cell:hover, .a2d3.arc:hover, .a2d3.card:hover {\\n    opacity: 0.8; }\\n  .a2d3.area {\\n    opacity: 0.6; }\\n  .a2d3.circle:hover {\\n    cursor: pointer; }\\n  .a2d3.treemap .cell {\\n    cursor: pointer; }\\n    .a2d3.treemap .cell foreignObject {\\n      pointer-events: none; }\\n    .a2d3.treemap .cell p {\\n      text-align: center;\\n      pointer-events: none; }\\n\\n.label {\\n  font-size: 12px;\\n  font-weight: normal; }\\n\\n.gridline-path {\\n  stroke: rgba(200, 200, 200, 0.3);\\n  stroke-width: 0.5;\\n  fill: none; }\\n\\n.gridline-path-shadow {\\n  stroke: black; }\\n\\n.a2d3-container {\\n  height: 100%; }\\n  .a2d3-container .status-message {\\n    font-size: 14px;\\n    text-align: center;\\n    position: relative;\\n    top: 43%;\\n    color: #999; }\\n  .a2d3-container .icon-loading {\\n    color: #999;\\n    font-size: 32px; }\\n\\n.brush .background {\\n  visibility: visible !important;\\n  fill: rgba(255, 255, 255, 0.03); }\\n\\n.brush .extent {\\n  stroke: none;\\n  fill-opacity: .3;\\n  shape-rendering: 'crispEdges'; }\\n\\n.legend {\\n  display: inline-block;\\n  float: left; }\\n  .legend .legend-title {\\n    color: #76818a;\\n    margin-left: 10px;\\n    margin-bottom: 5px;\\n    font-size: 14px;\\n    font-weight: bold; }\\n  .legend ul, .legend li {\\n    padding: 0;\\n    margin: 0;\\n    list-style: none; }\\n  .legend .legend-wrap {\\n    width: 90%; }\\n  .legend .legend-labels {\\n    line-height: 85%;\\n    list-style: none;\\n    text-align: left;\\n    float: left;\\n    width: 100%;\\n    border-radius: 3px; }\\n  .legend .legend-label {\\n    cursor: pointer;\\n    font-size: 90%;\\n    margin: 8px;\\n    color: #76818a; }\\n    .legend .legend-label.active {\\n      color: #FFF; }\\n  .legend .legend-label-color {\\n    display: inline-block;\\n    height: 15px;\\n    width: 15px;\\n    margin-right: 5px;\\n    color: #5b646b;\\n    border-radius: 3px; }\\n  .legend .legend-label-text {\\n    display: inline-block;\\n    vertical-align: top;\\n    line-height: 15px;\\n    font-size: 12px; }\\n  .legend .legend-icon {\\n    color: #4d9df6;\\n    margin-right: 5px; }\\n  .legend .legend-title-text {\\n    vertical-align: bottom;\\n    display: inline-block;\\n    line-height: 16px;\\n    overflow: hidden;\\n    white-space: nowrap;\\n    text-overflow: ellipsis;\\n    width: 80%; }\\n\\n.advanced-pie {\\n  float: left; }\\n\\n.advanced-pie-legend {\\n  float: left; }\\n  .advanced-pie-legend .total-value {\\n    font-size: 36px; }\\n  .advanced-pie-legend .total-label {\\n    font-size: 24px;\\n    margin-bottom: 19px; }\\n  .advanced-pie-legend .legend-items-container {\\n    width: 100%; }\\n    .advanced-pie-legend .legend-items-container .legend-items {\\n      white-space: nowrap;\\n      overflow: auto; }\\n      .advanced-pie-legend .legend-items-container .legend-items .legend-item {\\n        margin-right: 20px;\\n        display: inline-block; }\\n        .advanced-pie-legend .legend-items-container .legend-items .legend-item .item-value {\\n          font-size: 24px;\\n          margin-top: -6px;\\n          margin-left: 11px; }\\n        .advanced-pie-legend .legend-items-container .legend-items .legend-item .item-label {\\n          font-size: 12px;\\n          opacity: 0.7;\\n          margin-left: 11px;\\n          margin-top: -6px; }\\n        .advanced-pie-legend .legend-items-container .legend-items .legend-item .item-percent {\\n          font-size: 24px;\\n          opacity: 0.7;\\n          margin-left: 11px; }\\n        .advanced-pie-legend .legend-items-container .legend-items .legend-item .item-color {\\n          width: 4px;\\n          height: 32px;\\n          float: left;\\n          margin-right: 7px; }\\n\", \"\", {\"version\":3,\"sources\":[\"/./src/src/a2d3.scss\"],\"names\":[],\"mappings\":\"AAAA;EACE,YAAY,EA6Bb;EA9BD;IAKM,aAAa,EACd;EANL;IASI,aAAa,EACd;EAVH;IAaM,gBAAgB,EACjB;EAdL;IAmBM,gBAAgB,EASjB;IA5BL;MAsBQ,qBAAqB,EACtB;IAvBP;MAyBQ,mBAAmB;MACnB,qBAAqB,EACtB;;AAKP;EACE,gBAAgB;EAChB,oBAAoB,EACrB;;AAED;EACE,iCAAY;EACZ,kBAAkB;EAClB,WAAW,EACZ;;AAED;EACE,cAAY,EACb;;AAED;EACE,aAAa,EAcd;EAfD;IAII,gBAAgB;IAChB,mBAAmB;IACnB,mBAAmB;IACnB,SAAS;IACT,YAAY,EACb;EATH;IAYI,YAAY;IACZ,gBAAgB,EACjB;;AAGH;EAEI,+BAA+B;EAC/B,gCAAU,EACX;;AAJH;EAMI,aAAa;EACb,iBAAiB;EACjB,8BAA8B,EAC/B;;AAGH;EACE,sBAAsB;EACtB,YAAY,EAqEb;EAvED;IAKI,eAAe;IACf,kBAAkB;IAClB,mBAAmB;IACnB,gBAAgB;IAChB,kBAAkB,EACnB;EAVH;IAaI,WAAW;IACX,UAAU;IACV,iBAAiB,EAClB;EAhBH;IAmBI,WAAW,EACZ;EApBH;IAsBI,iBAAiB;IACjB,iBAAiB;IACjB,iBAAiB;IACjB,YAAY;IACZ,YAAY;IACZ,mBAAmB,EACpB;EA5BH;IA+BI,gBAAgB;IAChB,eAAe;IACf,YAAY;IACZ,eAAe,EAKhB;IAvCH;MAqCM,YAAY,EACb;EAtCL;IA0CI,sBAAsB;IACtB,aAAa;IACb,YAAY;IACZ,kBAAkB;IAClB,eAAe;IACf,mBAAmB,EACpB;EAhDH;IAmDI,sBAAsB;IACtB,oBAAoB;IACpB,kBAAkB;IAClB,gBAAgB,EACjB;EAvDH;IA0DI,eAAe;IACf,kBAAkB,EACnB;EA5DH;IA+DI,uBAAuB;IACvB,sBAAsB;IACtB,kBAAkB;IAClB,iBAAiB;IACjB,oBAAoB;IACpB,wBAAwB;IACxB,WAAW,EACZ;;AAGH;EACE,YAAY,EACb;;AAED;EACE,YAAY,EAgDb;EAjDD;IAGI,gBACD,EAAC;EAJJ;IAMI,gBAAgB;IAChB,oBAAoB,EACrB;EARH;IAWI,YAAY,EAqCb;IAhDH;MAcM,oBAAoB;MACpB,eAAe,EAgChB;MA/CL;QAkBQ,mBAAmB;QACnB,sBAAsB,EA2BvB;QA9CP;UAsBU,gBAAgB;UAChB,iBAAiB;UACjB,kBAAkB,EACnB;QAzBT;UA4BU,gBAAgB;UAChB,aAAa;UACb,kBAAkB;UAClB,iBAAiB,EAClB;QAhCT;UAmCU,gBAAgB;UAChB,aAAa;UACb,kBAAkB,EACnB;QAtCT;UAyCU,WAAW;UACX,aAAa;UACb,YAAY;UACZ,kBAAkB,EACnB\",\"file\":\"a2d3.scss\",\"sourcesContent\":[\".a2d3 {\\n  float: left;\\n\\n  &.bar, &.cell, &.arc, &.card {\\n    &:hover {\\n      opacity: 0.8;\\n    }\\n  }\\n  &.area {\\n    opacity: 0.6;\\n  }\\n  &.circle {\\n    &:hover {\\n      cursor: pointer;\\n    }\\n  }\\n\\n  &.treemap {\\n    .cell {\\n      cursor: pointer;\\n\\n      foreignObject {\\n        pointer-events: none;\\n      }\\n      p {\\n        text-align: center;\\n        pointer-events: none;\\n      }\\n    }\\n  }\\n}\\n\\n.label {\\n  font-size: 12px;\\n  font-weight: normal;\\n}\\n\\n.gridline-path {\\n  stroke: rgba(200, 200, 200, 0.3);\\n  stroke-width: 0.5;\\n  fill: none;\\n}\\n\\n.gridline-path-shadow {\\n  stroke: rgba(0, 0, 0, 1);\\n}\\n\\n.a2d3-container {\\n  height: 100%;\\n\\n  .status-message {\\n    font-size: 14px;\\n    text-align: center;\\n    position: relative;\\n    top: 43%;\\n    color: #999;\\n  }\\n\\n  .icon-loading {\\n    color: #999;\\n    font-size: 32px;\\n  }\\n}\\n\\n.brush {\\n  .background {\\n    visibility: visible !important;\\n    fill: rgba(255, 255, 255, 0.03);\\n  }\\n  .extent {\\n    stroke: none;\\n    fill-opacity: .3;\\n    shape-rendering: 'crispEdges';\\n  }\\n}\\n\\n.legend {\\n  display: inline-block;\\n  float: left;\\n\\n  .legend-title {\\n    color: #76818a;\\n    margin-left: 10px;\\n    margin-bottom: 5px;\\n    font-size: 14px;\\n    font-weight: bold;\\n  }\\n\\n  ul, li {\\n    padding: 0;\\n    margin: 0;\\n    list-style: none;\\n  }\\n\\n  .legend-wrap {\\n    width: 90%;\\n  }\\n  .legend-labels {\\n    line-height: 85%;\\n    list-style: none;\\n    text-align: left;\\n    float: left;\\n    width: 100%;\\n    border-radius: 3px;\\n  }\\n\\n  .legend-label {\\n    cursor: pointer;\\n    font-size: 90%;\\n    margin: 8px;\\n    color: #76818a;\\n\\n    &.active {\\n      color: #FFF;\\n    }\\n  }\\n\\n  .legend-label-color {\\n    display: inline-block;\\n    height: 15px;\\n    width: 15px;\\n    margin-right: 5px;\\n    color: #5b646b;\\n    border-radius: 3px;\\n  }\\n\\n  .legend-label-text {\\n    display: inline-block;\\n    vertical-align: top;\\n    line-height: 15px;\\n    font-size: 12px;\\n  }\\n\\n  .legend-icon {\\n    color: #4d9df6;\\n    margin-right: 5px;\\n  }\\n\\n  .legend-title-text {\\n    vertical-align: bottom;\\n    display: inline-block;\\n    line-height: 16px;\\n    overflow: hidden;\\n    white-space: nowrap;\\n    text-overflow: ellipsis;\\n    width: 80%;\\n  }\\n}\\n\\n.advanced-pie {\\n  float: left;\\n}\\n\\n.advanced-pie-legend {\\n  float: left;\\n  .total-value {\\n    font-size: 36px\\n  }\\n  .total-label {\\n    font-size: 24px;\\n    margin-bottom: 19px;\\n  }\\n\\n  .legend-items-container {\\n    width: 100%;\\n\\n    .legend-items {\\n      white-space: nowrap;\\n      overflow: auto;\\n\\n      .legend-item {\\n        margin-right: 20px;\\n        display: inline-block;\\n\\n        .item-value {\\n          font-size: 24px;\\n          margin-top: -6px;\\n          margin-left: 11px;\\n        }\\n\\n        .item-label {\\n          font-size: 12px;\\n          opacity: 0.7;\\n          margin-left: 11px;\\n          margin-top: -6px;\\n        }\\n\\n        .item-percent {\\n          font-size: 24px;\\n          opacity: 0.7;\\n          margin-left: 11px;\\n        }\\n\\n        .item-color {\\n          width: 4px;\\n          height: 32px;\\n          float: left;\\n          margin-right: 7px;\\n        }\\n      }\\n    }\\n  }\\n}\\n\"],\"sourceRoot\":\"webpack://\"}]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader?sourceMap!./~/postcss-loader?sourceMap!./~/sass-loader?sourceMap!./src/a2d3.scss\n// module id = 900\n// module chunks = 1","exports = module.exports = require(\"./../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".sw-popover {\\n  position: absolute;\\n  background: #fff;\\n  color: #999;\\n  border-radius: 7px;\\n  z-index: 5000;\\n  opacity: 0;\\n  display: block;\\n  border: 1px solid rgba(0, 0, 0, 0.19);\\n  box-shadow: 3px 3px 5px 0px rgba(65, 73, 81, 0.14); }\\n  .sw-popover h1, .sw-popover h2, .sw-popover h3, .sw-popover h4, .sw-popover h5, .sw-popover h6 {\\n    color: #272e33; }\\n  .sw-popover .popover-caret {\\n    position: absolute;\\n    z-index: 5001;\\n    width: 0;\\n    height: 0; }\\n    .sw-popover .popover-caret.caret-left {\\n      border-top: 10px solid transparent;\\n      border-bottom: 10px solid transparent;\\n      border-left: 10px solid #FFF; }\\n    .sw-popover .popover-caret.caret-top {\\n      border-left: 10px solid transparent;\\n      border-right: 10px solid transparent;\\n      border-top: 10px solid #fff; }\\n    .sw-popover .popover-caret.caret-right {\\n      border-top: 10px solid transparent;\\n      border-bottom: 10px solid transparent;\\n      border-right: 10px solid #FFF; }\\n    .sw-popover .popover-caret.caret-bottom {\\n      border-left: 10px solid transparent;\\n      border-right: 10px solid transparent;\\n      border-bottom: 10px solid #FFF; }\\n  .sw-popover header {\\n    padding: 15px 20px; }\\n    .sw-popover header h1 {\\n      font-size: 16px;\\n      font-weight: 600;\\n      margin: 0; }\\n    .sw-popover header a, .sw-popover header a:hover, .sw-popover header a:focus {\\n      color: #5ea1df; }\\n  .sw-popover p {\\n    color: #999 !important; }\\n  .sw-popover .list {\\n    list-style-type: none;\\n    margin: 0px;\\n    padding: 0px; }\\n    .sw-popover .list .main-text {\\n      display: block;\\n      color: #73777b; }\\n    .sw-popover .list .sub-text {\\n      color: #afafaf;\\n      font-size: 12px; }\\n    .sw-popover .list li {\\n      border-top: 1px solid #f1f1f1;\\n      margin: 0;\\n      background: #fff; }\\n      .sw-popover .list li .list-link {\\n        padding: 10px 20px;\\n        display: block;\\n        cursor: pointer; }\\n      .sw-popover .list li:hover {\\n        background: #eff5fc; }\\n    .sw-popover .list .inactive, .sw-popover .list .inactive:hover {\\n      padding: 10px 20px;\\n      background: none; }\\n\\n.sw-popover-text {\\n  padding: 10px;\\n  color: #000;\\n  font-weight: 600;\\n  font-size: 12px; }\\n\\n.sw-popover-right {\\n  transform: translate3d(10, 0, 0); }\\n\\n.sw-popover-left {\\n  transform: translate3d(-10px, 0, 0); }\\n\\n.sw-popover-top {\\n  transform: translate3d(0, -10px, 0); }\\n\\n.sw-popover-bottom {\\n  transform: translate3d(0, 10px, 0); }\\n\\n.sw-popover-animation {\\n  opacity: 1;\\n  transition: opacity 0.3s, transform 0.3s;\\n  transform: translate3d(0, 0, 0); }\\n\", \"\", {\"version\":3,\"sources\":[\"/./src/common/popover/src/common/popover/popover.scss\"],\"names\":[],\"mappings\":\"AAAA;EACE,mBAAmB;EACnB,iBAAiB;EACjB,YAAY;EAGZ,mBAAmB;EACnB,cAAc;EACd,WAAW;EACX,eAAe;EACf,sCAAsB;EAItB,mDAAgC,EA0FjC;EAxGD;IAiBI,eAAe,EAChB;EAlBH;IAqBI,mBAAmB;IACnB,cAAc;IACd,SAAS;IACT,UAAU,EAyBX;IAjDH;MA2BM,mCAAmC;MACnC,sCAAsC;MACtC,6BAA6B,EAC9B;IA9BL;MAiCM,oCAAoC;MACpC,qCAAqC;MACrC,4BAA4B,EAC7B;IApCL;MAuCM,mCAAmC;MACnC,sCAAsC;MACtC,8BAA8B,EAC/B;IA1CL;MA6CM,oCAAoC;MACpC,qCAAqC;MACrC,+BAA+B,EAChC;EAhDL;IAoDI,mBAAmB,EAUpB;IA9DH;MAsDM,gBAAgB;MAChB,iBAAiB;MACjB,UAAU,EACX;IAzDL;MA4DM,eAAe,EAChB;EA7DL;IAiEI,uBAAuB,EACxB;EAlEH;IAqEI,sBAAsB;IACtB,YAAY;IACZ,aAAa,EAgCd;IAvGH;MA0EM,eAAe;MACf,eAAe,EAChB;IA5EL;MA+EM,eAAe;MACf,gBAAgB,EACjB;IAjFL;MAoFM,8BAA8B;MAC9B,UAAU;MACV,iBAAiB,EAWlB;MAjGL;QAyFQ,mBAAmB;QACnB,eAAe;QACf,gBAAgB,EACjB;MA5FP;QA+FQ,oBAAoB,EACrB;IAhGP;MAoGM,mBAAmB;MACnB,iBAAiB,EAClB;;AAIL;EACE,cAAc;EACd,YAAY;EACZ,iBAAiB;EACjB,gBAAgB,EACjB;;AAED;EAEE,iCAAsB,EACvB;;AAED;EAEE,oCAAsB,EACvB;;AAED;EAEE,oCAAsB,EACvB;;AAED;EAEE,mCAAsB,EACvB;;AAED;EACE,WAAW;EAEX,yCAAyC;EAEzC,gCAAsB,EACvB\",\"file\":\"popover.scss\",\"sourcesContent\":[\".sw-popover {\\n  position: absolute;\\n  background: #fff;\\n  color: #999;\\n  -webkit-border-radius: 7px;\\n  -moz-border-radius: 7px;\\n  border-radius: 7px;\\n  z-index: 5000;\\n  opacity: 0;\\n  display: block;\\n  border: 1px solid rgba(0, 0, 0, 0.19);\\n\\n  -webkit-box-shadow: 3px 3px 5px 0px rgba(65, 73, 81, 0.14);\\n  -moz-box-shadow: 3px 3px 5px 0px rgba(65, 73, 81, 0.14);\\n  box-shadow: 3px 3px 5px 0px rgba(65, 73, 81, 0.14);\\n\\n  h1, h2, h3, h4, h5, h6 {\\n    color: #272e33;\\n  }\\n\\n  .popover-caret {\\n    position: absolute;\\n    z-index: 5001;\\n    width: 0;\\n    height: 0;\\n\\n    &.caret-left {\\n      border-top: 10px solid transparent;\\n      border-bottom: 10px solid transparent;\\n      border-left: 10px solid #FFF;\\n    }\\n\\n    &.caret-top {\\n      border-left: 10px solid transparent;\\n      border-right: 10px solid transparent;\\n      border-top: 10px solid #fff;\\n    }\\n\\n    &.caret-right {\\n      border-top: 10px solid transparent;\\n      border-bottom: 10px solid transparent;\\n      border-right: 10px solid #FFF;\\n    }\\n\\n    &.caret-bottom {\\n      border-left: 10px solid transparent;\\n      border-right: 10px solid transparent;\\n      border-bottom: 10px solid #FFF;\\n    }\\n  }\\n\\n  header {\\n    padding: 15px 20px;\\n    h1 {\\n      font-size: 16px;\\n      font-weight: 600;\\n      margin: 0;\\n    }\\n\\n    a, a:hover, a:focus {\\n      color: #5ea1df;\\n    }\\n  }\\n\\n  p {\\n    color: #999 !important;\\n  }\\n\\n  .list {\\n    list-style-type: none;\\n    margin: 0px;\\n    padding: 0px;\\n\\n    .main-text {\\n      display: block;\\n      color: #73777b;\\n    }\\n\\n    .sub-text {\\n      color: #afafaf;\\n      font-size: 12px;\\n    }\\n\\n    li {\\n      border-top: 1px solid #f1f1f1;\\n      margin: 0;\\n      background: #fff;\\n\\n      .list-link {\\n        padding: 10px 20px;\\n        display: block;\\n        cursor: pointer;\\n      }\\n\\n      &:hover {\\n        background: #eff5fc;\\n      }\\n    }\\n\\n    .inactive, .inactive:hover {\\n      padding: 10px 20px;\\n      background: none;\\n    }\\n  }\\n}\\n\\n.sw-popover-text {\\n  padding: 10px;\\n  color: #000;\\n  font-weight: 600;\\n  font-size: 12px;\\n}\\n\\n.sw-popover-right {\\n  -webkit-transform: translate3d(10px, 0, 0);\\n  transform: translate3d(10, 0, 0);\\n}\\n\\n.sw-popover-left {\\n  -webkit-transform: translate3d(-10px, 0, 0);\\n  transform: translate3d(-10px, 0, 0);\\n}\\n\\n.sw-popover-top {\\n  -webkit-transform: translate3d(0, -10px, 0);\\n  transform: translate3d(0, -10px, 0);\\n}\\n\\n.sw-popover-bottom {\\n  -webkit-transform: translate3d(0, 10px, 0);\\n  transform: translate3d(0, 10px, 0);\\n}\\n\\n.sw-popover-animation {\\n  opacity: 1;\\n  -webkit-transition: opacity 0.3s, -webkit-transform 0.3s;\\n  transition: opacity 0.3s, transform 0.3s;\\n  -webkit-transform: translate3d(0, 0, 0);\\n  transform: translate3d(0, 0, 0);\\n}\\n\"],\"sourceRoot\":\"webpack://\"}]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader?sourceMap!./~/postcss-loader?sourceMap!./~/sass-loader?sourceMap!./src/common/popover/popover.scss\n// module id = 901\n// module chunks = 1","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { Subject } from 'rxjs/Subject';\nexport { Observable } from 'rxjs/Observable';\nexport { Subject } from 'rxjs/Subject';\n/**\n * Use by directives and components to emit custom Events.\n *\n * ### Examples\n *\n * In the following example, `Zippy` alternatively emits `open` and `close` events when its\n * title gets clicked:\n *\n * ```\n * @Component({\n *   selector: 'zippy',\n *   template: `\n *   <div class=\"zippy\">\n *     <div (click)=\"toggle()\">Toggle</div>\n *     <div [hidden]=\"!visible\">\n *       <ng-content></ng-content>\n *     </div>\n *  </div>`})\n * export class Zippy {\n *   visible: boolean = true;\n *   @Output() open: EventEmitter<any> = new EventEmitter();\n *   @Output() close: EventEmitter<any> = new EventEmitter();\n *\n *   toggle() {\n *     this.visible = !this.visible;\n *     if (this.visible) {\n *       this.open.emit(null);\n *     } else {\n *       this.close.emit(null);\n *     }\n *   }\n * }\n * ```\n *\n * The events payload can be accessed by the parameter `$event` on the components output event\n * handler:\n *\n * ```\n * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n * ```\n *\n * Uses Rx.Observable but provides an adapter to make it work as specified here:\n * https://github.com/jhusain/observable-spec\n *\n * Once a reference implementation of the spec is available, switch to it.\n * @stable\n */\nexport var EventEmitter = (function (_super) {\n    __extends(EventEmitter, _super);\n    /**\n     * Creates an instance of [EventEmitter], which depending on [isAsync],\n     * delivers events synchronously or asynchronously.\n     */\n    function EventEmitter(isAsync) {\n        if (isAsync === void 0) { isAsync = false; }\n        _super.call(this);\n        this.__isAsync = isAsync;\n    }\n    EventEmitter.prototype.emit = function (value) { _super.prototype.next.call(this, value); };\n    EventEmitter.prototype.subscribe = function (generatorOrNext, error, complete) {\n        var schedulerFn;\n        var errorFn = function (err) { return null; };\n        var completeFn = function () { return null; };\n        if (generatorOrNext && typeof generatorOrNext === 'object') {\n            schedulerFn = this.__isAsync ? function (value /** TODO #9100 */) {\n                setTimeout(function () { return generatorOrNext.next(value); });\n            } : function (value /** TODO #9100 */) { generatorOrNext.next(value); };\n            if (generatorOrNext.error) {\n                errorFn = this.__isAsync ? function (err) { setTimeout(function () { return generatorOrNext.error(err); }); } :\n                    function (err) { generatorOrNext.error(err); };\n            }\n            if (generatorOrNext.complete) {\n                completeFn = this.__isAsync ? function () { setTimeout(function () { return generatorOrNext.complete(); }); } :\n                    function () { generatorOrNext.complete(); };\n            }\n        }\n        else {\n            schedulerFn = this.__isAsync ? function (value /** TODO #9100 */) {\n                setTimeout(function () { return generatorOrNext(value); });\n            } : function (value /** TODO #9100 */) { generatorOrNext(value); };\n            if (error) {\n                errorFn =\n                    this.__isAsync ? function (err) { setTimeout(function () { return error(err); }); } : function (err) { error(err); };\n            }\n            if (complete) {\n                completeFn =\n                    this.__isAsync ? function () { setTimeout(function () { return complete(); }); } : function () { complete(); };\n            }\n        }\n        return _super.prototype.subscribe.call(this, schedulerFn, errorFn, completeFn);\n    };\n    return EventEmitter;\n}(Subject));\n//# sourceMappingURL=async.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@angular/forms/src/facade/async.js\n// module id = 94\n// module chunks = 1"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC1EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACxHA;AACA;AACA;AACA;;;;;;;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC/MA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACpBA;AACA;AACA;AACA;AAEA;AACA;AAOA;AAAA;AAAA;AALA;AAAA;AACA;AACA;AACA;AACA;;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;ACnxNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACzDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AChnJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACjtzBA;AAAA;AAqCA;AAlCA;AACA;AACA;AAGA;AACA;AAEA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAKA;AAAA;AArCA;;;;;;;;;;ACMA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAzBA;;;;;;;;;;ACNA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AAxBA;AA0BA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AA3BA;;;;;;;;;AClvMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AClxvNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACjrPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACfnDA;AAqDA;AACA;AACA;AACA;AACA;;;;;;;;;AC3DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACjBA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAXA;;;;;;;;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AClrJA;AAMA;AAEA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AAEA;AACA;AAfA;AAeA;AAAA;;;;;;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AChDA;AACA;AACA;AACA;AACA;AAsWA;AAiCA;AAhCA;AAGA;AAKA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AAGA;AAGA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAxcA;AAAA;AACA;AACA;AAiWA;;AAAA;AAsGA;AAAA;AArGA;;;;;;;;;;AC1WA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAcA;AAAA;AAAA;AAZA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAAA;AACA;AAAA;AAAA;;;;;;;;;ACthIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACrneA;AAGA;AAUA;AAkKA;AA/JA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAGA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AAEA;AAAA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;;;AAxBA;;AAyBA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AA/KA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AAEA;AAAA;;AAAA;AApHA;AAAA;AACA;AACA;AAqFA;;AAAA;AA+LA;AAAA;AA9LA;;;;;;;;;;AChGA;AACA;AACA;AACA;AACA;AACA;AACA;AAyFA;AAAA;AA+BA;AACA;AAhBA;AAGA;AAUA;AAIA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAGA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;;;AATA;;AAUA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;;;AARA;;AASA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAaA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAlMA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AAEA;AAAA;;AAAA;AApHA;AAAA;AACA;AACA;AAoFA;;AAAA;AAmNA;AAAA;AAlNA;;;;;;;;;;AC/FA;AACA;AACA;AACA;AACA;AACA;AACA;AAuFA;AAAA;AAAA;AAAA;AAgBA;AAeA;AAwJA;AAtvKA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AAEA;AAAA;;AAAA;AApHA;AAAA;AACA;AACA;AAkFA;;AAAA;AAwLA;AAAA;AAvLA;;;;;;;;;;AC7FA;AACA;AACA;AACA;AACA;AACA;AAiBA;AAAA;AAAA;AAfA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAAA;AACA;AAAA;AAAA;;;;;;;;;;ACtBA;AACA;AACA;AAeA;AAAA;AAUA;AACA;AAGA;AAuFA;AArFA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAuCA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AA/FA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AAEA;AAAA;;AAAA;AA3BA;AAAA;AACA;AACA;AAUA;;AAAA;AAsGA;AAAA;AArGA;;;;;;;;;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAiCA;AAAA;AAAA;AA/BA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAAA;AACA;AAAA;AAAA;;;;;;;;;;AC9CA;AACA;AACA;AACA;AACA;AAsDA;AAAA;AAAA;AAAA;AAaA;AAGA;AASA;AAoGA;AAlGA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAjHA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AAEA;AAAA;;AAAA;AA7EA;AAAA;AACA;AACA;AAiDA;;AAAA;AA8HA;AAAA;AA7HA;;;;;;;;;;AC1DA;AACA;AACA;AACA;AACA;AA+CA;AAAA;AAAA;AAAA;AAYA;AAGA;AASA;AAiFA;AA/EA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AA7FA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AAEA;AAAA;;AAAA;AArEA;AAAA;AACA;AACA;AA0CA;;AAAA;AA0GA;AAAA;AAzGA;;;;;;;;;;ACnDA;AACA;AACA;AACA;AACA;AA+CA;AAAA;AAAA;AAAA;AAYA;AAGA;AASA;AA6FA;AA3FA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAzGA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AAEA;AAAA;;AAAA;AArEA;AAAA;AACA;AACA;AA0CA;;AAAA;AAsHA;AAAA;AArHA;;;;;;;;;;ACnDA;AACA;AACA;AACA;AACA;AACA;AA0CA;AAAA;AAAA;AAAA;AAWA;AAGA;AASA;AAgEA;AA9DA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AA7EA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AAEA;AAAA;;AAAA;AA/DA;AAAA;AACA;AACA;AAqCA;;AAAA;AAwFA;AAAA;AAvFA;;;;;;;;;;AC/CA;AACA;AACA;AACA;AACA;AAqDA;AAAA;AAAA;AAAA;AAaA;AAGA;AAOA;AAGA;AAmGA;AAjGA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAjHA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AAEA;AAAA;;AAAA;AA7EA;AAAA;AACA;AACA;AAgDA;;AAAA;AA8HA;AAAA;AA7HA;;;;;;;;;;ACzDA;AACA;AACA;AACA;AACA;AA+CA;AAAA;AAAA;AAAA;AAYA;AAGA;AASA;AAgFA;AA9EA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AA5FA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AAEA;AAAA;;AAAA;AArEA;AAAA;AACA;AACA;AA0CA;;AAAA;AAyGA;AAAA;AAxGA;;;;;;;;;;ACnDA;AACA;AACA;AACA;AACA;AA+CA;AAAA;AAAA;AAAA;AAaA;AAGA;AASA;AA6FA;AA3FA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAzGA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AAEA;AAAA;;AAAA;AAtEA;AAAA;AACA;AACA;AA0CA;;AAAA;AAuHA;AAAA;AAtHA;;;;;;;;;;ACnDA;AACA;AACA;AACA;AACA;AACA;AA0CA;AAAA;AAAA;AAAA;AAWA;AAGA;AASA;AAgEA;AA9DA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AA7EA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AAEA;AAAA;;AAAA;AA/DA;AAAA;AACA;AACA;AAqCA;;AAAA;AAwFA;AAAA;AAvFA;;;;;;;;;;AC/CA;AACA;AACA;AAuBA;AAonJA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AAEA;AAAA;;AAAA;AAjCA;AAAA;AACA;AACA;AAkBA;;AAAA;AAuJA;AAAA;AAtJA;;;;;;;;;;ACzBA;AACA;AACA;AACA;AACA;AA2CA;AAAA;AAAA;AAAA;AASA;AAGA;AASA;AA4BA;AA1BA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAzCA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AAEA;AAAA;;AAAA;AA9DA;AAAA;AACA;AACA;AAsCA;;AAAA;AAkDA;AAAA;AAjDA;;;;;;;;;;AC/CA;AAwBA;AAAA;AAMA;AAOA;AAsEA;AApEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AA7EA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AAEA;AAAA;;AAAA;AAnCA;AAAA;AACA;AACA;AAmBA;;AAAA;AAoFA;AAAA;AAnFA;;;;;;;;;;ACxBA;AACA;AAwBA;AAAA;AAMA;AAKA;AAGA;AAoFA;AAlFA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AA5FA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AAEA;AAAA;;AAAA;AApCA;AAAA;AACA;AACA;AAmBA;;AAAA;AAmGA;AAAA;AAlGA;;;;;;;;;;ACzBA;AACA;AACA;AAsBA;AAiBA;AARA;AACA;AACA;AAEA;AAEA;AAGA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AA/CA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AAEA;AAAA;;AAAA;AAnCA;AAAA;AACA;AACA;AAiBA;;AAAA;AAsDA;AAAA;AArDA;;;;;;;;;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AAOA;AAAA;AAAA;AALA;AAAA;AACA;AACA;AACA;AACA;;AAAA;AACA;AAAA;AAAA;;;;;;;;;;ACbA;AAgBA;AAAA;AAgDA;AAnCA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA7CA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AAnBA;AAAA;AACA;AACA;AAWA;;AAAA;AAiDA;AAAA;AAhDA;;;;;;;;;;AChBA;AACA;AAkCA;AAuBA;AApBA;AACA;AAEA;AAkBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AA9FA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AAvCA;AAAA;AACA;AACA;AA6BA;;AAAA;AAkGA;AAAA;AAjGA;;;;;;;;;;ACnCA;AA8BA;AAgBA;AAZA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AAGA;AACA;AA9CA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AAlCA;AAAA;AACA;AACA;AAwBA;;AAAA;AAkDA;AAAA;AAjDA;;;;;;;;;;AC9BA;AACA;AAqCA;AAyBA;AAtBA;AAEA;AAEA;AAmBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AA9HA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AA3CA;AAAA;AACA;AACA;AAgCA;;AAAA;AAkIA;AAAA;AAjIA;;;;;;;;;;ACtCA;AA8BA;AAgBA;AAZA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAGA;AACA;AAnDA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AAlCA;AAAA;AACA;AACA;AAwBA;;AAAA;AAuDA;AAAA;AAtDA;;;;;;;;;;AC9BA;AA+BA;AAAA;AAEA;AAGA;AAuCA;AA/BA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AA1CA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AAnCA;AAAA;AACA;AACA;AA0BA;;AAAA;AA6CA;AAAA;AA5CA;;;;;;;;;;AC/BA;AACA;AACA;AA+BA;AAAA;AAKA;AAOA;AA8DA;AA5DA;AACA;AACA;AAEA;AACA;AACA;AAEA;AASA;AACA;AAEA;AAAA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AArEA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AAEA;AAAA;;AAAA;AAzCA;AAAA;AACA;AACA;AA0BA;;AAAA;AA2EA;AAAA;AA1EA;;;;;;;;;;ACjCA;AAkBA;AAAA;AAWA;AASA;AAPA;AACA;AACA;AAEA;AACA;AACA;AAlBA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AAEA;AAAA;;AAAA;AA3BA;AAAA;AACA;AACA;AAaA;;AAAA;AAqBA;AAAA;AApBA;;;;;;;;;;AClBA;AAcA;AAAA;AAqDA;AA5CA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAjDA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AAnBA;AAAA;AACA;AACA;AASA;;AAAA;AAsDA;AAAA;AArDA;;;;;;;;;;ACdA;AAgBA;AAAA;AAOA;AANA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AApBA;AAAA;AACA;AACA;AAWA;;AAAA;AAQA;AAAA;AAPA;;;;;;;;;;AChBA;AACA;AA+BA;AAAA;AA8BA;AAtBA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA5BA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AAjCA;AAAA;AACA;AACA;AA0BA;;AAAA;AA+BA;AAAA;AA9BA;;;;;;;;;;AC7BA;AAMA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AApBA;AAAA;;;AAqBA;AACA;AAMA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAvFA;AAwFA;AAAA;AAzFA;;;;;;;;;;ACHA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AAAA;AAgGA;AA/FA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAhGA;;;;;;;;;;ACjCA;AACA;AACA;AACA;AAKA;AAwBA;AANA;AACA;AAEA;AACA;AAGA;AACA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;;AAKA;AA2CA;;AAKA;AACA;AACA;AACA;AAEA;AACA;AACA;;AAMA;AACA;AAGA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;;AAQA;AACA;AAIA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;;AAQA;AAoCA;;AAOA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AArOA;AAAA;;AAAA;AAGA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AAzBA;AAAA;AACA;AACA;;AAAA;AAoPA;AAAA;AAnPA;;;;;;;;;;ACRA;AA0BA;AAAA;AA4BA;AArBA;AACA;AACA;AACA;AAQA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AA1BA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AA3BA;AAAA;AACA;AACA;AAqBA;;AAAA;AA6BA;AAAA;AA5BA;;;;;;;;;;AC1BA;AAwBA;AAAA;AACA;AAIA;AAwBA;AAjBA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AAAA;AACA;AACA;AAEA;AA3BA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AA3BA;AAAA;AACA;AACA;AAmBA;;AAAA;AA8BA;AAAA;AA7BA;;;;;;;;;;ACxBA;AAwBA;AAAA;AAQA;AAOA;AALA;AACA;AACA;AACA;AACA;AATA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AA9BA;AAAA;AACA;AACA;AAmBA;;AAAA;AAgBA;AAAA;AAfA;;;;;;;;;;ACxBA;AACA;AACA;AACA;AAoBA;AAoBA;AATA;AAMA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAMA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AA7GA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AAEA;AAAA;;AAAA;AACA;AAAA;;AAAA;AApCA;AAAA;AACA;AACA;AAeA;;AAAA;AAwHA;AAAA;AAvHA;;;;;;;;;;ACvBA;AAqBA;AAAA;AASA;AAuCA;AArCA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AA3CA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AAEA;AAAA;;AAAA;AA5BA;AAAA;AACA;AACA;AAgBA;;AAAA;AAiDA;AAAA;AAhDA;;;;;;;;;;ACrBA;AACA;AACA;AA4BA;AAmBA;AAJA;AAEA;AAGA;AACA;AAEA;AACA;AAKA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AA/CA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AAEA;AAAA;;AAAA;AA3CA;AAAA;AACA;AACA;AAuBA;;AAAA;AA0DA;AAAA;AAzDA;;;;;;;;;;AC9BA;AACA;AACA;AACA;AACA;AAiDA;AAAA;AAAA;AAAA;AAeA;AAYA;AA2GA;AAzGA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAxHA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AAEA;AAAA;;AAAA;AA1EA;AAAA;AACA;AACA;AA4CA;;AAAA;AAuIA;AAAA;AAtIA;;;;;;;;;;ACrDA;AACA;AACA;AACA;AACA;AAeA;AAAA;AAAA;AAbA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAAA;AACA;AAAA;AAAA;;;;;;;;;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AAsFA;AAAA;AAAA;AAAA;AAYA;AAGA;AAUA;AAuDA;AArDA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAtEA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AAEA;AAAA;;AAAA;AA7GA;AAAA;AACA;AACA;AAiFA;;AAAA;AAiFA;AAAA;AAhFA;;;;;;;;;;AC5FA;AACA;AACA;AACA;AACA;AACA;AACA;AAkGA;AAAA;AAAA;AAAA;AAgBA;AAcA;AAsKA;AApKA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAOA;AACA;AAEA;AAkrLA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AAEA;AAAA;;AAAA;AA9HA;AAAA;AACA;AACA;AA6FA;;AAAA;AAqMA;AAAA;AApMA;;;;;;;;;;ACxGA;AACA;AACA;AACA;AACA;AACA;AAiBA;AAAA;AAAA;AAfA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAAA;AACA;AAAA;AAAA;;;;;;;;;;ACtBA;AACA;AACA;AAYA;AAAA;AAsCA;AA5BA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAjCA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AAlBA;AAAA;AACA;AACA;AAOA;;AAAA;AAuCA;AAAA;AAtCA;;;;;;;;;;ACdA;AAeA;AAAA;AAKA;AACA;AALA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AAEA;AAAA;;AAAA;AAlBA;AAAA;AACA;AACA;AAUA;;AAAA;AAOA;AAAA;AANA;;;;;;;;;;ACfA;AA+BA;AAAA;AAOA;AAqCA;AAnCA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAvCA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AAEA;AAAA;;AAAA;AAzBA;AAAA;AACA;AACA;AAeA;;AAAA;AA6CA;AAAA;AA5CA;;;;;;;;;;AC/BA;AACA;AACA;AA0CA;AAmBA;AAFA;AAGA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AAMA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAMA;AAEA;AACA;AACA;AA1EA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AAEA;AAAA;;AAAA;AAzDA;AAAA;AACA;AACA;AAqCA;;AAAA;AAqFA;AAAA;AApFA;;;;;;;;;;AC5CA;AACA;AACA;AACA;AACA;AAmBA;AAAA;AAAA;AAAA;AASA;AAIA;AAuCA;AArCA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAOA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AA3CA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AAEA;AAAA;;AAAA;AA9BA;AAAA;AACA;AACA;AAcA;;AAAA;AAqDA;AAAA;AApDA;;;;;;;;;;ACvBA;AACA;AACA;AACA;AACA;AAeA;AAAA;AAAA;AAbA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAAA;AACA;AAAA;AAAA;;;;;;;;;;ACnBA;AACA;AACA;AACA;AACA;AA+DA;AAAA;AAAA;AAAA;AAeA;AAKA;AAsEA;AApEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AASA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AA3EA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AAEA;AAAA;;AAAA;AA3EA;AAAA;AACA;AACA;AAoDA;;AAAA;AA2FA;AAAA;AA1FA;;;;;;;;;ACnhKA;AACA;AACA;AA8BA;AAqBA;AAJA;AAEA;AAGA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AA1EA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AAEA;AAAA;;AAAA;AA/CA;AAAA;AACA;AACA;AAyBA;;AAAA;AAqFA;AAAA;AApFA;;;;;;;;;;AChCA;AACA;AACA;AACA;AAyBA;AAAA;AAAA;AAAA;AASA;AAGA;AACA;AACA;AACA;AAGA;AAoDA;AAhDA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AA7DA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AAEA;AAAA;;AAAA;AAzCA;AAAA;AACA;AACA;AAoBA;;AAAA;AAuEA;AAAA;AAtEA;;;;;;;;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAuBA;AAAA;AAAA;AArBA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAAA;AACA;AAAA;AAAA;;;;;;;;;;AC/BA;AACA;AAiBA;AAYA;AALA;AACA;AAEA;AAGA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AA1FA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AAEA;AAAA;;AAAA;AAzBA;AAAA;AACA;AACA;AAYA;;AAAA;AAkGA;AAAA;AAjGA;;;;;;;;;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AAsDA;AAAA;AAAA;AAAA;AAUA;AAIA;AAqFA;AAnFA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AASA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAzFA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AAEA;AAAA;;AAAA;AAlEA;AAAA;AACA;AACA;AAiDA;;AAAA;AAoGA;AAAA;AAnGA;;;;;;;;;;AC5DA;AACA;AACA;AAyBA;AAeA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAtEA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AApCA;AAAA;AACA;AACA;AAoBA;;AAAA;AAgFA;AAAA;AA/EA;;;;;;;;;;AC3BA;AACA;AAsCA;AAAA;AAMA;AAEA;AACA;AAKA;AA6FA;AA3FA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AApGA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AAEA;AAAA;;AAAA;AAlDA;AAAA;AACA;AACA;AAiCA;;AAAA;AA4GA;AAAA;AA3GA;;;;;;;;;;ACvCA;AAkBA;AAAA;AAMA;AA6BA;AA3BA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AA/BA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AAEA;AAAA;;AAAA;AAtBA;AAAA;AACA;AACA;AAaA;;AAAA;AAoCA;AAAA;AAnCA;;;;;;;;;;AClBA;AAGA;AA6BA;AAeA;AAFA;AAGA;AACA;AAEA;AACA;AAIA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAzCA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AAEA;AAAA;;AAAA;AAxCA;AAAA;AACA;AACA;AAwBA;;AAAA;AAiDA;AAAA;AAhDA;;;;;;;;;;AChCA;AACA;AACA;AACA;AACA;AAmBA;AAAA;AAAA;AAAA;AAGA;AAIA;AA4CA;AAnCA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAhDA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AAEA;AAAA;;AAAA;AAxBA;AAAA;AACA;AACA;AAcA;;AAAA;AAoDA;AAAA;AAnDA;;;;;;;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAgBA;AAAA;AACA;AAfA;AAAA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAEA;;AAAA;AAEA;AAAA;AADA;;;;;;;;;;AC7CA;AACA;AACA;AACA;AACA;AAeA;AAAA;AAAA;AAbA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAAA;AACA;AAAA;AAAA;;;;;;;;;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA1BA;AAoCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAhBA;AAkBA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AA3BA;AAqCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAhBA;;;;;;;;;AC3FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnDA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AAdA;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;","sourceRoot":""}